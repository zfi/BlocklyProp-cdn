// Do not edit this file; automatically generated by build_propc.py.
"use strict";
var COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};goog.isString=function(a){return"string"==typeof a};goog.isBoolean=function(a){return"boolean"==typeof a};goog.isNumber=function(a){return"number"==typeof a};goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={}};
goog.define=function(a,b){var c=b;if(!COMPILED){var d=goog.global.CLOSURE_UNCOMPILED_DEFINES,e=goog.global.CLOSURE_DEFINES;d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)?c=d[a]:e&&void 0===e.nodeType&&Object.prototype.hasOwnProperty.call(e,a)&&(c=e[a])}goog.exportPath_(a,c)};goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(".")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};
goog.getScriptNonce=function(a){if(a&&a!=goog.global)return goog.getScriptNonce_(a.document);null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document));return goog.cspNonce_};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(a){return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};
goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.module.declareNamespace=goog.declareModuleId;goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};
COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={"goog.module":!0});goog.getObjectByName=function(a,b){for(var c=a.split("."),d=b||goog.global,e=0;e<c.length;e++)if(d=d[c[e]],!goog.isDefAndNotNull(d))return null;return d};goog.globalize=function(a,b){var c=b||goog.global,d;for(d in a)c[d]=a[d]};
goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.nullFunction=function(){};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";
goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch(b){a=!1}goog.hasBadLetScoping=a}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(a){return"(function(){"+a+"\n;})();\n"};
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};if(goog.isFunction(a))var c=a.call(void 0,{});else if(goog.isString(a))goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;if(goog.isString(d)&&d)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,
c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]={exports:c,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+d+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a){eval(a);return{}};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b,c){var d=goog.global.$jscomp;d||(goog.global.$jscomp=d={});var e=d.transpile;if(!e){var f=goog.basePath+goog.TRANSPILER,g=goog.loadFileSync_(f);if(g){(function(){eval(g+"\n//# sourceURL="+f)}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=
goog.global.$gwtExport.$jscomp.transpile;d=goog.global.$jscomp;e=d.transpile}}e||(e=d.transpile=function(a,b){goog.logToConsole_(b+" requires transpilation but no transpiler was found.");return a});return e(a,b,c)};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return"array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isFunction=function(a){return"function"==goog.typeOf(a)};
goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;
goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;")}catch(d){}if("undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1}if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=
!1;c.appendChild(b.createTextNode(a));b.head.appendChild(c);b.head.removeChild(c)}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};d=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(d):d};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};
goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if("undefined"!==typeof d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}if("string"!=typeof b&&"symbol"!=typeof b)throw Error("method names provided to goog.base must be a string or a symbol");
e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor;g;g=g.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};
COMPILED||(goog.global.COMPILED=COMPILED);goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};
goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b);return b};return d};goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};
goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH)&&goog.isString(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;
a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null;this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(a,b){e?d[a]=!0:b()?(c=a,d[a]=!1):e=d[a]=!0}function b(a){try{return!!eval(a)}catch(h){return!1}}
var c="es3",d={es3:!1},e=!1,f=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";a("es5",function(){return b("[1,].length==1")});a("es6",function(){return f.match(/Edge\/(\d+)(\.\d)*/i)?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')});
a("es6-impl",function(){return!0});a("es7",function(){return b("2 ** 2 == 4")});a("es8",function(){return b("async () => 1, true")});a("es9",function(){return b("({...rest} = {}), true")});a("es_next",function(){return!1});return{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(a,b){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var c=this.createRequiresTranspilation_();this.requiresTranspilation_=c.map;this.transpilationTarget_=
this.transpilationTarget_||c.target}if(a in this.requiresTranspilation_)return this.requiresTranspilation_[a]?!0:!goog.inHtmlDocument_()||"es6"!=b||"noModule"in goog.global.document.createElement("script")?!1:!0;throw Error("Unknown language mode: "+a);},goog.Transpiler.prototype.transpile=function(a,b){return goog.transpile_(a,b,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_=
{};this.idToPath_={};this.written_={};this.loadingDeps_=[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory(goog.transpiler_);this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){for(var e=[],f=0;f<a.length;f++){var g=this.getPathFromDeps_(a[f]);if(!g)throw Error("Unregonized namespace: "+a[f]);e.push(this.dependencies_[g])}g=goog.require;var h=0;
for(f=0;f<a.length;f++)g(a[f]),e[f].onLoad(function(){++h==a.length&&c()})}else c()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){var c=this.getPathFromDeps_(a);if(c&&(b||this.areDepsLoaded_(this.dependencies_[c].requires))){var d=this.deferredCallbacks_[c];d&&(delete this.deferredCallbacks_[c],d())}},
goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(a){var e=b.getPathFromDeps_(a);if(!e)throw Error("Bad dependency path or symbol: "+a);if(!b.written_[e]){b.written_[e]=!0;a=b.dependencies_[e];for(e=0;e<a.requires.length;e++)goog.isProvided_(a.requires[e])||d(a.requires[e]);c.push(a)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=this.depsToLoad_.concat(c);this.paused_||
a||this.loadDeps_()}else throw a="goog.require could not find: "+a,goog.logToConsole_(a),Error(a);},goog.DebugLoader_.prototype.loadDeps_=function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},pending:function(){for(var b=
[],c=0;c<a.loadingDeps_.length;c++)b.push(a.loadingDeps_[c]);return b},setModuleState:function(a){goog.moduleLoaderState_={type:a,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(a,b,c){c&&(goog.loadedModules_[c]={exports:b,type:goog.ModuleType.ES6,moduleId:c||""})},registerGoogModuleExports:function(a,b){goog.loadedModules_[a]={exports:b,type:goog.ModuleType.GOOG,moduleId:a}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(b){if(c)throw Error("Cannot register with defer after the call to load.");
a.defer_(d,b)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,
1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=
function(a){return a in this.idToPath_?this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,
b,c){},goog.LoadController.prototype.setModuleState=function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=
a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=
function(a){delete goog.Dependency.callbackMap_[a]},goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=
goog.global.document;if("complete"==b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var c=goog.Dependency.registerCallback_(function(b){goog.DebugLoader_.IS_OLD_IE_&&"complete"!=b.readyState||(goog.Dependency.unregisterCallback_(c),a.loaded())}),d=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?
' nonce="'+goog.getScriptNonce()+'"':"";b.write('<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+"=\"goog.Dependency.callback_('"+c+'\', this)" type="text/javascript" '+(goog.Dependency.defer_?"defer":"")+d+">\x3c/script>")}else{var e=b.createElement("script");e.defer=goog.Dependency.defer_;e.async=!1;e.type="text/javascript";(d=goog.getScriptNonce())&&e.setAttribute("nonce",d);goog.DebugLoader_.IS_OLD_IE_?(a.pause(),e.onreadystatechange=function(){if("loaded"==
e.readyState||"complete"==e.readyState)a.loaded(),a.resume()}):e.onload=function(){e.onload=null;a.loaded()};e.src=this.path;b.head.appendChild(e)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,
goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(a,b){b?d.write('<script type="module" crossorigin>'+b+"\x3c/script>"):d.write('<script type="module" crossorigin src="'+a+'">\x3c/script>')}function c(a,b){var c=d.createElement("script");c.defer=!0;c.async=!1;c.type="module";c.setAttribute("crossorigin",!0);var e=goog.getScriptNonce();e&&c.setAttribute("nonce",e);b?c.textContent=b:c.src=a;d.head.appendChild(c)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?
a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(b){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,b,goog.moduleLoaderState_.moduleName)});
f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+h+'", m)');var m=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(m);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+m+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in
goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=e.transform(e.contents_),e.contents_&&(e.contents_+="\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var c=e.contents_;e.contents_=null;goog.globalEval(c);if(f)var d=goog.moduleLoaderState_.moduleName}finally{f&&
a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),d)});a.loaded()}}function d(){var a=goog.global.document,b=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(b);c()});a.write('<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+b+'");')+"\x3c/script>")}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),this.contents_&&
goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):a.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length,h=g&&goog.DebugLoader_.IS_OLD_IE_;g=goog.Dependency.defer_&&(g||goog.isDocumentLoading_());if(h||g)a.defer(function(){c()});else{var m=goog.global.document;h=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global;if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!h){goog.Dependency.defer_=!0;a.pause();
var l=m.onreadystatechange;m.onreadystatechange=function(){"interactive"==m.readyState&&(m.onreadystatechange=l,c(),a.resume());goog.isFunction(l)&&l.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.TranspiledDependency=function(a,b,c,d,e,f){goog.TransformedDependency.call(this,a,b,c,d,e);this.transpiler=f},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),
goog.TranspiledDependency.prototype.transform=function(a){return this.transpiler.transpile(a,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,c,d,e,f,g){goog.TransformedDependency.call(this,a,b,c,d,e);this.needsTranspile_=f;
this.transpiler_=g},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){this.needsTranspile_&&(a=this.transpiler_.transpile(a,this.getPathName()));return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(a+"\n//# sourceURL="+this.path+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\n;return exports});\n//# sourceURL="+this.path+"\n"},goog.DebugLoader_.IS_OLD_IE_=
!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=b||[];a=a.replace(/\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d,goog.transpiler_.needsTranspile(d.lang||"es3",d.module));this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=function(a){this.transpiler=
a},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e,f){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e,f,this.transpiler):f?new goog.TranspiledDependency(a,b,c,d,e,this.transpiler):e.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=
function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});var array_contains=function(a,b){for(var c=0;c<a.length;c++)if(a[c]===b)return c;return null},colorPalette={defaultColors:{input:140,output:165,io:185,programming:205,functions:225,variables:250,math:275,binary:275,robot:295,heb:295,ab:320,protocols:340,system:320},grayscaleColors:{input:"#AAAAAA",output:"#222222",io:"#333333",programming:"#444444",functions:"#555555",variables:"#666666",math:"#777777",binary:"#777777",robot:"#888888",heb:"#888888",ab:"#999999",protocols:"#111111",system:"#999999"},
activePalette:null,getColor:function(a){return colorPalette.activePalette&&void 0!==colorPalette.activePalette[a]?colorPalette.activePalette[a]:"#000000"}};-1===document.referrer.indexOf("?")?colorPalette.activePalette=colorPalette.defaultColors:-1===document.referrer.split("?")[1].indexOf("grayscale=1")?colorPalette.activePalette=colorPalette.defaultColors:colorPalette.activePalette=colorPalette.grayscaleColors;Blockly.propc=new Blockly.Generator("propc");Blockly.HSV_SATURATION=.75;
Blockly.HSV_VALUE=.6;Blockly.RTL=!1;Blockly.propc.RESERVED_WORDS_&&""!==Blockly.propc.RESERVED_WORDS_||(Blockly.propc.RESERVED_WORDS_="INA,INB,OUTA,OUTB,DIRA,DIRB,CTRA,CTRB,PHSA,PHSB,CNT,CLKFREQ,auto,else,long,switch,break,enum,register,typedef,case,extern,return,union,char,float,short,unsigned,const,for,signed,void,continue,goto,sizeof,volatile,default,if,static,while,do,int,struct,_Packed,double,_bss_end,_bss_start,_byteReadyFlag,_byteToSend,_byteType,_C_LOCK,_clkfreq,_clkmodeval,_CLZSI,_CLZSI_ret,_cs,_doscanf,_doscanf_ct,_dosprnt,_driverlist,_FileDriver,_font,_gps_baud,_gps_rx_pin,_gps_tx_pin,_height,_hub_end,_intsprnt,_LMM_CALL_INDIRECT,_LMM_FCACHE_START,_LMM_RET,_load_start_adcACpropab_cog,_MASK_0000FFFF,_MASK_FFFFFFFF,_MULSI,_MULSI_ret,_rs,_rst,_safe_gets,_scanf_getf,_scanf_getl,_sclk,_screenLock,_servoPulseReps,_sid,_SimpleSerialDriver,_stack_end,_TMP0,_width,(float, int, long long, short, float, short, int),abd_abs,abd_blockGoto,abd_checkActivityBotStrings,abd_checkCenterPulseWidth,abd_checkForNoSignal,abd_checkForSwappedCables,abd_checkServoCalSupply,abd_cntrIdx,abd_cog,abd_dc,abd_dca,abd_displaySide,abd_dist,abd_distError,abd_ditherA,abd_ditherAa,abd_ditherAd,abd_ditherAp,abd_ditherV,abd_ditherVa,abd_ditherVd,abd_ditherVp,abd_dsr,abd_dvFlag,abd_ea,abd_ed,abd_edMax,abd_eeAddr,abd_elCnt,abd_encoders,abd_ePin,abd_ePinL,abd_ePinR,abd_gotoFlag,abd_gotoRampStep,abd_gotoSpeedLimit,abd_i,abd_intTabSetup,abd_nudgeCtr,abd_nudgeInc,abd_p,abd_rampStep,abd_record,abd_sample,abd_sampleCount,abd_senseEncoders,abd_spdmL,abd_spdmR,abd_spdrL,abd_spdrR,abd_speed,abd_speedd,abd_speedi,abd_speedLimit,abd_speedOld,abd_speedT,abd_sPin,abd_sPinL,abd_sPinR,abd_stack,abd_stopCtr,abd_stopPulseReps,abd_td,abd_tdst,abd_ticks,abd_ticksf,abd_ticksGuard,abd_ticksi,abd_trimB,abd_trimF,abd_trimticksB,abd_trimticksF,abd_us,abd_zdir,abd_zeroDelay,abort,abortChain__,abvolts_daCtrBits,abvolts_scale,accel,accel_shaken,accels,ad_in,ad_init,ad_volts,adc_in,adc_init,adc_start,adc_stop,adc_volts,adc124S021dc,adcACpropab_code,add_driver,AR,ard_blockGoto,ard_blockSpeed,ard_blockSpeedPrev,ard_cycles,ard_deadZone,ard_dhb10_arlo,ard_dhb10_terminal,ard_feedback,ard_gotoDoneReps,ard_increment,ard_mode,ard_offset,ard_opened,ard_ramp_interval,ard_rampStep,ard_rampStepMode,ard_replyMode,ard_servo_pin_L,ard_servo_pin_R,ard_speedAccLim,ard_speedL,ard_speedLimit,ard_speedR,ard_tRampStepPrev,asin,atan2,atof,atoi,audio_dac,audio0,badge_setup,badgeLight,badgeScreen,binary_audiosynth_dat_end,binary_audiosynth_dat_size,binary_audiosynth_dat_start,binary_pst_dat_end,binary_pst_dat_size,binary_pst_dat_start,binary_VGA_dat_end,binary_VGA_dat_size,binary_VGA_dat_start,binary_ws2812_driver_dat_end,binary_ws2812_driver_dat_size,binary_ws2812_driver_dat_start,BOTTOM,box,boxFilled,bt_accelInitFlag,button,buttons,cal_activityBot,cal_drive_display,cal_drive_pins,cal_drive_setramp,cal_drive_sleep,cal_drive_speeds,cal_drive_stop,cal_encoderPins,cal_encoders,cal_servoPins,CFG,circle,circleFilled,clear,clear_bit,cog_end,cog_endStackTest,cog_num,cog_run,cog_runStackTest,cogIRcom,cogstart,cogstart_stackTest,cogstop_stackTest,colorPal_close,colorPal_getRGB,colorPal_init,colorPal_open,colorPal_reset,colorPalRRGGBB,compareRRGGBB,compass_init,compass_read,ComputeOutCode,constrain,contacts_count,contacts_displayAll,contacts_eraseAll,contacts_setStartAddr,count,cpcog,cursor,cursor_x,cursor_y,da_ctr_cog,da_ctr_stop,da_init,da_out,da_res,da_setupScale,da_useScale,da_volts,dac_close,dac_ctr,dac_ctr_cog,dac_ctr_res,dac_ctr_stop,dac_loop,dac_set,dac_setup,dac_start,dac_stop,dev_ee_show,dfs_mount,dhb10_com,dhb10_reply,dhb10_terminal,dport_ptr,dprint,dprinti,drive_calibrationResults,drive_clearTicks,drive_close,drive_com,drive_displayInterpolation,drive_encoderPins,drive_feedback,drive_getSpeed,drive_getTicks,drive_getTicksCalc,drive_goto,drive_gotoBlocking,drive_gotoDoneDelay,drive_gotoMode,drive_gotoStatus,drive_open,drive_pins,drive_ramp,drive_rampStep,drive_servoPins,drive_setAcceleration,drive_setErrorLimit,drive_setMaxSpeed,drive_setMaxVelocity,drive_setramp,drive_setRampStep,drive_sleep,drive_speed,drive_speedBlocking,drive_speeds,drive_stop,DRIVER_LIST_SIZE,dscan,dt_end,dt_fromDateStr,dt_fromEt,dt_fromTimeStr,dt_get,dt_getms,dt_run,dt_set,dt_toDateStr,dt_toEt,dt_toTimeStr,dte_dateETV,dte_timeETV,dte_toCal,dte_toJD,dte_toSPD,ee_badgeCheck,ee_config,ee_displayIndex,ee_getByte,ee_getFloat32,ee_getInt,ee_getStr,ee_init,ee_putByte,ee_putFloat32,ee_putInt,ee_putStr,ee_readByte,ee_readFloat32,ee_readInt,ee_readShort,ee_readStr,ee_writeByte,ee_writeFloat32,ee_writeInt,ee_writeShort,ee_writeStr,eeBadgeOk,eeBus,eeHome,eei2cLock,eei2cLockFlag,eeNext,eeNextAddr,eeprint,eeprinted,eeRecCount,eeRecHome,eeRecOffice,eeRecs,eeRecsAddr,eescan,encoderFeedback,encoderLeds_start,encoderLeds_stop,endianSwap,fclose,fdserial_close,fdserial_open,fdserial_rxChar,fdserial_rxCheck,fdserial_rxCount,fdserial_rxFlush,fdserial_rxPeek,fdserial_rxReady,fdserial_rxTime,fdserial_txChar,fdserial_txEmpty,fdserial_txFlush,fingerprint_add,fingerprint_allowOverwrite,fingerprint_close,fingerprint_countUsers,fingerprint_deleteUser,fingerprint_lookupUserPrivlage,fingerprint_open,fingerprint_readResponse,fingerprint_scan,fingerprint_sendCommand,fingerprint_setStrictness,fingerprint_setTimeout,float2string,font_lg_bubble_data,font_lg_bubble_index,font_lg_bubble_zeroMap,font_lg_sans_data,font_lg_sans_index,font_lg_sans_zeroMap,font_lg_script_data,font_lg_script_index,font_lg_script_zeroMap,font_lg_serif_data,font_lg_serif_index,font_lg_serif_zeroMap,font_med_bubble_data,font_med_sans_data_01,font_med_sans_data_02,font_med_sans_data_03,font_med_sans_data_04,font_med_sans_data_05,font_med_sans_data_06,font_med_sans_data_07,font_med_sans_data_08,font_med_sans_data_09,font_med_sans_data_10,font_med_sans_data_11,font_med_sans_data_12,font_med_sans_data_13,font_med_sans_data_14,font_med_sans_data_15,font_med_sans_data_16,font_med_sans_data_17,font_med_script_data,font_med_serif_data,fopen,fp,fread,free,freqout,get_bit,get_direction,get_directions,get_output,get_outputs,get_state,get_states,get8bitColor,getBin,getChar,getColorRRGGBB,getDec,getFloat,getHex,getStr,gps_altitude,gps_changeBaud,gps_close,gps_cog,gps_data,gps_fix,gps_fixValid,gps_heading,gps_latitude,gps_longitude,gps_magneticVariation,gps_open,gps_rawDate,gps_rawTime,gps_run,gps_satsTracked,gps_ser,gps_stack,gps_stopping,gps_txByte,gps_velocity,greypalette,gVgaScreen,gVgaText,hdserial,high,HSA,HSB,i2c_busy,i2c_in,i2c_newbus,i2c_open,i2c_out,i2c_poll,i2c_readByte,i2c_readData,i2c_start,i2c_stop,i2c_writeByte,i2c_writeData,i2cLock,imu_accelAvailable,imu_calibrateAG,imu_calibrateMag,imu_clearAccelInterrupt,imu_clearGyroInterrupt,imu_clearMagInterrupt,imu_getAccelCalibration,imu_getAccelScale,imu_getGyroCalibration,imu_getGyroScale,imu_getMagCalibration,imu_getMagScale,imu_gyroAvailable,imu_init,imu_magAvailable,imu_readAccel,imu_readAccelCalculated,imu_readGyro,imu_readGyroCalculated,imu_readMag,imu_readMagCalculated,imu_readTemp,imu_readTempCalculated,imu_setAccelCalibration,imu_setAccelInterrupt,imu_setAccelScale,imu_setGyroCalibration,imu_setGyroInterrupt,imu_setGyroScale,imu_setMagCalibration,imu_setMagInterrupt,imu_setMagScale,imu_SPIreadBytes,imu_SPIwriteByte,imu_tempAvailable,inbox,inBuff,init_MMA7660FC,input,INSIDE,int_fraction,interpolate2,interpolation_table_setup,invert,ir_receive,ir_send,IRA,IRB,irclear,ircom_dec,ircom_hex,ircom_rjdec,ircom_rx,ircom_rxcheck,ircom_rxflush,ircom_rxtime,ircom_start,ircom_stop,ircom_str,ircom_tx,ircom_tx_bin,ircom_txflush,irprint,irscan,irself,keypad_getNumber,keypad_getNumberEndKey,keypad_read,keypad_readFrom,keypad_setup,led,led_off,led_on,leddat,leds,ledsself,LEFT,letter,light_clear,light_set_all,light_set_rgb,light_set_rgb1,light_set_rgb2,light_start,light_stop,line,longjmp,low,main_ret,malloc,map,mark,memcpy,memmove,memset,MMA7455_getMode,MMA7455_getxyz10,MMA7455_getxyz8,MMA7455_gRange,MMA7455_gRangeVal,MMA7455_init,MMA7455_pinClk,MMA7455_pinDat,MMA7455_pinEn,MMA7455_readByte,MMA7455_setMode,MMA7455_setOffsetX,MMA7455_setOffsetY,MMA7455_setOffsetZ,MMA7455_writeByte,ms,ms_timer,mstime_get,mstime_reset,mstime_set,mstime_start,mstime_stop,mx_accel,mx_rotate,mx_tilt,NA,NB,NT,oledc_bitmap,oledc_clear,oledc_color565,oledc_copy,oledc_drawCharLarge,oledc_drawCharMedium,oledc_drawCharSmall,oledc_drawCircle,oledc_drawCircleHelper,oledc_drawFastHLine,oledc_drawFastVLine,oledc_drawLine,oledc_drawLinePrimative,oledc_drawNumber,oledc_drawPixel,oledc_drawPixelPrimative,oledc_drawRect,oledc_drawRoundRect,oledc_drawText,oledc_drawTriangle,oledc_fillCircle,oledc_fillCircleHelper,oledc_fillRect,oledc_fillRectPrimative,oledc_fillRoundRect,oledc_fillTriangle,oledc_font_sm,oledc_fontLoader,oledc_getCursorX,oledc_getCursorY,oledc_getHeight,oledc_getRotation,oledc_getWidth,oledc_goTo,oledc_init,oledc_invertDisplay,oledc_isScrolling,oledc_print,oledc_screenLock,oledc_screenLockClr,oledc_screenLockSet,oledc_scrollStart,oledc_scrollStop,oledc_setCursor,oledc_setRotation,oledc_setTextColor,oledc_setTextFont,oledc_setTextSize,oledc_setTextWrap,oledc_sleep,oledc_spiWrite,oledc_startup,oledc_wake,oledc_write,oledc_writeCommand,oleddat,oledprint,ParseGGA,ParseRMC,pause,ping,ping_cm,ping_inches,point,PrepBuff,print,printi,printNumber,ptrBuff,pulse_in,pulse_out,putBin,putBinLen,putChar,putDec,putDecLen,putFloat,putFloatPrecision,putHex,putHexLen,putLine,putln,putStr,putStrLen,pw,pwL,pwm_set,pwm_start,pwm_stop,pwR,r,rand,raw2g100,rc_time,readBin,readChar,readDec,readFloat,readHex,readStr,receive,remainder,remapColor,replace_byte,retrieve,reverse,rfid_disable,rfid_enable,rfid_get,rfid_open,rfid_reset,rfidser_close,rgb,rgbs,RIGHT,rotate180,RQA,RQB,S3,s3_booleanRandom,s3_buttonCount,s3_buttonPressed,s3_enableMic,s3_lightSensor,s3_lineSensor,s3_motorSet,s3_motorSetDistance,s3_motorSetRotate,s3_motorsMoving,s3_ping,s3_playNote,s3_randomRange,s3_readBars,s3_readMic,s3_readObstacle,s3_resetButtonCount,s3_runWithoutResult,s3_setLED,s3_setup,s3_setVoices,s3_setVolume,s3_simpleButton,s3_simpleDrive,s3_simpleLight,s3_simpleLine,s3_simpleObstacle,s3_simplePlay,s3_simpleRandom,s3_simpleSpin,s3_simpleStalled,s3_simpleStop,s3_stalled,scan,SCL,screen_auto,screen_char32x16,screen_char7x5,screen_dataAddr,screen_getAuto,screen_getBuffer,screen_GetDisplayHeight,screen_GetDisplayType,screen_GetDisplayWidth,screen_getSplash,screen_HIGH,screen_image,screen_init,screen_LOW,screen_scrollLeft,screen_scrollLeftDiag,screen_scrollRight,screen_scrollRightDiag,screen_scrollStop,screen_setcommand,screen_SHIFTOUT,screen_ssd1306_Command,screen_ssd1306_Data,screen_start,screen_stop,screen_string16x4,screen_string8x1,screen_string8x2,screen_swap,screen_update,screen_WRITEBUFF,screenLock,scribbler_align_with,scribbler_arc,scribbler_arc_by,scribbler_arc_deg,scribbler_arc_deg_now,scribbler_arc_now,scribbler_arc_to,scribbler_beep,scribbler_begin_path,scribbler_button_count,scribbler_button_mode,scribbler_button_press,scribbler_command_tone,scribbler_default_light_calibration,scribbler_default_line_threshold,scribbler_default_obstacle_threshold,scribbler_default_wheel_calibration,scribbler_delay_tenths,scribbler_ee_read_byte,scribbler_ee_write_byte,scribbler_end_path,scribbler_get_adc_results,scribbler_get_charging,scribbler_get_light_calibration,scribbler_get_line_threshold,scribbler_get_mic_env,scribbler_get_model_s2,scribbler_get_model_s3,scribbler_get_obstacle_threshold,scribbler_get_results,scribbler_get_sync,scribbler_get_timer,scribbler_get_usb_powered,scribbler_get_wheel_calibration,scribbler_go_back,scribbler_go_forward,scribbler_go_left,scribbler_go_right,scribbler_heading_is,scribbler_heading_is_deg,scribbler_here_is,scribbler_light_sensor,scribbler_light_sensor_log,scribbler_light_sensor_raw,scribbler_light_sensor_word,scribbler_line_sensor,scribbler_motion,scribbler_motion_addr,scribbler_move,scribbler_move_by,scribbler_move_now,scribbler_move_ready,scribbler_move_to,scribbler_moving,scribbler_obstacle,scribbler_play_pause,scribbler_play_sync,scribbler_play_tone,scribbler_play_tones,scribbler_read_light_calibration,scribbler_read_line_threshold,scribbler_read_obstacle_threshold,scribbler_read_wheel_calibration,scribbler_reset_button_count,scribbler_run_motors,scribbler_set_led,scribbler_set_leds,scribbler_set_light_calibration,scribbler_set_line_threshold,scribbler_set_obstacle_threshold,scribbler_set_power_off,scribbler_set_speed,scribbler_set_voices,scribbler_set_volume,scribbler_set_wheel_calibration,scribbler_stalled,scribbler_start,scribbler_start_mic_env,scribbler_start_motors,scribbler_start_timer,scribbler_start_tones,scribbler_stop_all,scribbler_stop_now,scribbler_turn,scribbler_turn_by,scribbler_turn_by_deg,scribbler_turn_deg,scribbler_turn_deg_now,scribbler_turn_now,scribbler_turn_to,scribbler_turn_to_deg,scribbler_wait_stop,scribbler_wait_sync,scribbler_wheels_now,scribbler_write_light_calibration,scribbler_write_line_threshold,scribbler_write_obstacle_threshold,scribbler_write_wheel_calibration,sd_mount,sleep,secondctr,self,send,serial_close,serial_open,serial_rxChar,serial_txChar,servo_angle,servo_disable,servo_get,servo_set,servo_setramp,servo_speed,servo_stop,servoAux_angle,servoAux_get,servoAux_set,servoAux_setRamp,servoAux_speed,servoAux_stop,set_1_blue,set_1_rgb,set_bit,set_direction,set_directions,set_drive_speed,set_io_dt,set_io_timeout,set_output,set_outputs,set_pause_dt,shape,shift_in,shift_out,sign,simpleterm_close,simpleterm_fromTxDo,simpleterm_open,simpleterm_pointer,simpleterm_reopen,simpleterm_toRxDi,sirc_button,sirc_code,sirc_device,sirc_setTimeout,sound_adsr,sound_config,sound_end,sound_endAllSound,sound_endSound,sound_envelopeSet,sound_envelopeStart,sound_freq,sound_freqRaw,sound_loadPatch,sound_note,sound_param,sound_playChords,sound_playSound,sound_run,sound_sampleSet,sound_volume,sound_wave,soundImpact,soundImpact_end,soundImpact_getCount,soundImpact_run,spdL,spdR,speedPrev,sprint,sprinti,SPUTC,SPUTL,SPUTS,square_wave,square_wave_cog,square_wave_setup,square_wave_stop,srand,sscan,sscan_ct,st_buscnt,st_eeInitFlag,st_eeprom,st_iodt,st_mark,st_msTicks,st_pauseTicks,st_timeout,st_usTicks,store,stored,strcmp,strcpy,string,string2float,stringView,strlen,strncmp,strstr,strtok,talk_end,talk_run,talk_say,talk_set_speaker,talk_spell,tcL,tcR,term,term_cmd,text_size,textbgcolor,textcolor,textsize,TFTINVERTED,TFTROTATION,TFTSCROLLING,ticksL,ticksR,timeout,timeTicksSetup,toggle,TOP,touch_start,TPCount,TPDischarge,TPPins,TRA,track,TRB,triangle,triangleFilled,us,UTA,UTB,vgatext_clear,vgatext_clearEOL,vgatext_close,vgatext_getColors,vgatext_getColumns,vgatext_getRows,vgatext_getX,vgatext_getY,vgatext_home,vgatext_open,vgatext_out,vgatext_putchar,vgatext_setColorPalette,vgatext_setColors,vgatext_setCoordPosition,vgatext_setX,vgatext_setXY,vgatext_setY,vgatext_start,vgatext_stop,VocalTract_aural_id,VocalTract_empty,VocalTract_full,VocalTract_go,VocalTract_sample_ptr,VocalTract_set_attenuation,VocalTract_set_pace,VocalTract_start,VocalTract_stop,wait,wav_close,wav_play,wav_playing,wav_reader,wav_stop,wav_volume,wavDacBufferH,wavDacBufferL,wifi_baud,wifi_buf,wifi_buf_size,wifi_bufferSize,wifi_command,wifi_comSelect,wifi_comSelectPin,wifi_connect,wifi_disconnect,wifi_event,wifi_fds,wifi_handle,wifi_id,wifi_ip,wifi_ipAddr,wifi_join,wifi_leave,wifi_listen,wifi_mode,wifi_msReplyTimeout,wifi_pin_di,wifi_pin_do,wifi_poll,wifi_print,wifi_recv,wifi_replyStringCopy,wifi_replyStringDisplay,wifi_replyStringIn,wifi_scan,wifi_send,wifi_setBuffer,wifi_simpletermResume,wifi_simpletermSuspend,wifi_start,wifi_stationIp,wifi_status,wifi_stop,wifi_stringDisplay,wifi_timeoutFlag,wrap,writeBin,writeBinLen,writeChar,writeDec,writeDecLen,writeFloat,writeFloatPrecision,writeHex,writeHexLen,writeLine,writeStr,writeStrLen,ws_start,ws2812_close,ws2812_open,ws2812_set,ws2812_start,ws2812_stop,ws2812_wheel,ws2812_wheel_dim,ws2812b_open,ws2812b_start");
Blockly.propc.ORDER_ATOMIC=0;Blockly.propc.ORDER_UNARY_POSTFIX=1;Blockly.propc.ORDER_UNARY_PREFIX=2;Blockly.propc.ORDER_MULTIPLICATIVE=3;Blockly.propc.ORDER_ADDITIVE=4;Blockly.propc.ORDER_SHIFT=5;Blockly.propc.ORDER_RELATIONAL=7;Blockly.propc.ORDER_EQUALITY=8;Blockly.propc.ORDER_BITWISE_AND=9;Blockly.propc.ORDER_BITWISE_XOR=10;Blockly.propc.ORDER_BITWISE_OR=11;Blockly.propc.ORDER_LOGICAL_AND=12;Blockly.propc.ORDER_LOGICAL_OR=13;Blockly.propc.ORDER_CONDITIONAL=14;Blockly.propc.ORDER_ASSIGNMENT=15;
Blockly.propc.ORDER_NONE=99;
var profile={"activity-board":{description:"Propeller Activity Board",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"],["17","17"],["26","26"],["27","27"]],analog:[["A0","0"],["A1","1"],["A2","2"],["A3","3"]],earphone_jack:"26, 27",earphone_jack_inverted:"-1, 27",sd_card:"22, 23, 24, 25",baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:17,saves_to:[["Propeller Activity Board",
"activity-board"],["Propeller FLiP or Project Board","flip"],["Other Propeller Boards","other"]]},s3:{description:"Scribbler Robot",digital:[["P0","0"],["P1","1"],["P2","2"],["P3","3"],["P4","4"],["P5","5"]],analog:[["A0","0"],["A1","1"]],baudrate:9600,contiguous_pins_start:0,contiguous_pins_end:5,saves_to:[["Scribbler Robot","s3"]]},heb:{description:"Hackable Electronic Badge",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],
["11","11"]],earphone_jack:"9, 10",earphone_jack_inverted:"-1, 10",analog:[],baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:11,saves_to:[["Hackable Electronic Badge","heb"],["Badge WX","heb-wx"]]},"heb-wx":{description:"Badge WX",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"]],analog:[],earphone_jack:"0, 1",earphone_jack_inverted:"-1, 1",sd_card:"8, 7, 6, 5",baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:11,
saves_to:[["Hackable Electronic Badge","heb"],["Badge WX","heb-wx"]]},flip:{description:"Propeller FLiP or Project Board",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"],["17","17"],["18","18"],["19","19"],["20","20"],["21","21"],["22","22"],["23","23"],["24","24"],["25","25"],["26","26"],["27","27"]],analog:[],baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:27,
saves_to:[["Propeller FLiP or Project Board","flip"],["Propeller Activity Board","activity-board"],["Other Propeller Boards","other"]]},other:{description:"Other Propeller Boards",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"],["17","17"],["18","18"],["19","19"],["20","20"],["21","21"],["22","22"],["23","23"],["24","24"],["25","25"],["26","26"],["27","27"],
["28","28"],["29","29"],["30","30"],["31","31"]],analog:[],baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:27,saves_to:[["Other Propeller Boards","other"],["Propeller Activity Board","activity-board"],["Propeller FLiP or Project Board","flip"]]},propcfile:{description:"Propeller C (code-only)",digital:[["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"],["17",
"17"],["18","18"],["19","19"],["20","20"],["21","21"],["22","22"],["23","23"],["24","24"],["25","25"],["26","26"],["27","27"],["28","28"],["29","29"],["30","30"],["31","31"]],analog:[],baudrate:115200,contiguous_pins_start:0,contiguous_pins_end:27,saves_to:[]}};function setProfile(a){profile["default"]=profile[a]?profile[a]:profile.other;window.parent.setBaudrate(profile["default"].baudrate)}
Blockly.propc.init=function(a){Blockly.propc.definitions_={};Blockly.propc.definitions_["include simpletools"]='#include "simpletools.h"';Blockly.propc.methods_={};Blockly.propc.setups_={};Blockly.propc.method_declarations_={};Blockly.propc.global_vars_={};Blockly.propc.cog_methods_={};Blockly.propc.stacks_=[];Blockly.propc.vartype_={};Blockly.propc.varlength_={};Blockly.propc.serial_graphing_=!1;Blockly.propc.serial_terminal_=!1;Blockly.propc.string_var_lengths=[];"Scribbler Robot"===profile["default"].description?
Blockly.propc.definitions_.include_scribbler='#include "s3.h"':"Hackable Electronic Badge"===profile["default"].description?(Blockly.propc.definitions_.badgetools='#include "badgetools.h"',Blockly.propc.setups_.badgetools="badge_setup();"):"Badge WX"===profile["default"].description&&(Blockly.propc.definitions_.badgetools='#include "badgewxtools.h"',Blockly.propc.setups_.badgetools="badge_setup();");if(Blockly.Variables){Blockly.propc.variableDB_?Blockly.propc.variableDB_.reset():Blockly.propc.variableDB_=
new Blockly.Names(Blockly.propc.RESERVED_WORDS_);Blockly.propc.variableDB_.setVariableMap(a.getVariableMap());var b=[];a=Blockly.Variables.allUsedVarModels(a);for(var c=0;c<a.length;c++){var d=Blockly.propc.variableDB_.getName(a[c].getId(),Blockly.Variables.NAME_TYPE);b[c]="{{$var_type_"+d+"}} "+d+"{{$var_length_"+d+"}};";Blockly.propc.definitions_["variable"+c.toString(10)]=b[c]}}};
Blockly.propc.finish=function(a){var b=[],c=[],d=[],e=[],f=[],g=[],h=[],m;for(m in Blockly.propc.global_vars_){var l=Blockly.propc.global_vars_[m];f.push(l)}var n=f.length;for(m in Blockly.propc.definitions_)l=Blockly.propc.definitions_[m],l.match(/^#include/)||l.match(/^#define/)||l.match(/^#if/)||l.match(/^#end/)||l.match(/^#else/)||l.match(/^#pragma/)?b.push(l):l.match(/\/\/ GRAPH_[A-Z]*_START:/)?d.push(l):f.push(l);var p=f.length;for(var q in Blockly.propc.method_declarations_){e.push(Blockly.propc.method_declarations_[q]);
for(var u in Blockly.propc.cog_methods_)Blockly.propc.cog_methods_[u].replace(/[^\w]+/g,"")===Blockly.propc.method_declarations_[q].replace(/void/g,"").replace(/[^\w]+/g,"")&&h.push(q)}for(var t in Blockly.propc.methods_)c.push(Blockly.propc.methods_[t]);for(l in f){for(var r in Blockly.propc.vartype_)-1<f[l].indexOf("{{$var_type_"+r+"}}")&&(f[l]="LOCAL"!==Blockly.propc.vartype_[r]?f[l].replace("{{$var_type_"+r+"}}",Blockly.propc.vartype_[r]):f[l].replace("{{$var_type_"+r+"}} "+r+"{{$var_length_"+
r+"}}",""),f[l]=Blockly.propc.varlength_[r]?f[l].replace("{{$var_length_"+r+"}}","["+Blockly.propc.varlength_[r]+"]"):f[l].replace("{{$var_length_"+r+"}}",""));-1<f[l].indexOf("{{$var_type_")&&(f[l]=f[l].replace(/\{\{\$var_type_.*?\}\}/ig,"int").replace(/\{\{\$var_length_.*?\}\}/ig,""));-1<f[l].indexOf("char *")&&-1===f[l].indexOf("__")&&-1===f[l].indexOf("rfidBfr")&&-1===f[l].indexOf("wxBuffer")?f[l]=f[l].replace("char *","char ").replace(";","[64];"):-1<f[l].indexOf("wxBuffer")&&(f[l]=f[l].replace("char *",
"char ").replace("wxBuffer;","wxBuffer[64];"));f[l]=f[l].replace(/char \*(\w+)\[/g,"char $1[");h=Blockly.propc.string_var_lengths.length;for(q=0;q<h;q++)f[l].match(new RegExp("char\\s+"+Blockly.propc.string_var_lengths[q][0]+"\\["))&&(f[l]="char "+Blockly.propc.string_var_lengths[q][0]+"["+Blockly.propc.string_var_lengths[q][1]+" + 1];");for(t in Blockly.propc.cog_methods_)-1<Blockly.propc.methods_[t].indexOf(f[l].replace(/[achintr]* (\w+)[\[\]0-9]*;/g,"$1"))&&g.push(f[l])}for(var v in Blockly.propc.stacks_)f.push(Blockly.propc.stacks_[v]);
l=[];for(m in Blockly.propc.setups_)l.push("  "+Blockly.propc.setups_[m]);for("Scribbler Robot"===profile["default"].description&&l.unshift("  s3_setup();pause(100);");n<p;n++)for(var w in g)f[n]===g[w]&&-1===f[n].indexOf("volatile")&&inDemo&&(f[n]="volatile "+f[n]);g="\n\n";0<f.toString().trim().length&&(g+="// ------ Global Variables and Objects ------\n");b="// ------ Libraries and Definitions ------\n"+b.join("\n")+g+f.join("\n")+"\n\n";if(-1<a.indexOf("// RAW PROPC CODE\n//{{||}}\n"))return a.split("//{{||}}\n")[2];
a="  "+a.replace(/\n/g,"\n  ");a=a.replace(/\n\s+$/,"\n").replace(/pause\(0\);\n/g,"// pause(0);\n");for(a=a.replace(/\(float\)\s*\(int\)/g,"(float)");a.match(/\(\(([^()]*)\)\)/g);)a=a.replace(/\(\(([^()]*)\)\)/g,"($1)");a="int main()\n{\n"+l.join("\n")+"\n"+a+"\n}";f="";Blockly.propc.serial_terminal_?f+="/* SERIAL_TERMINAL USED */\n":Blockly.propc.serial_graphing_&&(f+="/* SERIAL_GRAPHING USED */\n");0===Blockly.mainWorkspace.getAllBlocks().length&&"Propeller C (code-only)"!==profile["default"].description&&
(f+="/* EMPTY_PROJECT */\n");f+=d.join("\n")+"\n\n";d="";0<e.length&&(d+="// ------ Function Declarations ------\n");g="\n\n";0<c.length&&(g+="// ------ Functions ------\n");a="/* PURE CODE ONLY */\n"===Blockly.propc.definitions_.pure_code?Blockly.propc.methods_.pure_code:f+b.replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n")+d+e.join("\n\n").replace(/\n\n+/g,"\n").replace(/\n*$/,"\n")+"\n// ------ Main Program ------\n"+a+g+c.join("\n");return a=a.replace(/(\w+)\s*=\s*\({0,1}"(.*)"\){0,1};/g,function(a,
b,c){return 0===c.indexOf(",")&&-1<c.indexOf(', "')?a:"strcpy("+b+', "'+c+'");\t\t\t// Save string into variable '+b+"."})};Blockly.propc.scrubNakedValue=function(a){return a+";\n"};
Blockly.propc.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.propc.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.propc.allNestedComments(d))&&(c+=Blockly.propc.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
Object.keys||(Object.keys=function(){var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable("toString"),c="toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "),d=c.length;return function(e){if("function"!==typeof e&&("object"!==typeof e||null===e))throw new TypeError("Object.keys called on non-object");var f=[],g;for(g in e)a.call(e,g)&&f.push(g);if(b)for(g=0;g<d;g++)a.call(e,c[g])&&f.push(c[g]);return f}}());
Blockly.Field.prototype.render_=function(){this.visible_?this.textElement_&&(this.textElement_.textContent=this.getDisplayText_(),this.updateWidth()):this.size_.width=0};
Blockly.FieldVariable.dropdownCreate=function(){if(!this.variable_)throw Error("Tried to call dropdownCreate on a variable field with no variable selected.");var a=this.getText(),b=null;this.sourceBlock_&&(b=this.sourceBlock_.workspace);var c=[];if(b)for(var d=this.getVariableTypes_(),e=0;e<d.length;e++){var f=b.getVariablesOfType(d[e]);c=c.concat(f)}c.sort(Blockly.VariableModel.compareByName);b=[];for(e=0;e<c.length;e++)b[e]=[c[e].name,c[e].getId()];a!==Blockly.LANG_VARIABLES_SET_ITEM&&b.push([Blockly.Msg.RENAME_VARIABLE,
Blockly.RENAME_VARIABLE_ID]);Blockly.Msg.DELETE_VARIABLE&&a!==Blockly.LANG_VARIABLES_SET_ITEM&&b.push([Blockly.Msg.DELETE_VARIABLE.replace("%1",a),Blockly.DELETE_VARIABLE_ID]);return b};
Blockly.BlockSvg.prototype.setCollapsed=function(a){if(this.collapsed_!==a){for(var b=[],c=0,d;d=this.inputList[c];c++)b.push.apply(b,d.setVisible(!a));for(c=0;10>c;c++)this.getField("RANGEVALS"+c)&&this.getField("RANGEVALS"+c).setVisible(!1);if(a){d=this.getIcons();for(c=0;c<d.length;c++)d[c].setVisible(!1);c=this.toString().replace(/[ANRS],.[0-9,-]+[ \xa0]/g,"\u00a0");c.length>Blockly.COLLAPSE_CHARS&&(c=c.substr(0,Blockly.COLLAPSE_CHARS)+"...");this.appendDummyInput("_TEMP_COLLAPSED_INPUT").appendField(c).init()}else this.removeInput("_TEMP_COLLAPSED_INPUT"),
this.setWarningText(null);Blockly.BlockSvg.superClass_.setCollapsed.call(this,a);b.length||(b[0]=this);if(this.rendered){for(a=0;c=b[a];a++)c.render();this.bumpNeighbours_()}}};Blockly.Names.prototype.safeName_=function(a){if(a){if(a=encodeURI(a.replace(/ /g,"_")).replace(/[^\w]/g,"_"),-1!=="0123456789".indexOf(a[0])||"_"===a[0]&&"_"===a[1])a="my_"+a}else a="unnamed";return a};
var findBlocksByType=function(a){for(var b=Blockly.getMainWorkspace().getAllBlocks(),c=[],d=0;d<b.length;d++)b[d].type===a&&c.push(b[d].id);return 0<c.length?c:null};function uniq_fast(a){for(var b={},c=[],d=a.length,e=0,f=0;f<d;f++){var g=a[f];1!==b[g]&&(b[g]=1,c[e++]=g)}try{a=[];for(e=0;0<c.length;){d=c.length;for(f=k=0;f<d;f++)parseInt(c[f],10)<parseInt(c[k],10)&&(k=f);a[e]=c[k];e++;c.splice(k,1)}return a}catch(h){return c}};var xmlToolbox="";xmlToolbox+='<xml id="toolbox">';xmlToolbox+='    <category key="category_control" colour="205">';xmlToolbox+='        <block type="comment"></block>';xmlToolbox+='        <block type="controls_if"></block>';xmlToolbox+='        <block type="controls_repeat">';xmlToolbox+='            <mutation TYPE="FOREVER"></mutation>';xmlToolbox+="        </block>";xmlToolbox+='        <block type="controls_repeat" include="s3,">';xmlToolbox+='            <mutation type="TIMES"></mutation>';
xmlToolbox+='            <field name="TYPE">TIMES</field>';xmlToolbox+='            <value name="TIMES">';xmlToolbox+='                 <block type="math_number">';xmlToolbox+='                     <field name="NUM">10</field>';xmlToolbox+="                 </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="control_repeat_for_loop">';xmlToolbox+='            <value name="START">';xmlToolbox+='                <block type="math_number">';
xmlToolbox+='                    <field name="NUM">1</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="END">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">10</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="STEP">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">1</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="scribbler_exit_loop" include="s3,"></block>';xmlToolbox+='        <block type="controls_select">';xmlToolbox+='            <value name="SWITCH">';xmlToolbox+='                <block type="variables_get"></block>';xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="controls_break" exclude="s3,"></block>';
xmlToolbox+='        <block type="base_delay" exclude="s3,">';xmlToolbox+='            <value name="DELAY_TIME">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">1000</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="scribbler_wait" include="s3,">';xmlToolbox+='            <value name="WAITTIME">';xmlToolbox+='                <block type="math_number">';
xmlToolbox+='                    <field name="NUM">500</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <field name="TIMESCALE">1</field>';xmlToolbox+="        </block>";xmlToolbox+='        <block type="cog_new" exclude="s3,"></block>';xmlToolbox+='        <block type="controls_return" exclude="s3,"></block>';xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_operators" exclude="s3," colour="275">';xmlToolbox+='        <category key="category_operators_numbers" >';
xmlToolbox+='            <block type="math_arithmetic"></block>';xmlToolbox+='            <block type="math_limit"></block>';xmlToolbox+='            <block type="constrain_value"></block>';xmlToolbox+='            <block type="math_crement"></block>';xmlToolbox+='            <block type="math_random">';xmlToolbox+='                <value name="A">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+='                <value name="B">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">100</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="math_bitwise"></block>';xmlToolbox+='            <block type="logic_operation"></block>';xmlToolbox+='            <block type="logic_negate"></block>';
xmlToolbox+='            <block type="parens"></block>';xmlToolbox+='            <block type="logic_compare"></block>';xmlToolbox+='            <block type="map_value"></block>';xmlToolbox+='            <block type="math_advanced"></block>';xmlToolbox+='            <block type="math_inv_trig">';xmlToolbox+='                <value name="ARG3">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_operators_strings" >';xmlToolbox+='            <block type="string_var_length"></block>';xmlToolbox+='            <block type="string_compare"></block>';xmlToolbox+='            <block type="string_length"></block>';xmlToolbox+='            <block type="combine_strings"></block>';xmlToolbox+='            <block type="find_substring_zero">';
xmlToolbox+='                <value name="LOC">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="get_char_at_position_zero">';xmlToolbox+='                <value name="POSITION">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="set_char_at_position_zero">';xmlToolbox+='                <value name="POSITION">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="get_substring_zero">';
xmlToolbox+='                <value name="START">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="END">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">2</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+="            </block>";xmlToolbox+='            <block type="string_split">';xmlToolbox+='                <value name="CHAR">';xmlToolbox+='                    <block type="char_type_block"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="string_trim"></block>';xmlToolbox+='            <block type="string_null"></block>';xmlToolbox+='            <block type="string_sprint_multiple"></block>';xmlToolbox+='            <block type="string_scan_multiple"></block>';
xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+="    <sep></sep>";xmlToolbox+='    <category key="category_values" exclude="s3," colour="205">';xmlToolbox+='        <block type="math_number"></block>';xmlToolbox+='        <block type="string_type_block"></block>';xmlToolbox+='        <block type="char_type_block"></block>';xmlToolbox+='        <block type="music_note">';xmlToolbox+='            <field name="OCTAVE">0.125</field>';xmlToolbox+="        </block>";
xmlToolbox+='        <block type="number_binary"></block>';xmlToolbox+='        <block type="number_hex"></block>';xmlToolbox+='        <block type="logic_boolean"></block>';xmlToolbox+='        <block type="high_low_value"></block>';xmlToolbox+='        <block type="constant_define"></block>';xmlToolbox+='        <block type="constant_value"></block>';xmlToolbox+='        <block type="color_picker" exclude="heb,"></block>';xmlToolbox+='        <block type="color_value_from" exclude="heb,">';
xmlToolbox+='            <value name="RED_VALUE">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="GREEN_VALUE">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";
xmlToolbox+='            <value name="BLUE_VALUE">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="get_channel_from" exclude="heb,">';xmlToolbox+='            <value name="COLOR">';xmlToolbox+='                <block type="color_picker"></block>';xmlToolbox+="            </value>";
xmlToolbox+="        </block>";xmlToolbox+='        <block type="compare_colors" exclude="heb,">';xmlToolbox+='            <value name="COLOR1">';xmlToolbox+='                <block type="color_picker"></block>';xmlToolbox+="            </value>";xmlToolbox+='            <value name="COLOR2">';xmlToolbox+='                <block type="color_picker"></block>';xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="heb_color_val" include="heb,"></block>';
xmlToolbox+='        <block type="system_counter" exclude="other,"></block>';xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_operators_arrays" colour="250">';xmlToolbox+='        <block type="array_init"></block>';xmlToolbox+='        <block type="array_fill"></block>';xmlToolbox+='        <block type="array_get">';xmlToolbox+='            <value name="NUM">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="array_set">';xmlToolbox+='            <value name="NUM">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="VALUE">';xmlToolbox+='                <block type="math_number">';
xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="array_clear"></block>';xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_variables" custom="VARIABLE" colour="250"></category>';xmlToolbox+='    <category key="category_functions" custom="PROCEDURE" colour="225"></category>';xmlToolbox+='    <category key="category_input-output_pin-states" exclude="s3,heb,heb-wx," colour="185">';
xmlToolbox+='        <block type="make_pin"></block>';xmlToolbox+='        <block type="make_pin_input">';xmlToolbox+='            <value name="PIN">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="check_pin"></block>';xmlToolbox+='        <block type="check_pin_input">';xmlToolbox+='            <value name="PIN">';
xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="set_pins"></block>';xmlToolbox+='        <block type="get_pins"></block>';xmlToolbox+='        <block type="set_pins_binary">';xmlToolbox+='            <value name="VALUE">';xmlToolbox+='                <block type="number_binary"></block>';
xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+="    </category>";xmlToolbox+='    <sep include="heb,heb-wx,"></sep>';xmlToolbox+='    <category key="category_communicate" exclude="s3," colour="340">';xmlToolbox+='        <category key="category_hackable-electronic-badge_oled" include="heb,heb-wx,">';xmlToolbox+='            <block type="heb_print_numeric_var">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_print_string_var">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">Hello</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_print_multiple"></block>';xmlToolbox+='            <block type="heb_cursor_position_large"></block>';xmlToolbox+='            <block type="heb_cursor_position_small">';xmlToolbox+='                <value name="ROWS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+='                <value name="COLS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_clear_screen"></block>';xmlToolbox+='            <block type="heb_rotate"></block>';xmlToolbox+='            <block type="heb_oled_point">';xmlToolbox+='                <value name="X0">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+='            <block type="heb_oled_line">';xmlToolbox+='                <value name="X0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+='                <value name="X1">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y1">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_oled_box">';xmlToolbox+='                <value name="X0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y0">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="W">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="H">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_oled_circle">';xmlToolbox+='                <value name="X0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+='                <value name="Y0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="R">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_oled_triangle">';xmlToolbox+='                <value name="X0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="X1">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y1">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="X2">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y2">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_hackable-electronic-badge_ir-communication" include="heb,heb-wx,">';xmlToolbox+='            <block type="heb_ir_send_signal">';xmlToolbox+='                <value name="MESSAGE">';xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">Hello</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_ir_read_signal"></block>';xmlToolbox+='            <block type="heb_ir_clear_buffer"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_graphing" exclude="heb-wx,">';xmlToolbox+='            <block type="graph_settings">';xmlToolbox+='                <field name="XAXIS">40,S</field>';
xmlToolbox+="            </block>";xmlToolbox+='            <block type="graph_output"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_hackable-electronic-badge_led_control" include="heb,heb-wx,">';xmlToolbox+='            <block type="ws2812b_init" include="heb-wx,"></block>';xmlToolbox+='            <block type="ws2812b_set" include="heb-wx,">';xmlToolbox+='                <value name="LED">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="ws2812b_set_multiple" include="heb-wx,">';xmlToolbox+='                <value name="START">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="END">';xmlToolbox+='                    <block type="math_number" include="heb-wx,">';xmlToolbox+='                        <field name="NUM">4</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';xmlToolbox+='                    <block type="color_picker">#000000</block>';
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="ws2812b_update" include="heb-wx,"></block>';xmlToolbox+='            <block type="heb_toggle_led" include="heb,"></block>';xmlToolbox+='            <block type="heb_toggle_led_open" include="heb,">';xmlToolbox+='                <value name="LED_NUM">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="LED_STATE">';xmlToolbox+='                    <block type="high_low_value">';xmlToolbox+='                        <field name="VALUE">high</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_pwm_led" include="heb-wx,">';xmlToolbox+='                <value name="BRIGHTNESS">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_set_led_rgb" include="heb,">';xmlToolbox+='                <value name="RGB">';xmlToolbox+='                    <block type="heb_color_val"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_badge_lock" include="heb-wx,">';xmlToolbox+='            <block type="heb_wx_lock"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_oled" exclude="heb,heb-wx,">';xmlToolbox+='            <block type="oled_initialize"></block>';xmlToolbox+='            <block type="oled_font_loader"></block>';xmlToolbox+='            <block type="oled_get_max_height"></block>';
xmlToolbox+='            <block type="oled_get_max_width"></block>';xmlToolbox+='            <block type="oled_clear_screen"></block>';xmlToolbox+='            <block type="oled_text_color">';xmlToolbox+='                <value name="FONT_COLOR">';xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+='                <value name="BACKGROUND_COLOR">';xmlToolbox+='                    <block type="color_picker"></block>';
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_text_size"></block>';xmlToolbox+='            <block type="oled_set_cursor">';xmlToolbox+='                <value name="X_POS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y_POS">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_print_text">';xmlToolbox+='                <value name="MESSAGE">';xmlToolbox+='                    <block type="string_type_block"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+='            <block type="oled_print_number">';xmlToolbox+='                <value name="NUMIN">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_print_multiple"></block>';xmlToolbox+='            <block type="oled_draw_pixel">';xmlToolbox+='                <value name="X_AXIS">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y_AXIS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';
xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_draw_line">';xmlToolbox+='                <value name="X_ONE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y_ONE">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="X_TWO">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="Y_TWO">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_draw_triangle">';xmlToolbox+='                <value name="POINT_X0">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_Y0">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_X1">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_Y1">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_X2">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_Y2">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';
xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_draw_rectangle">';xmlToolbox+='                <value name="POINT_X">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_Y">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RECT_WIDTH">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RECT_HEIGHT">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RECT_ROUND">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';
xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="oled_draw_circle">';xmlToolbox+='                <value name="POINT_X">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POINT_Y">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RADIUS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';
xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_protocols" exclude="heb,heb-wx,">';xmlToolbox+='            <block type="serial_open"></block>';xmlToolbox+='            <block type="serial_send_text"></block>';xmlToolbox+='            <block type="serial_status"></block>';xmlToolbox+='            <block type="serial_print_multiple"></block>';
xmlToolbox+='            <block type="serial_receive_text"></block>';xmlToolbox+='            <block type="serial_scan_multiple"></block>';xmlToolbox+='            <block type="i2c_send" experimental="true">';xmlToolbox+='                <value name="DATA">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">10</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="ADDR">';
xmlToolbox+='                    <block type="number_hex"></block>';xmlToolbox+="                </value>";xmlToolbox+='                <value name="DEVICE">';xmlToolbox+='                    <block type="number_hex"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="i2c_receive" experimental="true">';xmlToolbox+='                <value name="ADDR">';xmlToolbox+='                    <block type="number_hex"></block>';
xmlToolbox+="                </value>";xmlToolbox+='                <value name="DEVICE">';xmlToolbox+='                    <block type="number_hex"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="i2c_busy" experimental="true">';xmlToolbox+='                <value name="DEVICE">';xmlToolbox+='                    <block type="number_hex"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+='            <block type="i2c_mode" experimental="true"></block>';xmlToolbox+='            <block type="shift_in"></block>';xmlToolbox+='            <block type="shift_out">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">10</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";
xmlToolbox+='        <category key="category_communicate_WS2812B" exclude="heb,heb-wx,">';xmlToolbox+='            <block type="ws2812b_init"></block>';xmlToolbox+='            <block type="ws2812b_set">';xmlToolbox+='                <value name="LED">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';
xmlToolbox+='                    <block type="color_picker"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="ws2812b_set_multiple">';xmlToolbox+='                <value name="START">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="END">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">4</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLOR">';xmlToolbox+='                    <block type="color_picker">#000000</block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="ws2812b_update"></block>';xmlToolbox+="        </category>";
xmlToolbox+='        <category key="category_communicate_serial-lcd" exclude="heb,heb-wx,">';xmlToolbox+='            <block type="debug_lcd_init"></block>';xmlToolbox+='            <block type="debug_lcd_print">';xmlToolbox+='                <value name="MESSAGE">';xmlToolbox+='                    <block type="string_type_block"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="debug_lcd_number">';xmlToolbox+='                <value name="VALUE">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="debug_lcd_print_multiple"></block>';xmlToolbox+='            <block type="debug_lcd_action"></block>';xmlToolbox+='            <block type="debug_lcd_set_cursor">';xmlToolbox+='                <value name="ROW">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLUMN">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+='            <block type="debug_lcd_music_note"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_parallel-lcd" exclude="heb,heb-wx," experimental="true">';xmlToolbox+='            <block type="parallel_lcd_init"></block>';xmlToolbox+='            <block type="parallel_lcd_print">';xmlToolbox+='                <value name="MESSAGE">';xmlToolbox+='                    <block type="string_type_block"></block>';xmlToolbox+="                </value>";
xmlToolbox+="            </block>";xmlToolbox+='            <block type="parallel_lcd_number">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="parallel_lcd_print_multiple"></block>';xmlToolbox+='            <block type="parallel_lcd_action"></block>';
xmlToolbox+='            <block type="parallel_lcd_set_cursor">';xmlToolbox+='                <value name="ROW">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="COLUMN">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_serial-terminal" exclude="heb-wx,">';xmlToolbox+='            <block type="console_print">';xmlToolbox+='                <value name="MESSAGE">';xmlToolbox+='                    <block type="string_type_block"></block>';xmlToolbox+="                </value>";xmlToolbox+="            </block>";
xmlToolbox+='            <block type="console_print_variables">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="console_print_multiple"></block>';xmlToolbox+='            <block type="console_scan_text"></block>';
xmlToolbox+='            <block type="console_scan_number"></block>';xmlToolbox+='            <block type="console_newline"></block>';xmlToolbox+='            <block type="console_clear"></block>';xmlToolbox+='            <block type="console_move_to_position">';xmlToolbox+='                <value name="ROW">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+='                <value name="COLUMN">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="console_close"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category name="WX Module" exclude="heb,">';xmlToolbox+='            <category name="Simple" experimental="true">';
xmlToolbox+='                <block type="wx_init" exclude="heb-wx,"></block>';xmlToolbox+='                <block type="wx_config_page"></block>';xmlToolbox+='                <block type="wx_set_widget"></block>';xmlToolbox+='                <block type="wx_send_widget">';xmlToolbox+='                    <value name="NUM">';xmlToolbox+='                        <block type="math_number">';xmlToolbox+='                            <field name="NUM">10</field>';xmlToolbox+="                        </block>";
xmlToolbox+="                    </value>";xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_read_widgets"></block>';xmlToolbox+='                <block type="wx_get_widget"></block>';xmlToolbox+='                <block type="wx_evt_connected"></block>';xmlToolbox+='                <block type="wx_reconnect"></block>';xmlToolbox+="            </category>";xmlToolbox+='            <category name="Advanced">';xmlToolbox+='                <block type="wx_init_adv" exclude="heb-wx,"></block>';
xmlToolbox+='                <block type="wx_listen">';xmlToolbox+='                    <field name="ID">wxConnId1</field>';xmlToolbox+='                    <value name="PATH">';xmlToolbox+='                        <block type="string_type_block">';xmlToolbox+='                            <field name="TEXT">path</field>';xmlToolbox+="                        </block>";xmlToolbox+="                    </value>";xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_poll">';
xmlToolbox+='                    <field name="EVENT">wxEvent</field>';xmlToolbox+='                    <field name="ID">wxId</field>';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_print_multiple">';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_send_string">';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';
xmlToolbox+='                    <value name="DATA">';xmlToolbox+='                        <block type="string_type_block"></block>';xmlToolbox+="                    </value>";xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_scan_multiple">';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_scan_string">';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';
xmlToolbox+="                </block>";xmlToolbox+='                <block type="wx_receive_string">';xmlToolbox+='                    <field name="HANDLE">wxHandle</field>';xmlToolbox+='                    <value name="MAX">';xmlToolbox+='                        <block type="math_number">';xmlToolbox+='                            <field name="NUM">64</field>';xmlToolbox+="                        </block>";xmlToolbox+="                    </value>";xmlToolbox+="                </block>";
xmlToolbox+='                <block type="wx_mode"></block>';xmlToolbox+='                <block type="wx_code"></block>';xmlToolbox+='                <block type="wx_buffer"></block>';xmlToolbox+='                <block type="wx_join"></block>';xmlToolbox+='                <block type="wx_disconnect"></block>';xmlToolbox+='                <block type="wx_ip"></block>';xmlToolbox+="            </category>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate_xbee" exclude="heb,heb-wx,">';
xmlToolbox+='            <block type="xbee_setup"></block>';xmlToolbox+='            <block type="xbee_transmit"></block>';xmlToolbox+='            <block type="xbee_print_multiple"></block>';xmlToolbox+='            <block type="xbee_receive"></block>';xmlToolbox+='            <block type="xbee_scan_multiple"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_sensor-input" include="heb,heb-wx," colour="140">';xmlToolbox+='        <category key="category_hackable-electronic-badge_accelerometer" >';
xmlToolbox+='            <block type="heb_badge_axis_acceleration"></block>';xmlToolbox+='            <block type="heb_badge_was_shaken"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_hackable-electronic-badge_touchpad-control" >';xmlToolbox+='            <block type="heb_touchpad_status"></block>';xmlToolbox+='            <block type="heb_touchpad_sensitivity" include="heb-wx,">';xmlToolbox+='                <field name="LEVEL">7</field>';xmlToolbox+="            </block>";
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_sony-remote" >';xmlToolbox+='            <block type="sirc_get"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_memory" include="heb,heb-wx," colour="165">';xmlToolbox+='        <category key="category_memory_contacts">';xmlToolbox+='            <block type="heb_badge_eeprom_store">';xmlToolbox+='                <value name="CONTACT">';
xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">Last, First</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_badge_eeprom_is_stored">';xmlToolbox+='                <value name="CONTACT">';xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">Last, First</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_badge_eeprom_retrieve">';xmlToolbox+='                <value name="INDEX">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_count_contacts"></block>';
xmlToolbox+='            <block type="heb_erase_all_contacts"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_memory_sdcard" include="heb-wx,">';xmlToolbox+='            <block type="sd_open"></block>';xmlToolbox+='            <block type="sd_read">';xmlToolbox+='                <value name="SIZE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">10</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="sd_file_pointer"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_sensor-input" exclude="s3,heb,heb-wx," colour="140">';xmlToolbox+='        <category key="category_sensor-input_2axis-joystick" include="activity-board,">';xmlToolbox+='            <block type="joystick_input_xaxis"></block>';xmlToolbox+='            <block type="joystick_input_yaxis"></block>';
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_4x4-keypad" >';xmlToolbox+='            <block type="keypad_initialize"></block>';xmlToolbox+='            <block type="keypad_read"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_colorpal" >';xmlToolbox+='            <block type="colorpal_enable"></block>';xmlToolbox+='            <block type="colorpal_get_colors_raw"></block>';xmlToolbox+='            <block type="colorpal_get_colors"></block>';
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_ping" >';xmlToolbox+='            <block type="sensor_ping"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_gps" >';xmlToolbox+='            <block type="GPS_init"></block>';xmlToolbox+='            <block type="GPS_hasFix"></block>';xmlToolbox+='            <block type="GPS_latitude"></block>';xmlToolbox+='            <block type="GPS_longitude"></block>';
xmlToolbox+='            <block type="GPS_heading"></block>';xmlToolbox+='            <block type="GPS_altitude"></block>';xmlToolbox+='            <block type="GPS_velocity"></block>';xmlToolbox+='            <block type="GPS_satsTracked"></block>';xmlToolbox+='            <block type="GPS_date_time"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_fingerprint" >';xmlToolbox+='            <block type="fp_scanner_init"></block>';xmlToolbox+='            <block type="fp_scanner_add">';
xmlToolbox+='                <value name="USER">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="fp_scanner_scan"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_hmc5883l" include="other,">';xmlToolbox+='            <block type="HMC5883L_init"></block>';
xmlToolbox+='            <block type="HMC5883L_read"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_LSM9DS1" >';xmlToolbox+='            <block type="lsm9ds1_init"></block>';xmlToolbox+='            <block type="lsm9ds1_mag_calibrate"></block>';xmlToolbox+='            <block type="lsm9ds1_read"></block>';xmlToolbox+='            <block type="lsm9ds1_tilt"></block>';xmlToolbox+='            <block type="lsm9ds1_heading"></block>';
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_mma7455" include="other,">';xmlToolbox+='            <block type="MMA7455_init"></block>';xmlToolbox+='            <block type="MMA7455_acceleration"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_memsic-2axis" >';xmlToolbox+='            <block type="MX2125_acceleration_xaxis"></block>';xmlToolbox+='            <block type="MX2125_acceleration_yaxis"></block>';
xmlToolbox+='            <block type="MX2125_rotation"></block>';xmlToolbox+='            <block type="MX2125_tilt_xaxis"></block>';xmlToolbox+='            <block type="MX2125_tilt_yaxis"></block>';xmlToolbox+="        </category>";xmlToolbox+="        \x3c!--";xmlToolbox+='                    <category key="category_sensor-input_mma7455" >';xmlToolbox+='                        <block type="MMA7455_init"></block>';xmlToolbox+='                        <block type="MMA7455_acceleration"></block>';
xmlToolbox+="                    </category>";xmlToolbox+="        --\x3e";xmlToolbox+='        <category key="category_sensor-input_pir" >';xmlToolbox+='            <block type="PIR_Sensor"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_rfid" >';xmlToolbox+='            <block type="rfid_enable"></block>';xmlToolbox+='            <block type="rfid_get"></block>';xmlToolbox+='            <block type="rfid_disable"></block>';xmlToolbox+='            <block type="rfid_close"></block>';
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_sony-remote" >';xmlToolbox+='            <block type="sirc_get"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_sound-impact-sensor" >';xmlToolbox+='            <block type="sound_impact_run"></block>';xmlToolbox+='            <block type="sound_impact_get"></block>';xmlToolbox+='            <block type="sound_impact_end"></block>';xmlToolbox+="        </category>";
xmlToolbox+='        <category key="category_sensor-input_temperature-humidity" >';xmlToolbox+='            <block type="dht22_read"></block>';xmlToolbox+='            <block type="dht22_value"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_memory" include="activity-board,flip,other," colour="165">';xmlToolbox+='        <category key="category_memory_eeprom" >';xmlToolbox+='            <block type="eeprom_read">';xmlToolbox+='                <value name="ADDRESS">';
xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="eeprom_write">';xmlToolbox+='                <value name="ADDRESS">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_memory_sdcard">';xmlToolbox+='            <block type="sd_init" exclude="activity-board,"></block>';xmlToolbox+='            <block type="sd_open"></block>';xmlToolbox+='            <block type="sd_read">';xmlToolbox+='                <value name="SIZE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">10</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="sd_file_pointer"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_analog-pulses" exclude="s3,heb,heb-wx," colour="185">';xmlToolbox+='        <category key="category_analog-pulses_pulse-in-out" exclude="s3,">';xmlToolbox+='            <block type="pulse_in"></block>';
xmlToolbox+='            <block type="pulse_out">';xmlToolbox+='                <value name="PULSE_LENGTH">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="base_count">';xmlToolbox+='                <value name="DURATION">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">1</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_analog-pulses_pwm">';xmlToolbox+='            \x3c!-- <block type="pwm_start"></block> --\x3e';xmlToolbox+='            <block type="pwm_set">';xmlToolbox+='                <value name="DUTY_CYCLE">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">50</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="pwm_stop"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_analog-pulses_rc">';xmlToolbox+='            <block type="rc_charge_discharge"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_analog-pulses_voltage" include="activity-board,">';
xmlToolbox+='            <block type="ab_volt_in"></block>';xmlToolbox+='            <block type="ab_volt_out">';xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_analog-pulses_voltage" include="flip,other,">';
xmlToolbox+='            <block type="mcp320x_read"></block>';xmlToolbox+='            <block type="mcp320x_set_vref"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_audio" exclude="s3," colour="185">';xmlToolbox+='        <category key="category_audio_freqout" >';xmlToolbox+='            <block type="base_freqout">';xmlToolbox+='                <value name="DURATION">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="FREQUENCY">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="sound_init" include="activity-board,">';
xmlToolbox+='                <field name="PINL">26</field>';xmlToolbox+='                <field name="PINR">27</field>';xmlToolbox+="            </block>";xmlToolbox+='            <block type="sound_init" include="flip,other,"></block>';xmlToolbox+='            <block type="sound_play"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_hackable-electronic-badge_text-to-speech" >';xmlToolbox+='            <block type="heb_text_to_speech_pins"></block>';
xmlToolbox+='            <block type="heb_text_to_speech_volume"></block>';xmlToolbox+='            <block type="heb_text_to_speech_say">';xmlToolbox+='                <value name="STRING">';xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">heloa</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="heb_text_to_speech_spell">';
xmlToolbox+='                <value name="STRING">';xmlToolbox+='                    <block type="string_type_block">';xmlToolbox+='                        <field name="TEXT">hello</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_audio_audio" exclude="flip,">';xmlToolbox+='            <block type="wav_set_pins" include="activity-board,">';
xmlToolbox+='                <field name="PINL">26</field>';xmlToolbox+='                <field name="PINR">27</field>';xmlToolbox+="            </block>";xmlToolbox+='            <block type="wav_play"></block>';xmlToolbox+='            <block type="wav_status"></block>';xmlToolbox+='            <block type="wav_volume">';xmlToolbox+='                <value name="VOLUME">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';
xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="wav_stop"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_servo" exclude="s3,heb,heb-wx," colour="165">';xmlToolbox+='        <block type="servo_move">';xmlToolbox+='            <value name="ANGLE">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="servo_speed">';xmlToolbox+='            <value name="SPEED">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="servo_set_ramp">';xmlToolbox+='            <value name="RAMPSTEP">';
xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">50</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="fb360_init"></block>';xmlToolbox+='        <block type="fb360_setup">';xmlToolbox+='            <field name="PARAM">setAcceleration</field>';xmlToolbox+="        </block>";xmlToolbox+='        <block type="fb360_set">';xmlToolbox+='            <value name="VALUE">';
xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="fb360_get"></block>';xmlToolbox+='        <block type="fb360_status"></block>';xmlToolbox+='        <block type="scribbler_stop_servo"></block>';xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_robot"  include="activity-board," colour="295">';
xmlToolbox+='        <block type="ab_drive_init"></block>';xmlToolbox+='        <block type="ab_drive_ramping">';xmlToolbox+='            <field name="RAMPING">600</field>';xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_speed">';xmlToolbox+='            <value name="LEFT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";
xmlToolbox+='            <value name="RIGHT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_goto">';xmlToolbox+='            <value name="LEFT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="RIGHT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_goto_max_speed">';xmlToolbox+='            <value name="SPEED">';xmlToolbox+='                <block type="math_number">';
xmlToolbox+='                    <field name="NUM">64</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_stop"></block>';xmlToolbox+='        <block type="ab_drive_get_ticks"></block>';xmlToolbox+='        <block type="activitybot_calibrate"></block>';xmlToolbox+='        <block type="activitybot_display_calibration"></block>';xmlToolbox+='        <block type="activitybot_parallaxy_load"></block>';
xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_robot" include="flip," colour="295" experimental="true">';xmlToolbox+='        <block type="ab_drive_init"></block>';xmlToolbox+='        <block type="ab_drive_ramping">';xmlToolbox+='            <field name="RAMPING">600</field>';xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_speed">';xmlToolbox+='            <value name="LEFT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="RIGHT">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">64</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="ab_drive_stop"></block>';xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_s3-math" include="s3," colour="275">';
xmlToolbox+='        <block type="math_number"></block>';xmlToolbox+='        <block type="scribbler_boolean"></block>';xmlToolbox+='        <block type="scribbler_random_boolean"></block>';xmlToolbox+='        <block type="math_random">';xmlToolbox+='            <value name="A">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">1</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="B">';
xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">10</field>';xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="math_arithmetic"></block>';xmlToolbox+='        <block type="math_limit"></block>';xmlToolbox+='        <block type="logic_operation"></block>';xmlToolbox+='        <block type="math_crement"></block>';xmlToolbox+='        <block type="logic_negate"></block>';
xmlToolbox+='        <block type="logic_compare"></block>';xmlToolbox+='        <block type="constrain_value"></block>';xmlToolbox+='        <block type="map_value"></block>';xmlToolbox+='        <block type="math_advanced"></block>';xmlToolbox+='        <block type="math_inv_trig">';xmlToolbox+='            <value name="ARG3">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">1</field>';xmlToolbox+="                </block>";
xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_sensor-input" include="s3," colour="140">';xmlToolbox+='        <category key="category_sensor-input_s3-line" >';xmlToolbox+='            <block type="calibrate_line_sensor"></block>';xmlToolbox+='            \x3c!-- <block type="scribbler_if_line"></block> --\x3e';xmlToolbox+='            <block type="scribbler_simple_line"></block>';xmlToolbox+='            <block type="line_sensor"></block>';
xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_s3-obstacle" >';xmlToolbox+='            \x3c!-- <block type="scribbler_if_obstacle"></block>';xmlToolbox+='            <block type="obstacle_sensor"></block> --\x3e';xmlToolbox+='            <block type="scribbler_simple_obstacle"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_s3-light" >';xmlToolbox+='            \x3c!-- <block type="scribbler_if_light"></block> --\x3e';
xmlToolbox+='            <block type="scribbler_simple_light"></block>';xmlToolbox+='            <block type="light_sensor"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_s3-stall" >';xmlToolbox+='            \x3c!-- <block type="scribbler_if_stalled"></block> --\x3e';xmlToolbox+='            <block type="stall_sensor"></block>';xmlToolbox+='            \x3c!-- <block type="spinning_sensor"></block> --\x3e';xmlToolbox+="        </category>";
xmlToolbox+='        <category key="category_sensor-input_s3-sirc" >';xmlToolbox+='            <block type="sirc_s3_get"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_s3-mic" >';xmlToolbox+='            <block type="mic_s3_get"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_sensor-input_s3-button" >';xmlToolbox+='            <block type="reset_button_presses"></block>';xmlToolbox+="        </category>";
xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_s3-actions" include="s3," colour="185">';xmlToolbox+='        <category key="category_s3-actions_motors" >';xmlToolbox+='            <block type="scribbler_drive">';xmlToolbox+='                <field name="DRIVE_ANGLE">STRAIGHT</field>';xmlToolbox+="            </block>";xmlToolbox+='            <block type="scribbler_spin"></block>';xmlToolbox+='            <block type="scribbler_stop"></block>';xmlToolbox+='            <block type="move_motors">';
xmlToolbox+='                <value name="LEFT_MOTOR_SPEED">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RIGHT_MOTOR_SPEED">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+='                <value name="MOTOR_DURATION">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="move_motors_distance">';xmlToolbox+='                <value name="LEFT_MOTOR_DISTANCE">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="RIGHT_MOTOR_DISTANCE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="MOTOR_SPEED">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="move_motors_xy">';xmlToolbox+='                <value name="X_DISTANCE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";
xmlToolbox+='                <value name="Y_DISTANCE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="MOTOR_SPEED">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="move_motors_angle">';xmlToolbox+='                <value name="ROTATE_ANGLE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="ROTATE_RADIUS">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="ROTATE_SPEED">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_s3-actions_sound" include="s3,">';
xmlToolbox+='            <block type="scribbler_play">';xmlToolbox+='                <field name="NOTE_DURATION">250</field>';xmlToolbox+='                <field name="NOTE_OCTAVE">4</field>';xmlToolbox+='                <field name="NOTE_FREQUENCY">4186</field>';xmlToolbox+='                <field name="NOTE_VOLUME">50</field>';xmlToolbox+="            </block>";xmlToolbox+='            <block type="play_polyphony">';xmlToolbox+='                <value name="FREQUENCY_1">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="FREQUENCY_2">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POLYPHONY_DURATION">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="POLYPHONY_VOLUME">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_s3-actions_leds" include="s3,">';
xmlToolbox+='            <block type="scribbler_LED"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_communicate" include="s3,">';xmlToolbox+='            <block type="scribbler_serial_send_text"></block>';xmlToolbox+='            <block type="scribbler_serial_send_decimal"></block>';xmlToolbox+='            <block type="scribbler_serial_send_char"></block>';xmlToolbox+='            <block type="scribbler_serial_send_ctrl"></block>';xmlToolbox+="            \x3c!--";
xmlToolbox+='                            <block type="scribbler_serial_cursor_xy">';xmlToolbox+='                                <value name="X">';xmlToolbox+='                                    <block type="spin_integer">';xmlToolbox+='                                        <field name="INT_VALUE">0</field>';xmlToolbox+="                                    </block>";xmlToolbox+="                                </value>";xmlToolbox+='                                <value name="Y">';
xmlToolbox+='                                    <block type="spin_integer">';xmlToolbox+='                                        <field name="INT_VALUE">0</field>';xmlToolbox+="                                    </block>";xmlToolbox+="                                </value>";xmlToolbox+="                            </block>";xmlToolbox+="            --\x3e";xmlToolbox+='            <block type="scribbler_serial_rx_byte"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_memory" include="s3,">';
xmlToolbox+='            <block type="s3_eeprom_read">';xmlToolbox+='                <value name="ADDR">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="s3_eeprom_write">';xmlToolbox+='                <value name="ADDR">';xmlToolbox+='                    <block type="math_number">';
xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+='                <value name="VALUE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">0</field>';xmlToolbox+="                    </block>";xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_s3-actions_reset" include="s3,">';
xmlToolbox+='            <block type="factory_reset"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_s3-hacker-port" include="s3," colour="295">';xmlToolbox+='        <category key="category_s3-hacker-port_sensors" >';xmlToolbox+='            <block type="scribbler_ping"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_s3-hacker-port_pins" >';xmlToolbox+='            <block type="make_pin"></block>';
xmlToolbox+='            <block type="check_pin"></block>';xmlToolbox+='            <block type="analog_input"></block>';xmlToolbox+="        </category>";xmlToolbox+='        <category key="category_s3-hacker-port_servo" >';xmlToolbox+='            <block type="servo_move">';xmlToolbox+='                <value name="ANGLE">';xmlToolbox+='                    <block type="math_number">';xmlToolbox+='                        <field name="NUM">90</field>';xmlToolbox+="                    </block>";
xmlToolbox+="                </value>";xmlToolbox+="            </block>";xmlToolbox+='            <block type="scribbler_stop_servo"></block>';xmlToolbox+="        </category>";xmlToolbox+="    </category>";xmlToolbox+='    <category key="category_system" exclude="s3," colour="320">';xmlToolbox+='        <block type="custom_code_multiple"></block>';xmlToolbox+='        <block type="waitcnt">';xmlToolbox+='            <value name="TARGET">';xmlToolbox+='                <block type="math_arithmetic">';
xmlToolbox+='                    <value name="A">';xmlToolbox+='                        <block type="system_counter"></block>';xmlToolbox+="                    </value>";xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="wait_pin" experimental="true">';xmlToolbox+='            <value name="PIN">';xmlToolbox+='                <block type="math_number">';xmlToolbox+='                    <field name="NUM">0</field>';
xmlToolbox+="                </block>";xmlToolbox+="            </value>";xmlToolbox+='            <value name="STATE">';xmlToolbox+='                <block type="high_low_value"></block>';xmlToolbox+="            </value>";xmlToolbox+="        </block>";xmlToolbox+='        <block type="register_set"></block>';xmlToolbox+='        <block type="register_get"></block>';xmlToolbox+='        <block type="system_counter" include="other,"></block>';xmlToolbox+="    </category>";xmlToolbox+="</xml>";
var colorChanges={140:"#AAAAAA",165:"#222222",185:"#333333",205:"#444444",225:"#555555",250:"#666666",275:"#777777",295:"#888888",320:"#999999",340:"#111111"};
function filterToolbox(a){xmlToolbox=xmlToolbox.replace(/key="([\S]+)"/g,function(a,b){return'name="'+toolbox_label[b]+'"'});"1"==getURLParameter("grayscale")&&(xmlToolbox=xmlToolbox.replace(/colour="([\S]+)"/g,function(a,b){return'colour="'+colorChanges[b]+'"'}));parser=new DOMParser;xmlDoc=parser.parseFromString(xmlToolbox,"text/xml");tagSearch=["category","sep","block"];for(var b=[],c=0;c<tagSearch.length;c++)for(var d=xmlDoc.getElementsByTagName(tagSearch[c]),e=0;e<d.length;e++){var f=d[e],g=
f.getAttribute("include"),h=f.getAttribute("exclude"),m=f.getAttribute("experimental");g&&-1===g.indexOf(a+",")?b.push(f):h&&-1<h.indexOf(a+",")?b.push(f):m&&"demo"!==inDemo&&b.push(f)}for(c=0;c<b.length;c++)b[c].parentNode.removeChild(b[c]);out=new XMLSerializer;a=out.serializeToString(xmlDoc);return a=a.replace(/ include="[\S]+"/g,"").replace(/ exclude="[\S]+"/g,"")};Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.math_number={init:function(){"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL),this.setColour(colorPalette.getColor("math"))):(this.setHelpUrl(Blockly.MSG_VALUES_HELPURL),this.setColour(colorPalette.getColor("programming")));this.setTooltip(Blockly.MSG_MATH_NUMBER_TOOLTIP);this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber("0",null,null,1),"NUM");this.appendDummyInput("HIDDENVALS").appendField("","RVALS").appendField("",
"CONN").setVisible(!1);this.setOutput(!0,"Number");this.connection_id_=null;this.currentInputType="number0"},onchange:function(a){if(a&&(a.type===Blockly.Events.CHANGE||a.type===Blockly.Events.MOVE)){a=["N","-100","100","0"];var b=[-100,100,0],c=this.getFieldValue("NUM");if(this.outputConnection)if(null!==this.outputConnection.targetBlock()){var d,e=this.outputConnection.targetBlock().getInputWithBlock(this).fieldRow;for(d in e)if(e.hasOwnProperty(d)&&!isNaN(parseInt(d,10))){var f=e[d].name||" ";
if("RANGEVALS"===f.substring(0,9)){var g=f;break}}if(d=this.outputConnection.targetBlock())if(g=d.getFieldValue(g))if(a=g.split(","),"S"===a[0]||"R"===a[0]||"A"===a[0])for(g=1;g<=a.length;g++)b[g-1]=Number(a[g]);this.outputConnection.targetBlock().getInputWithBlock(this)!==this.connection_id_&&(g=this.getFieldValue("NUM"),"S"===a[0]?(g=Number(g),g>b[1]&&(g=b[1]),g<b[0]&&(g=b[0]),this.setWarningText(null),this.currentInputType!=="slider"+b[0].toString(10)+"to"+b[1].toString(10)&&(this.getInput("MAIN")&&
this.removeInput("MAIN"),this.appendDummyInput("MAIN").appendField(new Blockly.FieldRange(g.toString(10),b[0].toString(10),b[1].toString(10)),"NUM"),this.currentInputType="slider"+b[0].toString(10)+"to"+b[1].toString(10))):this.currentInputType!=="number"+g&&(this.getInput("MAIN")&&this.removeInput("MAIN"),this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber(g,null,null,1),"NUM"),this.currentInputType="number"+g));this.connection_id_=this.outputConnection.targetBlock().getInputWithBlock(this)}else this.connection_id_&&
(g=this.getFieldValue("NUM"),this.currentInputType!=="number"+g&&(this.getInput("MAIN")&&this.removeInput("MAIN"),this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber(g,null,null,1),"NUM"),this.currentInputType="number"+g)),this.connection_id_=null,a=["N","-100","100","0"];b[2]=Number(this.getFieldValue("NUM"));if(a){if("R"===a[0])b[2]<b[0]?this.setWarningText("WARNING: Your value is too small!  It must be greater than or equal to "+b[0].toString(10)):b[2]>b[1]?this.setWarningText("WARNING: Your value is too large!  It must be less than or equal to "+
b[1].toString(10)):this.setWarningText(null);else if("A"===a[0]){d="none";for(g=0;g<b.length;g++)b[2]===Number(a[g])&&(d="match");"none"===d?this.setWarningText("WARNING: The value you entered is not available or not allowed!"):this.setWarningText(null)}else this.setWarningText(null);"R"===a[0]&&(b[2]<b[0]||b[2]>b[1])&&1E7>=Math.abs(b[0]-b[1])?this.getField("TITLE")?2147483647<=b[1]?this.setFieldValue("(\u2265 "+b[0].toString(10)+")","TITLE"):-2147483647>=b[0]?this.setFieldValue("(\u2264"+b[1].toString(10)+
")","TITLE"):Math.abs(b[0])===Math.abs(b[1])?this.setFieldValue("(+/- "+Math.abs(b[0]).toString(10)+")","TITLE"):this.setFieldValue("("+b[0].toString(10)+" to "+b[1].toString(10)+")","TITLE"):(this.getInput("MAIN")&&this.removeInput("MAIN"),this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber(c,null,null,1),"NUM").appendField("","TITLE"),this.currentInputType="titlenumber"+c):this.getField("TITLE")&&(this.getInput("MAIN")&&this.removeInput("MAIN"),"S"===a[0]?(this.appendDummyInput("MAIN").appendField(new Blockly.FieldRange(c,
b[0].toString(10),b[1].toString(10)),"NUM"),this.currentInputType="slider"+b[0].toString(10)+"to"+b[1].toString(10)):(this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber(c,null,null,1),"NUM"),this.currentInputType="number"+c));this.setFieldValue(a.toString(),"RVALS")}else this.getField("TITLE")&&(this.getInput("MAIN")&&this.removeInput("MAIN"),this.appendDummyInput("MAIN").appendField(new Blockly.FieldNumber(c,null,null,1),"NUM"),this.currentInputType="number"+c),this.setFieldValue("",
"RVALS"),this.setWarningText(null)}}};Blockly.propc.math_number=function(){var a=window.parseInt(this.getFieldValue("NUM"));return[a,0>a?Blockly.propc.ORDER_UNARY_PREFIX:Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.math_arithmetic={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_MATH_ARITHMETIC_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.setOutput(!0,"Number");this.appendValueInput("A").setCheck("Number");this.appendValueInput("B").setCheck("Number").appendField(new Blockly.FieldDropdown([["+"," + "],["\u2212"," - "],["\u00d7"," * "],["\u00f7",
" / "],["% (remainder after division)"," % "],["^ (raise to the power of)"," p "]]),"OP");this.setInputsInline(!0);this.myChildren_="B";this.myConnection_=null;this.setMutator(new Blockly.Mutator(["math_arithmatic_term"]))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("terms",this.myChildren_);return a},domToMutation:function(a){this.myChildren_=a.getAttribute("terms");if(66<this.myChildren_.charCodeAt(0))for(a=67;a<=this.myChildren_.charCodeAt(0);a++)this.appendValueInput(String.fromCharCode(a)).setCheck("Number").appendField(new Blockly.FieldDropdown([["+",
" + "],["\u2212"," - "],["\u00d7"," * "],["\u00f7"," / "],["% (remainder after division)"," % "],["^ (raise to the power of)"," p "]]),"OP"+String.fromCharCode(a))},decompose:function(a){var b=a.newBlock("math_arithmatic_container");b.initSvg();var c=b.getInput("STACK").connection;if(66<this.myChildren_.charCodeAt(0))for(var d=67;d<=this.myChildren_.charCodeAt(0);d++){var e=a.newBlock("math_arithmatic_term");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){for(var b=
67;this.getInput(String.fromCharCode(b));)this.removeInput(String.fromCharCode(b)),b++;b=67;for(a=a.getInputTargetBlock("STACK");a;){var c=this.appendValueInput(String.fromCharCode(b)).setCheck("Number").appendField(new Blockly.FieldDropdown([["+"," + "],["\u2212"," - "],["\u00d7"," * "],["\u00f7"," / "],["% (remainder after division)"," % "],["^ (raise to the power of)"," p "]]),"OP"+String.fromCharCode(b));a.valueConnection_&&c.connection.connect(a.valueConnection_);b++;a=a.nextConnection&&a.nextConnection.targetBlock()}this.myChildren_=
String.fromCharCode(b-1)},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=67;a;){var c=this.getInput(String.fromCharCode(b));a.valueConnection_=c&&c.connection.targetConnection;a=a.nextConnection&&a.nextConnection.targetBlock();b++}}};
Blockly.Blocks.math_arithmatic_container={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("Math");this.appendDummyInput().appendField("  term");this.appendDummyInput().appendField("  term");this.setInputsInline(!1);this.appendStatementInput("STACK");this.contextMenu=!1}};
Blockly.Blocks.math_arithmatic_term={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("term");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.propc.math_arithmetic=function(){var a=[this.getFieldValue("OP")],b=[Blockly.propc.valueToCode(this,"A",Blockly.propc.ORDER_MULTIPLICATIVE)||"0"];b.push(Blockly.propc.valueToCode(this,"B",Blockly.propc.ORDER_MULTIPLICATIVE)||"0");for(var c="",d=67;90>=d;d++)Blockly.propc.valueToCode(this,String.fromCharCode(d),Blockly.propc.ORDER_MULTIPLICATIVE)?(a.push(this.getFieldValue("OP"+String.fromCharCode(d))),b.push(Blockly.propc.valueToCode(this,String.fromCharCode(d),Blockly.propc.ORDER_MULTIPLICATIVE))):
(a.push(""),b.push(""));a.push("");for(d=0;26>d;d++)if(" p "===a[d])c+="pow("+b[d]+", ";else if(0<d){for(var e="",f=d-1;-1<f;){if(" p "===a[f])e+=")";else break;f--}c+=b[d]+e+a[d]}else c+=b[d],c+=a[d];return[c,Blockly.propc.ORDER_NONE]};
Blockly.Blocks.math_limit={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MATH_LIMIT_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("A").setCheck("Number").appendField(new Blockly.FieldDropdown([["highest of"," > "],["lowest of"," < "]]),"OP");this.appendValueInput("B").setCheck("Number").appendField("and");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.math_limit=function(){var a=this.getFieldValue("OP"),b=Blockly.propc.valueToCode(this,"A",Blockly.propc.ORDER_ASSIGNMENT)||"0",c=Blockly.propc.valueToCode(this,"B",Blockly.propc.ORDER_ASSIGNMENT)||"0";return["("+b+a+c+" ? "+b+" : "+c+")",Blockly.propc.ORDER_ASSIGNMENT]};
Blockly.Blocks.math_crement={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_MATH_CREMENT_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("VAR").setCheck("Number").appendField(new Blockly.FieldDropdown([["decrement","--"],["increment","++"]]),"OP");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0)}};
Blockly.propc.math_crement=function(){var a=this.getFieldValue("OP");return(Blockly.propc.valueToCode(this,"VAR",Blockly.propc.ORDER_UNARY_PREFIX)||"0")+a+";\n"};
Blockly.Blocks.math_random={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_MATH_RANDOM_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("A").setCheck("Number").appendField("random number from");this.appendValueInput("B").setCheck("Number").appendField("to");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,
null);this.setOutput(!0,"Number")}};Blockly.propc.math_random=function(){var a=Blockly.propc.valueToCode(this,"A",Blockly.propc.ORDER_ATOMIC)||"1",b=Blockly.propc.valueToCode(this,"B",Blockly.propc.ORDER_ATOMIC)||"100";return["random("+a+", "+b+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.math_bitwise={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MATH_BITWISE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("A").setCheck("Number");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["& (bitwise AND)"," & "],["| (bitwise OR)"," | "],["^ (bitwise XOR)"," ^ "],[">> (bitwise right shift)"," >> "],["<< (bitwise left shift)"," << "]]),"OP");this.appendValueInput("B").setCheck("Number");this.setOutput(!0,
"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};Blockly.propc.math_bitwise=function(){var a=Blockly.propc.valueToCode(this,"A",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"B",Blockly.propc.ORDER_NONE),c=this.getFieldValue("OP");return[a+c+b,Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.base_delay={helpUrl:Blockly.MSG_CONTROL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_BASE_DELAY_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendValueInput("DELAY_TIME","Number").appendField("pause (ms)").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.base_delay=function(){return"pause("+(Blockly.propc.valueToCode(this,"DELAY_TIME",Blockly.propc.ORDER_ATOMIC)||"1000")+");\n"};
Blockly.Blocks.string_type_block={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_TYPE_BLOCK_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("\u201c").appendField(new Blockly.FieldTextInput("Hello"),"TEXT").appendField("\u201d");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"String")}};
Blockly.propc.string_type_block=function(){return['"'+this.getFieldValue("TEXT").replace(/"/g,'\\"')+'"',Blockly.propc.ORDER_NONE]};
Blockly.Blocks.char_type_block={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CHAR_TYPE_BLOCK_TOOLTIP);this.setColour(colorPalette.getColor("programming"));for(var a=[["32 - space","32"]],b=33;127>b;b++)a.push([b.toString(10)+" - "+String.fromCharCode(b),b.toString(10)]);a.push(["7 - bell","7"]);a.push(["10 - line feed","10"]);a.push(["11 - tab","11"]);a.push(["13 - carriage return","13"]);a.push(["127 - delete","127"]);this.appendDummyInput().appendField("character").appendField(new Blockly.FieldDropdown(a),
"CHAR");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};Blockly.propc.char_type_block=function(){return[this.getFieldValue("CHAR"),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.music_note={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MUSIC_NOTE_BLOCK_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("music note").appendField(new Blockly.FieldDropdown([["C","2093.00"],["C\u266f/D\u266d","2217.46"],["D","2349.32"],["D\u266f/E\u266d","2489.02"],["E","2637.02"],["F","2793.83"],["F\u266f/G\u266d","2959.96"],["G","3135.96"],["G\u266f/A\u266d","3322.44"],["A","3520.00"],["A\u266f/B\u266d",
"3729.31"],["B","3951.07"]]),"NOTE").appendField("octave").appendField(new Blockly.FieldDropdown([["1st","0.015625"],["2nd","0.03125"],["3rd","0.0625"],["4th","0.125"],["5th","0.25"],["6th","0.5"],["7th","1"],["8th","2"]]),"OCTAVE");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};Blockly.propc.music_note=function(){return[Math.round(parseFloat(this.getFieldValue("NOTE"))*parseFloat(this.getFieldValue("OCTAVE"))).toString(10),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.system_counter={init:function(){this.setTooltip(Blockly.MSG_SYSTEM_COUNTER_TOOLTIP);"Other Propeller Boards"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_SYSTEM_HELPURL),this.setColour(colorPalette.getColor("system"))):(this.setColour(colorPalette.getColor("programming")),this.setHelpUrl(Blockly.MSG_VALUES_HELPURL));this.appendDummyInput().appendField("system").appendField(new Blockly.FieldDropdown([["counter","CNT"],["clock frequency","CLKFREQ"]]),"CMD");this.setOutput(!0,
"Number")}};Blockly.propc.system_counter=function(){return[this.getFieldValue("CMD"),Blockly.propc.ORDER_NONE]};Blockly.Blocks.waitcnt={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAITCNT_TOOLTIP);this.setColour(colorPalette.getColor("system"));this.appendValueInput("TARGET").setCheck("Number").appendField("Wait until");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.waitcnt=function(){return"waitcnt("+Blockly.propc.valueToCode(this,"TARGET",Blockly.propc.ORDER_NONE)+");\n"};
Blockly.Blocks.register_set={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_REGISTER_SET_TOOLTIP);this.setColour(colorPalette.getColor("system"));this.appendValueInput("TARGET").setCheck("Number").appendField("cog").appendField(new Blockly.FieldDropdown([["pin output","OUTA"],["pin direction","DIRA"],["counter A","CTRA"],["counter B","CTRB"],["frequency A","FRQA"],["frequency B","FRQB"],["phase accumulator A","PHSA"],["phase accumulator B","PHSB"]]),"CMD").appendField("register =");
this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.register_set=function(){var a=Blockly.propc.valueToCode(this,"TARGET",Blockly.propc.ORDER_NONE);return this.getFieldValue("CMD")+" = "+a+";\n"};
Blockly.Blocks.register_get={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_REGISTER_GET_TOOLTIP);this.setColour(colorPalette.getColor("system"));this.appendDummyInput().appendField("cog").appendField(new Blockly.FieldDropdown([["pin input","INA"],["pin output","OUTA"],["pin direction","DIRA"],["counter A","CTRA"],["counter B","CTRB"],["frequency A","FRQA"],["frequency B","FRQB"],["phase accumulator A","PHSA"],["phase accumulator B","PHSB"]]),"CMD").appendField("register");
this.setOutput(!0,"Number")}};Blockly.propc.register_get=function(){return[this.getFieldValue("CMD"),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.wait_pin={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAIT_PIN_TOOLTIP);this.setColour(colorPalette.getColor("system"));this.appendValueInput("PIN").setCheck("Number").appendField("wait until").appendField(new Blockly.FieldDropdown([["PIN","(1 << x)"],["pin mask","x"]]),"PINTYPE");this.appendValueInput("STATE").setCheck("Number").appendField(new Blockly.FieldDropdown([["is","waitpeq"],["is not","waitpne"]]),"FUNC");this.setInputsInline(!0);this.setPreviousStatement(!0,
null);this.setNextStatement(!0,"Block")}};Blockly.propc.wait_pin=function(){var a=Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_NONE)||"0",b=Blockly.propc.valueToCode(this,"STATE",Blockly.propc.ORDER_NONE)||"0",c=this.getFieldValue("PINTYPE");return this.getFieldValue("FUNC")+"("+c.replace("1",b).replace("x",a)+", "+c.replace("x",a)+");\n"};
Blockly.Blocks.custom_code={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CUSTOM_CODE_TOOLTIP);this.setColour("#FF8800");this.setWarningText('WARNING: This block has been deprecated.\nReplace with a "User defined code" block from the Control menu.');this.appendDummyInput().appendField("user code").appendField(new Blockly.FieldTextInput(""),"CODE").appendField("in").appendField(new Blockly.FieldDropdown([["main","main"],["setup","setup"],["definitions","definitions"],
["includes","includes"]]),"LOC");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.custom_code=function(){var a=this.getFieldValue("LOC"),b=this.getFieldValue("CODE"),c="";"includes"===a?Blockly.definitions_["cCode"+cCode]=b:"setup"===a?Blockly.propc.setups_["cCode"+cCode]=b:"definitions"===a?Blockly.propc.global_vars_["cCode"+cCode]=b:c=b;cCode++;return c};
Blockly.Blocks.string_var_length={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_VAR_LENGTH_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.setInputsInline(!1);this.appendDummyInput().appendField("String variable set size of");this.optionList_=["var"];this.v_list=["MYVALUE","MYVALUE"];this.updateConstMenu();this.updateShape_();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["string_var_length_var",
"string_var_length_con"]))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("options",JSON.stringify(this.optionList_));return a},domToMutation:function(a){var b=JSON.parse(a.getAttribute("options"));if(!b||b===[]){b=[];a=parseInt(a.getAttribute("vars")||"1");for(var c=0;c<a;c++)b.push("var")}this.optionList_=b;this.updateConstMenu();this.updateShape_()},decompose:function(a){var b=a.newBlock("string_var_length_container");b.initSvg();for(var c=b.getInput("STACK").connection,
d=0;d<this.optionList_.length;d++){var e=a.newBlock("string_var_length_"+this.optionList_[d]);e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){var b=a.getInputTargetBlock("STACK");this.optionList_.length=0;for(a=[];b;){var c=b.type.split("_");this.optionList_.push(c[c.length-1]);a.push([b.varName_,b.varLen_]);b=b.nextConnection&&b.nextConnection.targetBlock()}this.updateConstMenu();this.updateShape_();for(b=0;b<this.optionList_.length;b++)void 0!==a[b][0]&&
this.setFieldValue(a[b][0],"VAR_NAME"+b),void 0!==a[b][1]&&this.setFieldValue(a[b][1],"VAR_LEN"+b)},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;)a.varName_=this.getFieldValue("VAR_NAME"+b)||Blockly.LANG_VARIABLES_GET_ITEM,a.varLen_=this.getFieldValue("VAR_LEN"+b)||"64",a=a.nextConnection&&a.nextConnection.targetBlock(),b++},updateConstMenu:function(a,b){var c=!0;this.v_list=[];for(var d=Blockly.getMainWorkspace().getAllBlocks(),e=0;e<d.length;e++)"constant_define"===
d[e].type&&(c=d[e].getFieldValue("CONSTANT_NAME"),c===a&&b&&(c=b),c&&this.v_list.push([c,c]),c=!1);c&&this.v_list.push(["MYVALUE","MYVALUE"]);for(d=0;d<this.optionList_.length;d++)"con"===this.optionList_[d]&&(e=this.getFieldValue("VAR_LEN"+d),c=this.getFieldValue("VAR_NAME"+d),this.getInput("VAR"+d)&&this.removeInput("VAR"+d),this.appendDummyInput("VAR"+d).appendField("variable").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR_NAME"+d).appendField("to").appendField(new Blockly.FieldDropdown(uniq_fast(this.v_list)),
"VAR_LEN"+d).appendField("characters"),this.setFieldValue(c,"VAR_NAME"+d),e&&e===a&&b?this.setFieldValue(b,"VAR_LEN"+d):e&&this.setFieldValue(e,"VAR_LEN"+d))},updateShape_:function(){for(var a=0;this.getInput("VAR"+a);)this.removeInput("VAR"+a),a++;for(a=0;a<this.optionList_.length;a++)"con"===this.optionList_[a]?this.appendDummyInput("VAR"+a).appendField("variable").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR_NAME"+a).appendField("to").appendField(new Blockly.FieldDropdown(uniq_fast(this.v_list)),
"VAR_LEN"+a).appendField("characters"):this.appendDummyInput("VAR"+a).appendField("variable").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR_NAME"+a).appendField("to").appendField(new Blockly.FieldNumber("64",null,null,1),"VAR_LEN"+a).appendField("characters")},onchange:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=0,c=0;c<a.length;c++)"string_var_length"===a[c].type&&b++;1<b?this.setWarningText("WARNING! Only use one of these blocks!"):this.setWarningText(null)}};
Blockly.Blocks.string_var_length_container={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("String variable lengths");this.setInputsInline(!1);this.appendStatementInput("STACK");this.contextMenu=!1}};Blockly.Blocks.string_var_length_var={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.string_var_length_con={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("named constant");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.propc.string_var_length=function(){var a=0;for(Blockly.propc.string_var_lengths=[];this.getInput("VAR"+a.toString(10));){var b=this.getFieldValue("VAR_LEN"+a.toString(10)),c="";"con"===this.optionList_[a]&&(c="MY_");Blockly.propc.string_var_lengths.push([this.getFieldValue("VAR_NAME"+a.toString(10)),c+b]);a++}return""};
Blockly.Blocks.string_length={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_LENGTH_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("VALUE").setCheck("String").appendField("length of string");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.string_length=function(){return["((int) strlen("+Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)+"))",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.high_low_value={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_HIGH_LOW_VALUE_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(new Blockly.FieldDropdown([["high","1"],["low","0"]]),"VALUE");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};Blockly.propc.high_low_value=function(){return[this.getFieldValue("VALUE"),Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.comment={helpUrl:Blockly.MSG_CONTROL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COMMENT_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput("MAIN").appendField("add","TITLE").appendField(new Blockly.FieldDropdown([["comment","COMMENT"],["blank separator","SPACER"],["***       ","SPACER"]],function(a){this.sourceBlock_.updateShape_({ACTION:a})}),"ACTION").appendField(new Blockly.FieldTextInput(""),"COMMENT_TEXT");this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("ACTION");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.updateShape_({ACTION:a})},updateShape_:function(a){var b=a.ACTION;void 0===a.ACTION&&(b=this.getFieldValue("ACTION"));this.getFieldValue("COMMENT_TEXT");this.getInput("MAIN")&&this.removeInput("MAIN");"COMMENT"===b?(this.setColour(colorPalette.getColor("programming")),
this.appendDummyInput("MAIN").appendField("add","TITLE").appendField(new Blockly.FieldDropdown([["comment","COMMENT"],["blank separator","SPACER"]],function(a){this.sourceBlock_.updateShape_({ACTION:a})}),"ACTION").appendField(new Blockly.FieldTextInput(""),"COMMENT_TEXT")):"SPACER"===b&&"#FFFFFF"!==this.getColour&&(this.setColour("#FFFFFF"),this.appendDummyInput("MAIN").appendField("   ","TITLE").appendField(new Blockly.FieldDropdown([["comment","COMMENT"],["       \u25bd       ","SPACER"]],function(a){this.sourceBlock_.updateShape_({ACTION:a})}),
"ACTION").appendField(new Blockly.FieldTextInput(""),"COMMENT_TEXT"),this.setFieldValue("SPACER","ACTION"),this.getField("COMMENT_TEXT").setVisible(!1))}};Blockly.propc.comment=function(){return"// "+this.getFieldValue("COMMENT_TEXT")+"\n"};
Blockly.Blocks.color_picker={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COLOR_PICKER_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("color").appendField((new Blockly.FieldColour("#FFFFFF")).setColours("#FFFFFF #DFDFDF #BFBFBF #9F9F9F #7F7F7F #5F5F5F #3F3F3F #1F1F1F #000000 #FFCCCC #FF9999 #FF6666 #FF3333 #FF0000 #CC0000 #990000 #660000 #330000 #FFE5CC #FFCB99 #FFB166 #FF9733 #FF7D00 #CC6400 #994B00 #663200 #331900 #FFFFCC #FFFF99 #FFFF66 #FFFF33 #FFFF00 #CCCC00 #999900 #666600 #333300 #E5FFCC #CBFF99 #B1FF66 #97FF33 #7DFF00 #64CC00 #4B9900 #326600 #193300 #CCFFCC #99FF99 #66FF66 #33FF33 #00FF00 #00CC00 #009900 #006600 #003300 #CCFFE5 #99FFCB #66FFB1 #33FF97 #00FF7D #00CC64 #00994B #006632 #003319 #CCFFFF #99FFFF #66FFFF #33FFFF #00FFFF #00CCCC #009999 #006666 #003333 #CCE5FF #99CBFF #66B1FF #3397FF #007DFF #0064CC #004B99 #003266 #001933 #CCCCFF #9999FF #6666FF #3333FF #0000FF #0000CC #000099 #000066 #000033 #E5CCFF #CB99FF #B166FF #9733FF #7D00FF #6400CC #4B0099 #320066 #190033 #FFCCFF #FF99FF #FF66FF #FF33FF #FF00FF #CC00CC #990099 #660066 #330033 #FFCCE5 #FF99CB #FF66B1 #FF3397 #FF007D #CC0064 #99004B #660032 #330019".split(" ")).setColumns(9),"COLOR");
this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};Blockly.propc.color_picker=function(){var a=this.getFieldValue("COLOR");a="0x"+a.substr(1);return[a,Blockly.propc.ORDER_NONE]};
Blockly.Blocks.color_value_from={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COLOR_VALUE_FROM_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("color value from:");this.appendValueInput("RED_VALUE").appendField("R,0,255,0","RANGEVALS0").appendField("red").setCheck("Number");this.appendValueInput("GREEN_VALUE").appendField("R,0,255,0","RANGEVALS1").appendField("green").setCheck("Number");this.appendValueInput("BLUE_VALUE").appendField("R,0,255,0",
"RANGEVALS2").appendField("blue").setCheck("Number");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.getField("RANGEVALS2").setVisible(!1);this.setOutput(!0,"Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.color_value_from=function(){Blockly.propc.definitions_.colormath='#include "colormath.h"';var a=Blockly.propc.valueToCode(this,"RED_VALUE",Blockly.propc.ORDER_NONE)||"0",b=Blockly.propc.valueToCode(this,"GREEN_VALUE",Blockly.propc.ORDER_NONE)||"0",c=Blockly.propc.valueToCode(this,"BLUE_VALUE",Blockly.propc.ORDER_NONE)||"0";return["getColorRRGGBB("+a+", "+b+", "+c+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.get_channel_from={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GET_CHANNEL_FROM_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("get").appendField(new Blockly.FieldDropdown([["Red","R"],["Green","G"],["Blue","B"]]),"CHANNEL");this.appendValueInput("COLOR").appendField("value from").setCheck("Number");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,
null)}};Blockly.propc.get_channel_from=function(){var a=this.getFieldValue("CHANNEL"),b=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE);Blockly.propc.definitions_.colormath='#include "colormath.h"';return["get8bitColor("+b+', "'+a+'")',Blockly.propc.ORDER_NONE]};
Blockly.Blocks.compare_colors={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COMPARE_COLORS_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("compare");this.appendValueInput("COLOR1").appendField("color 1:").setCheck("Number");this.appendValueInput("COLOR2").appendField("color 2:").setCheck("Number");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.compare_colors=function(){var a=Blockly.propc.valueToCode(this,"COLOR1",Blockly.propc.ORDER_NONE)||"0",b=Blockly.propc.valueToCode(this,"COLOR2",Blockly.propc.ORDER_NONE)||"0";Blockly.propc.definitions_.colormath='#include "colormath.h"';return["compareRRGGBB("+a+", "+b+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.logic_compare={category:Blockly.LANG_CATEGORY_LOGIC,init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_LOGIC_COMPARE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.setOutput(!0,"Number");this.appendValueInput("A").setCheck("Number");this.appendValueInput("B").setCheck("Number").appendField(new Blockly.FieldDropdown([["=","=="],["\u2260",
"!="],["<","<"],["\u2264","<="],[">",">"],["\u2265",">="]]),"OP");this.setInputsInline(!0)}};Blockly.propc.logic_compare=function(){var a=this.getFieldValue("OP"),b="=="===a||"!="===a?Blockly.propc.ORDER_EQUALITY:Blockly.propc.ORDER_RELATIONAL,c=Blockly.propc.valueToCode(this,"A",b)||"0",d=Blockly.propc.valueToCode(this,"B",b)||"0";return[c+" "+a+" "+d,b]};
Blockly.Blocks.logic_operation={category:Blockly.LANG_CATEGORY_LOGIC,init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_LOGIC_OPERATION_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.setOutput(!0,"Number");this.appendValueInput("A").setCheck("Number");this.appendValueInput("B").setCheck("Number").appendField(new Blockly.FieldDropdown([["and"," && "],["or",
" || "],["and not"," && !"],["or not"," || !"]]),"OP");this.setInputsInline(!0)}};Blockly.propc.logic_operation=function(){var a=this.getFieldValue("OP"),b=Blockly.propc.ORDER_LOGICAL_AND;if(" || "===a||" || !"===a)b=Blockly.propc.ORDER_LOGICAL_OR;var c=Blockly.propc.valueToCode(this,"A",b)||"0",d=Blockly.propc.valueToCode(this,"B",b)||"0";return[c+" "+a+d,b]};
Blockly.Blocks.parens={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_PARENS_TOOLTIP);this.appendValueInput("BOOL").appendField("(","OP").setCheck("Number");this.appendDummyInput("").appendField(")");this.setInputsInline(!0);this.setColour(colorPalette.getColor("math"));this.setOutput(!0,"Number");this.setInputsInline(!0)}};
Blockly.propc.parens=function(){return["("+(Blockly.propc.valueToCode(this,"BOOL",Blockly.propc.ORDER_ATOMIC)||"0")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.logic_negate={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL):this.setHelpUrl(Blockly.MSG_NUMBERS_HELPURL);this.setTooltip(Blockly.MSG_LOGIC_NEGATE_TOOLTIP);this.appendValueInput("BOOL").setCheck("Number").appendField(new Blockly.FieldDropdown([["not","!"],["negate","-"],["abs","abs("]]),"OP");this.setColour(colorPalette.getColor("math"));this.setOutput(!0,"Number");this.setInputsInline(!1)}};
Blockly.propc.logic_negate=function(){var a=Blockly.propc.ORDER_UNARY_PREFIX,b=this.getFieldValue("OP"),c=Blockly.propc.valueToCode(this,"BOOL",a)||"0";c=b+c;"abs("===b&&(c+=")",a=Blockly.propc.ORDER_NONE);return[c,a]};
Blockly.Blocks.logic_boolean={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LOGIC_BOOLEAN_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.setOutput(!0,"Number");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["true","TRUE"],["false","FALSE"]]),"BOOL")}};Blockly.propc.logic_boolean=function(){return["TRUE"===this.getFieldValue("BOOL")?"1":"0",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.cog_new={helpUrl:Blockly.MSG_CONTROL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COG_NEW_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("new processor");this.appendStatementInput("METHOD").setCheck("Function").appendField("function");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.cog_new=function(){var a=Blockly.propc.statementToCode(this,"METHOD"),b=a.replace("  ","").replace("\n","").replace("()","").replace(";",""),c="";2<a.length&&(Blockly.propc.cog_methods_[b]=a,c="cog_run("+b+", 128);\n");return c};
Blockly.Blocks.combine_strings={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COMBINE_STRINGS_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("STRA").setCheck("String").appendField("combine string");this.appendValueInput("STRB").setCheck("String").appendField("with string");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null)}};
Blockly.propc.combine_strings=function(){var a=Blockly.propc.valueToCode(this,"STRA",Blockly.propc.ORDER_ATOMIC)||"",b=Blockly.propc.valueToCode(this,"STRB",Blockly.propc.ORDER_ATOMIC)||"",c=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE),d="";Blockly.propc.vartype_[c]="char *";return""!==a&&""!==b?d+("sprint("+c+', "%s%s", '+a+", "+b+");\n"):""!==a?d+("strcpy("+c+", "+b+");\n"):""!==b?d+("strcpy("+c+", "+a+");\n"):d+"// Both of the strings to combine are blank!\n"};
Blockly.Blocks.find_substring={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_FIND_SUBSTRING_TOOLTIP);"find_substring"===this.type?(this.setColour("#FF8800"),this.setWarningText("WARNING: This block has been deprecated.\nReplace with a new block from the Operators > Numbers menu.\nOld blocks were (1) referenced, new blocks are (0) referenced.")):this.setColour(colorPalette.getColor("math"));this.appendValueInput("SUBSTR").setCheck("String").appendField("find location of text");
this.appendValueInput("STR").setCheck("String").appendField("in string");"find_substring"!==this.type&&this.appendValueInput("LOC").appendField("starting at position");this.setInputsInline(!0);this.setOutput(!0,"Number")}};Blockly.Blocks.find_substring_zero=Blockly.Blocks.find_substring;
Blockly.propc.find_substring=function(){var a=Blockly.propc.valueToCode(this,"SUBSTR",Blockly.propc.ORDER_ATOMIC)||"",b=Blockly.propc.valueToCode(this,"STR",Blockly.propc.ORDER_ATOMIC)||"",c=Blockly.propc.valueToCode(this,"LOC",Blockly.propc.ORDER_ATOMIC)||"0";if("find_substring"===this.type){this.disabled||(Blockly.propc.methods_.find_sub="int find_sub(char *__strS, char *__subS) { char* __pos = strstr(__strS, __subS); return (__pos - __strS + 1); }\n",Blockly.propc.method_declarations_.find_sub=
"int find_sub(char *, char *);\n");var d="// WARNING! THIS BLOCK IS DEPRECATED! \n\n";d=""!==a&&""!==b?d+("find_sub("+b+", "+a+")"):d+"0"}else this.disabled||(Blockly.propc.methods_.find_sub_zero="int str_loc(char *__strS, char *__subS, int __sLoc) { ",Blockly.propc.methods_.find_sub_zero+="__sLoc = constrainInt(__sLoc, 0, (int) strlen(__strS) - 1);\n",Blockly.propc.methods_.find_sub_zero+="char* __pos = strstr(__strS + __sLoc, __subS); return (__pos) ? (__pos - __strS) : -1; }\n",Blockly.propc.method_declarations_.find_sub_zero=
"int str_loc(char *, char *, int);\n"),d="",d=""!==a&&""!==b?d+("str_loc("+b+", "+a+", "+c+")"):d+"0";return[d,Blockly.propc.ORDER_NONE]};Blockly.propc.find_substring_zero=Blockly.propc.find_substring;
Blockly.Blocks.get_char_at_position={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GET_CHAR_AT_POSITION_TOOLTIP);"get_char_at_position"===this.type?(this.setColour("#FF8800"),this.setWarningText("WARNING: This block has been deprecated.\nReplace with a new block from the Operators > Numbers menu.\nOld blocks were (1) referenced, new blocks are (0) referenced.")):this.setColour(colorPalette.getColor("math"));this.appendValueInput("POSITION").setCheck("Number").appendField("get character at position");
this.appendDummyInput().appendField("of").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.setInputsInline(!0);this.setOutput(!0,"Number")}};Blockly.Blocks.get_char_at_position_zero=Blockly.Blocks.get_char_at_position;
Blockly.propc.get_char_at_position=function(){var a=Blockly.propc.valueToCode(this,"POSITION",Blockly.propc.ORDER_ATOMIC)||"1",b=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE);return["get_char_at_position"===this.type?b+"[("+a+">(int)strlen("+b+")?(int)strlen("+b+"):"+a+")-1]":b+"["+a+"]",Blockly.propc.ORDER_NONE]};Blockly.propc.get_char_at_position_zero=Blockly.propc.get_char_at_position;
Blockly.Blocks.set_char_at_position={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SET_CHAR_AT_POSITION_TOOLTIP);"set_char_at_position"===this.type?(this.setColour("#FF8800"),this.setWarningText("WARNING: This block has been deprecated.\nReplace with a new block from the Operators > Numbers menu.\nOld blocks were (1) referenced, new blocks are (0) referenced.")):this.setColour(colorPalette.getColor("math"));this.appendValueInput("POSITION").setCheck("Number").appendField("set character at position");
this.appendDummyInput().appendField("of string").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.appendValueInput("CHAR").setCheck("Number").appendField("to");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.Blocks.set_char_at_position_zero=Blockly.Blocks.set_char_at_position;
Blockly.propc.set_char_at_position=function(){var a=Blockly.propc.valueToCode(this,"POSITION",Blockly.propc.ORDER_ATOMIC)||"1",b=Blockly.propc.valueToCode(this,"CHAR",Blockly.propc.ORDER_ATOMIC)||"32";if(3!==b.length||"'"!==b[0]||"'"!==b[2])b!==b.replace(/[^0-9]+/g,"")?b="("+b+" & 0xFF)":0<parseInt(b)&&256>parseInt(b)||(b="("+b+" & 0xFF)");var c=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[c]="char *";return"set_char_at_position"===
this.type?c+"[("+a+">(int)strlen("+c+")?(int)strlen("+c+"):"+a+")-1] = "+b+"\n;":c+"["+a+"] = "+b+"\n;"};Blockly.propc.set_char_at_position_zero=Blockly.propc.set_char_at_position;
Blockly.Blocks.get_substring={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GET_SUBSTRING_TOOLTIP);"get_substring"===this.type?(this.setColour("#FF8800"),this.setWarningText("WARNING: This block has been deprecated.\nReplace with a new block from the Operators > Numbers menu.\nOld blocks were (1) referenced, new blocks are (0) referenced.")):this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("get part of string").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"FROM_STR");this.appendValueInput("START").setCheck("Number").appendField("from position");this.appendValueInput("END").setCheck("Number").appendField(new Blockly.FieldDropdown([["thru"," + 1"],["to",""]]),"PART").appendField("position");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"TO_STR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.Blocks.get_substring_zero=Blockly.Blocks.get_substring;
Blockly.propc.get_substring=function(){var a=Blockly.propc.valueToCode(this,"START",Blockly.propc.ORDER_ATOMIC)||"1",b=Blockly.propc.valueToCode(this,"END",Blockly.propc.ORDER_ATOMIC)||"2",c=this.getFieldValue("PART"),d=Blockly.propc.variableDB_.getName(this.getFieldValue("FROM_STR"),Blockly.Variables.NAME_TYPE),e=Blockly.propc.variableDB_.getName(this.getFieldValue("TO_STR"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[e]="char *";if(parseInt(a)>parseInt(b)){var f=a;a=b;b=f}f="";"get_substring"===
this.type?(Blockly.propc.definitions_.str_Buffer="char *__scBfr;",f=f+("__stIdx = 0;\nfor(__ssIdx = ("+a+"-1); __ssIdx <= ("+b+" <= (int)strlen("+d)+(")?"+b+":(int)strlen("+d+"))-1; __ssIdx++) {\n__scBfr[__stIdx] = "+d+"[__ssIdx]; __stIdx++; }\n")+"__scBfr[__stIdx] = 0;\n",f+="strcpy("+e+", __scBfr);\n"):(f+="substr ("+e+", "+d+", "+a+", "+b+c+");\n",this.disabled||(Blockly.propc.methods_.substr="void substr(char *__outStr, char *__inStr, int __startPos, int __toPos) {__startPos = (__startPos < 0 ? 0 : (__startPos > strlen(__inStr) ? strlen(__inStr) : __startPos));\n__toPos = (__toPos < 0 ? 0 : (__toPos > strlen(__inStr) ? strlen(__inStr) : __toPos));\nint __idx = ((__toPos < __startPos) ? __startPos : __toPos) - __startPos;\nmemcpy(__outStr, __inStr + __startPos, __idx);\n__outStr[__idx] = 0;}",
Blockly.propc.method_declarations_.substr="void substr (char *, char *, int, int);\n"));return f};Blockly.propc.get_substring_zero=Blockly.propc.get_substring;
Blockly.Blocks.string_compare={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_COMPARE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("STRA").setCheck("String").appendField("string");this.appendValueInput("STRB").setCheck("String").appendField(new Blockly.FieldDropdown([["is the same as","=="],["is not the same as","!="],["is alphabetically before","<"],["is alphabetically after",">"]]),"COMP");this.setInputsInline(!0);this.setOutput(!0,
"Number")}};Blockly.propc.string_compare=function(){var a=Blockly.propc.valueToCode(this,"STRA",Blockly.propc.ORDER_ATOMIC)||"",b=Blockly.propc.valueToCode(this,"STRB",Blockly.propc.ORDER_ATOMIC)||"",c=this.getFieldValue("COMP");return""!==a&&""!==b?["(strcmp("+a+", "+b+") "+c+" 0)",Blockly.propc.ORDER_NONE]:["(1"+c+"0)",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.string_to_number={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_TO_NUMBER_TOOLTIP);this.setColour("#FF8800");this.setWarningText("WARNING: This block has been deprecated.\nReplace with a scan string block from the Operators > Numbers menu.");this.appendValueInput("STRING").setCheck("String").appendField("string");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["in decimal","%d"],["in hexadecimal","%x"],["in binary","%b"]]),"TYPE").appendField("to integer store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VAR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.string_to_number=function(){var a=Blockly.propc.valueToCode(this,"STRING",Blockly.propc.ORDER_ATOMIC)||"0",b=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);return"sscan("+a+', "'+this.getFieldValue("TYPE")+'", &'+b+");\n"};
Blockly.Blocks.number_to_string={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_NUMBER_TO_STRING_TOOLTIP);this.setColour("#FF8800");this.setWarningText("WARNING: This block has been deprecated.\nReplace with a create string from block from the Operators > Numbers menu.");this.appendValueInput("NUMBER").setCheck("Number").appendField("integer");this.appendDummyInput().appendField("to string in").appendField(new Blockly.FieldDropdown([["decimal","%d"],["hexadecimal",
"%x"],["binary","%b"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.number_to_string=function(){var a=Blockly.propc.valueToCode(this,"NUMBER",Blockly.propc.ORDER_ATOMIC)||"0",b=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[b]="char *";return"sprint("+b+', "'+this.getFieldValue("TYPE")+'", '+a+");\n"};
Blockly.Blocks.string_split={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_SPLIT_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("split string");this.appendValueInput("FROM_STR").setCheck("String");this.appendValueInput("CHAR").setCheck("Number").appendField("on");this.appendDummyInput().appendField("store the").appendField(new Blockly.FieldDropdown([["first part in","STR"],["next part in","NULL"]],function(a){var b=
!0;"NULL"===a&&(b=!1);this.sourceBlock_.getInput("FROM_STR").setVisible(b)}),"PART").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"TO_STR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.string_split=function(){var a=Blockly.propc.valueToCode(this,"CHAR",Blockly.propc.ORDER_ATOMIC)||"32",b=Blockly.propc.valueToCode(this,"FROM_STR",Blockly.propc.ORDER_ATOMIC)||'"Hello World!"',c=this.getFieldValue("PART"),d=Blockly.propc.variableDB_.getName(this.getFieldValue("TO_STR"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[d]="char *";"NULL"===c&&(b=c);this.disabled||(Blockly.propc.methods_.str_split="void str_split(char *__fromStr, char *__toStr, char __delim) {\nchar __d[2] = {__delim, 0};\nchar *__token;\n\n__token = strtok(__fromStr, __d);\nstrcpy(__toStr, __token);\n}",
Blockly.propc.method_declarations_.str_split="void str_split(char *, char *, char);\n");return"str_split("+b+", "+d+", "+a+");\n"};
Blockly.Blocks.string_null={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_NULL_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("STR").appendField("string").setCheck("String");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["is empty","[0] == 0"],["is not empty","[0] != 0"]]),"OP");this.setOutput(!0,"Number")}};
Blockly.propc.string_null=function(){var a=Blockly.propc.valueToCode(this,"STR",Blockly.propc.ORDER_ATOMIC)||'"Hello World!"',b=this.getFieldValue("OP")||"";return[a+b,Blockly.propc.ORDER_NONE]};
Blockly.Blocks.string_trim={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_TRIM_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("FROM_STR").appendField("trim string");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"TO_STR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.string_trim=function(){var a=Blockly.propc.valueToCode(this,"FROM_STR",Blockly.propc.ORDER_ATOMIC)||'" Hello World! "',b=Blockly.propc.variableDB_.getName(this.getFieldValue("TO_STR"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[b]="char *";Blockly.propc.vartype_[a]="char *";this.disabled||(Blockly.propc.methods_.str_trim="void str_trim(char *out, char *str)\n{\nconst char *end;\n\nwhile(isspace((unsigned char)*str)) str++;\nif(*str == 0)\n{\n*out = 0;\nreturn;\n}\nend = str + (int)strlen(str) - 1;\nwhile(end > str && isspace((unsigned char)*end)) end--;\nend++;\n\nmemcpy(out, str, end - str);\nout[end - str] = 0;\n}",
Blockly.propc.method_declarations_.str_trim="void str_trim(char *, char *);\n");return"str_trim("+b+", "+a+");\n"};
Blockly.Blocks.number_binary={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_NUMBER_BINARY_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(new Blockly.FieldTextInput("0101",function(a){if(null===a)return null;a=a.replace(/O/ig,"0");return a=a.replace(/[^0-1]/g,"")}),"NUMBER").appendField("binary");this.setOutput(!0,"Number")}};Blockly.propc.number_binary=function(){return["0b"+this.getFieldValue("NUMBER"),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.number_hex={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_NUMBER_HEX_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(new Blockly.FieldTextInput("7F",function(a){if(null===a)return null;a=a.replace(/O/ig,"0");return a=a.replace(/[^0-9A-F]/ig,"").toUpperCase()}),"NUMBER").appendField("hexadecimal");this.setOutput(!0,"Number")}};
Blockly.propc.number_hex=function(){return["0x"+this.getFieldValue("NUMBER"),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.constrain_value={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSTRAIN_VALUE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("NUMBER").setCheck("Number").appendField("constrain");this.appendDummyInput().appendField("from").appendField(new Blockly.FieldNumber("0",null,null,1),"MIN").appendField("(min) to").appendField(new Blockly.FieldNumber("100",null,null,1),"MAX").appendField("(max)");this.setInputsInline(!0);this.setOutput(!0,
"Number")}};Blockly.propc.constrain_value=function(){var a=Blockly.propc.valueToCode(this,"NUMBER",Blockly.propc.ORDER_ATOMIC)||"0",b=window.parseInt(this.getFieldValue("MIN")),c=window.parseInt(this.getFieldValue("MAX"));return["constrainInt("+a+", "+b+", "+c+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.map_value={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MAP_VALUE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("NUMBER").setCheck("Number").appendField("map");this.appendDummyInput().appendField("with range").appendField(new Blockly.FieldNumber("0",null,null,1),"IMIN").appendField("(from A)").appendField(new Blockly.FieldNumber("50",null,null,1),"IMAX").appendField("(from B) to range").appendField(new Blockly.FieldNumber("0",
null,null,1),"FMIN").appendField("(to A)").appendField(new Blockly.FieldNumber("100",null,null,1),"FMAX").appendField("(to B)");this.setInputsInline(!0);this.setOutput(!0,"Number")}};
Blockly.propc.map_value=function(){var a=Blockly.propc.valueToCode(this,"NUMBER",Blockly.propc.ORDER_ATOMIC)||"0",b=window.parseInt(this.getFieldValue("IMIN")),c=window.parseInt(this.getFieldValue("IMAX")),d=window.parseInt(this.getFieldValue("FMIN")),e=window.parseInt(this.getFieldValue("FMAX"));return["mapInt("+a+","+b+","+c+","+d+","+e+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.math_advanced={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MATH_ADVANCED_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("ARG1").setCheck("Number");this.appendValueInput("ARG2").setCheck("Number").appendField(new Blockly.FieldDropdown([["\u2715 the cosine of","cos"],["\u2715 the sine of","sin"],["\u2715 the tangent of","tan"],["\u2715 the square root of","sqrt"],["\u2715 e raised to the power of","exp"],["\u2715 the logarithm (base 10) of",
"log10"],["\u2715 the natural logarithm of","log"]]),"OP");this.appendDummyInput("").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"STORE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.math_advanced=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("STORE"),Blockly.Variables.NAME_TYPE),b=Blockly.propc.valueToCode(this,"ARG1",Blockly.propc.ORDER_ATOMIC)||"1",c=Blockly.propc.valueToCode(this,"ARG2",Blockly.propc.ORDER_ATOMIC)||"1";b=b.replace(/[\(\-+ ](\d+)/g,"$1.0").replace(/\(int\)/g,"");c=c.replace(/[\(\-+ ](\d+)/g,"$1.0").replace(/\(int\)/g,"");var d=this.getFieldValue("OP"),e="";if("sin"===d||"cos"===d||"tan"===d)e=" * PI/180.0";return a+" = (int) (((float)"+
b+") * "+d+"(((float) "+c+")"+e+"));\n"};
Blockly.Blocks.math_inv_trig={helpUrl:Blockly.MSG_NUMBERS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MATH_INV_TRIG_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendValueInput("ARG1").setCheck("Number").appendField(new Blockly.FieldDropdown([["arcsine of (","asin"],["arccosine of (","acos"],["arctangent of (","atan2"]]),"OP");this.appendValueInput("ARG2").setCheck("Number").appendField("\u00f7");this.appendValueInput("ARG3").appendField(") \u00d7").setCheck("Number");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"STORE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.math_inv_trig=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("STORE"),Blockly.Variables.NAME_TYPE),b=Blockly.propc.valueToCode(this,"ARG1",Blockly.propc.ORDER_ATOMIC)||"1",c=Blockly.propc.valueToCode(this,"ARG2",Blockly.propc.ORDER_ATOMIC)||"1",d=Blockly.propc.valueToCode(this,"ARG3",Blockly.propc.ORDER_ATOMIC)||"1";b=b.replace(/([0-9])(\xA0| |\)|$)/g,"$1.0$2").replace(/\(int\)/g,"");c=c.replace(/([0-9])(\xA0| |\)|$)/g,"$1.0$2").replace(/\(int\)/g,"");d=d.replace(/([0-9])(\xA0| |\)|$)/g,
"$1.0$2").replace(/\(int\)/g,"");var e=this.getFieldValue("OP"),f="/";"atan2"===e&&(f=",");return a+" = (int) (180.0 * "+e+"(((float) "+b+")"+f+"((float) "+c+")) * "+d+" / PI);\n"};
Blockly.Blocks.constant_define={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSTANT_DEF_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput("MAIN").appendField("constant").appendField(new Blockly.FieldTextInput("MYVALUE",function(a){a=a.toUpperCase();a=a.replace(/ /g,"_").replace(/[^A-Z0-9_]/g,"");this.sourceBlock_.sendConstantVal(this.sourceBlock_.getFieldValue("CONSTANT_NAME"),a);return a}),"CONSTANT_NAME").appendField(" = ").appendField(new Blockly.FieldTextInput("0",
function(a){return a=0===a.indexOf("0x")?a.replace(/[^0-9xA-Fa-f-]/g,""):a.replace(/[^0-9b-]/g,"")}),"VALUE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.sendUpdate=!0},sendConstantVal:function(a,b){if(this.sendUpdate||"-1"===a&&"-1"===b){"-1"===a&&"-1"===b&&(b=a=null);for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)c[d]&&c[d].updateConstMenu&&c[d].updateConstMenu.call(c[d],a,b)}this.sendUpdate=!0},onchange:function(a){var b=this.getFieldValue("CONSTANT_NAME"),
c=Blockly.getMainWorkspace().getAllBlocks().toString();if(a.oldXml){var d=(new XMLSerializer).serializeToString(a.oldXml);a=d.indexOf("CONSTANT_NAME");if(-1<a&&-1<d.indexOf("constant_define")){var e=d.indexOf("</field",a);a=d.substring(a+15,e);this.sendConstantVal(a,null)}}d=null;a=c.indexOf("constant "+b+"  =");-1<c.indexOf("constant "+b+"  =",a+1)&&(d='WARNING! you can only define the constant "'+b+'" once!');this.setWarningText(d)}};
Blockly.propc.constant_define=function(){if(!this.disabled){var a=this.getFieldValue("CONSTANT_NAME"),b=this.getFieldValue("VALUE");Blockly.propc.definitions_["USER_"+a]="#define MY_"+a+" \t"+b}return""};
Blockly.Blocks.constant_value={helpUrl:Blockly.MSG_VALUES_HELPURL,init:function(){this.v_list=[];this.setTooltip(Blockly.MSG_CONSTANT_VALUE_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendDummyInput("VALUE_LIST").appendField(new Blockly.FieldDropdown([["MYVALUE","MYVALUE"]]),"VALUE");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,null);this.updateConstMenu()},updateConstMenu:function(a,b){var c=!0;this.v_list=[];for(var d=Blockly.getMainWorkspace().getAllBlocks(),
e=0;e<d.length;e++)"constant_define"===d[e].type&&(c=d[e].getFieldValue("CONSTANT_NAME"),c===a&&b&&(c=b),c&&this.v_list.push([c,c]),c=!1);c&&this.v_list.push(["MYVALUE","MYVALUE"]);d=this.getFieldValue("VALUE");this.getInput("VALUE_LIST")&&this.removeInput("VALUE_LIST");this.appendDummyInput("VALUE_LIST").appendField(new Blockly.FieldDropdown(uniq_fast(this.v_list)),"VALUE");d&&d===a&&b?this.setFieldValue(b,"VALUE"):d&&this.setFieldValue(d,"VALUE")},onchange:function(){var a=this.getFieldValue("VALUE");
-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("constant "+a)?this.setWarningText("WARNING: Your program must include a constant define block for this value!"):this.setWarningText(null)}};Blockly.propc.constant_value=function(){return["MY_"+this.getFieldValue("VALUE"),Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.custom_code_multiple={helpUrl:Blockly.MSG_SYSTEM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CUSTOM_CODE_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("system"));this.appendDummyInput().appendField(new Blockly.FieldCheckbox("FALSE",function(a){this.sourceBlock_.hideInputs(a)}),"EDIT").appendField("  User defined code","LABEL");this.buildFields();this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setFieldValue("FALSE","EDIT");
this.hideInputs("FALSE")},buildFields:function(){this.appendDummyInput("SET_LABEL").appendField("label").appendField(new Blockly.FieldTextInput("User defined code",function(a){this.sourceBlock_.setFieldValue("  "+a,"LABEL")}),"LABEL_SET");this.appendDummyInput("SET_COLOR").appendField("block color").appendField((new Blockly.FieldColour("#992673")).setColours("#26994D #268F99 #266999 #264399 #392699 #692699 #8F2699 #992673 #99264C".split(" ")).setColumns(3),"COLOR");this.appendDummyInput("INCL").appendField("includes code").appendField(new Blockly.FieldCode(""),
"INCLUDES");this.appendDummyInput("GLOB").appendField("globals code").appendField(new Blockly.FieldCode(""),"GLOBALS");this.appendDummyInput("SETS").appendField("setups code").appendField(new Blockly.FieldCode(""),"SETUPS");this.appendDummyInput("MAIN").appendField("main code").appendField(new Blockly.FieldCode(""),"MAIN");this.appendDummyInput("OUTS").appendField("main code is").appendField(new Blockly.FieldDropdown([["inline","INL"],["a numeric value","NUM"],["a string value","STR"]],function(a){this.sourceBlock_.setOutputType(a)}),
"TYPE");this.appendDummyInput("FUNC").appendField("functions code").appendField(new Blockly.FieldCode(""),"FUNCTIONS");this.appendDummyInput("ARGS").appendField(new Blockly.FieldDropdown([["no inputs","0"],["add 1 input","1"],["add 2 inputs","2"],["add 3 inputs","3"],["add 4 inputs","4"],["add 5 inputs","5"],["add 6 inputs","6"],["add 7 inputs","7"],["add 8 inputs","8"],["add 9 inputs","9"]],function(a){this.sourceBlock_.setupInputs(a)}),"ARG_COUNT")},mutationToDom:function(){for(var a=document.createElement("mutation"),
b=1;10>b;b++)if(this.getInput("ARG"+b.toString(10))){var c=this.getFieldValue("LABEL_ARG"+b.toString(10));this.setFieldValue(c,"EDIT_ARG"+b.toString(10));this.getField("LABEL_ARG"+b.toString(10)).setVisible(!1)}b=this.getFieldValue("ARG_COUNT")||"0";a.setAttribute("args",b);for(b=1;10>b;b++)this.getField("EDIT_ARG"+b.toString(10))&&a.setAttribute("a"+b.toString(10),this.getFieldValue("EDIT_ARG"+b.toString(10)));a.setAttribute("color",this.getFieldValue("COLOR"));a.setAttribute("type",this.getFieldValue("TYPE"));
return a},domToMutation:function(a){var b=a.getAttribute("args");this.setupInputs(b);for(b=1;10>b;b++){var c=a.getAttribute("a"+b.toString(10));this.getField("EDIT_ARG"+b.toString(10))&&c&&this.setFieldValue(c,"EDIT_ARG"+b.toString(10))}this.setFieldValue(a.getAttribute("color"),"COLOR");a=a.getAttribute("type");this.setOutputType(a);this.setFieldValue("FALSE","EDIT");this.hideInputs("FALSE")},setOutputType:function(a){"INL"===a?(this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)):
"NUM"===a?(this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"Number")):(this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0,"String"))},setupInputs:function(a){for(var b=1;b<=Number(a);b++)this.getInput("ARG"+b.toString(10))||this.appendValueInput("ARG"+b.toString(10)).setAlign(Blockly.ALIGN_RIGHT).appendField('input "@'+b.toString(10)+'" label',"EDIT_ARG"+b.toString(10)).appendField(new Blockly.FieldTextInput(""),"LABEL_ARG"+b.toString(10));for(b=9;b>
Number(a);b--)this.getInput("ARG"+b.toString(10))&&this.removeInput("ARG"+b.toString(10))},hideInputs:function(a){var b="SET_LABEL SET_COLOR INCL GLOB SETS MAIN OUTS FUNC ARGS".split(" ");if(!0===a||"true"===a||"TRUE"===a){this.setColour("#909090");for(a=0;a<b.length;a++)this.getInput(b[a]).setVisible(!0);for(b=1;10>b;b++)this.getInput("ARG"+b.toString(10))&&(this.getField("LABEL_ARG"+b.toString(10)).setVisible(!0),a=this.getFieldValue("EDIT_ARG"+b.toString(10)),a!=='input "@'+b.toString(10)+'" label'&&
this.setFieldValue(a,"LABEL_ARG"+b.toString(10)),this.setFieldValue('input "@'+b.toString(10)+'" label',"EDIT_ARG"+b.toString(10)))}else{this.setColour(this.getFieldValue("COLOR"));for(a=0;a<b.length;a++)this.getInput(b[a]).setVisible(!1);for(b=1;10>b;b++)this.getInput("ARG"+b.toString(10))&&(a=this.getFieldValue("LABEL_ARG"+b.toString(10)),this.setFieldValue(a,"EDIT_ARG"+b.toString(10)),this.getField("LABEL_ARG"+b.toString(10)).setVisible(!1))}var c=this;setTimeout(function(){c.render()},200)}};
Blockly.propc.custom_code_multiple=function(){for(var a=[],b=1;10>b;b++)a.push(Blockly.propc.valueToCode(this,"ARG"+b.toString(10),Blockly.propc.ORDER_ATOMIC)||"");b=this.getFieldValue("LABEL");b=encodeURI(b.replace(/ /g,"_")).replace(/[^\w]/g,"_");if(-1!=="0123456789".indexOf(b[0])||"_"===b[0]&&"_"===b[1])b="my_"+b;var c=(this.getFieldValue("INCLUDES")||"").replace(/@([0-9])/g,function(b,c){return a[parseInt(c)-1]}),d=(this.getFieldValue("GLOBALS")||"").replace(/@([0-9])/g,function(b,c){return a[parseInt(c)-
1]}),e=(this.getFieldValue("SETUPS")||"").replace(/@([0-9])/g,function(b,c){return a[parseInt(c)-1]}),f=(this.getFieldValue("MAIN")||"").replace(/@([0-9])/g,function(b,c){return a[parseInt(c)-1]}),g=(this.getFieldValue("FUNCTIONS")||"").replace(/@([0-9])/g,function(b,c){return a[parseInt(c)-1]}),h="";""!==c&&(Blockly.propc.definitions_["cCode"+b]=c+"\n");""!==d&&(Blockly.propc.global_vars_["cCode"+b]=d+"\n");""!==e&&(Blockly.propc.setups_["cCode"+b]=e+"\n");""!==f&&(h+=f);"INL"===this.getFieldValue("TYPE")&&
(h+="\n");""!==g&&(Blockly.propc.methods_["cCode"+b]=g+"\n");return"INL"===this.getFieldValue("TYPE")?h:[h,Blockly.propc.ORDER_ATOMIC]};Blockly.Blocks.propc_file={init:function(){this.setColour("#000000");this.appendDummyInput().appendField(new Blockly.FieldTextInput("single.c"),"FILENAME").appendField(new Blockly.FieldTextInput(""),"CODE");this.setPreviousStatement(!0,null);this.setNextStatement(!0,null)}};
Blockly.propc.propc_file=function(){var a=this.getFieldValue("FILENAME"),b=this.getFieldValue("CODE");-1===b.indexOf(" ")&&-1===b.indexOf("{")&&(b=atob(b));return"// RAW PROPC CODE\n//{{||}}\n"+a+"//{{||}}\n"+b};Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.console_print={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_PRINT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("MESSAGE").setCheck("String").appendField("Terminal print text");this.appendDummyInput().appendField("then a new line").appendField(new Blockly.FieldCheckbox("FALSE"),"ck_nl");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.console_print=function(){var a=Blockly.propc.valueToCode(this,"MESSAGE",Blockly.propc.ORDER_ATOMIC),b=this.getFieldValue("ck_nl");Blockly.propc.serial_terminal_=!0;a="print("+a.replace(/%/g,"%%")+");\n";"TRUE"===b&&(a+='print("\\r");\n');return a};
Blockly.Blocks.console_print_variables={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_PRINT_VARIABLES_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("VALUE").appendField("Terminal print number").setCheck("Number");this.appendDummyInput().appendField("as").appendField(new Blockly.FieldDropdown([["Decimal","DEC"],["Hexadecimal","HEX"],["Binary","BIN"],["ASCII Character","CHAR"]]),"FORMAT");this.appendDummyInput().appendField("then a new line").appendField(new Blockly.FieldCheckbox("FALSE"),
"ck_nl");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.console_print_variables=function(){var a=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ATOMIC),b=this.getFieldValue("FORMAT"),c=this.getFieldValue("ck_nl");Blockly.propc.serial_terminal_=!0;var d="print(";d="TRUE"!==c?"BIN"===b?d+'"%b"':"HEX"===b?d+'"%x"':"DEC"===b?d+'"%d"':d+'"%c"':"BIN"===b?d+'"%b\\r"':"HEX"===b?d+'"%x\\r"':"DEC"===b?d+'"%d\\r"':d+'"%c\\r"';"CHAR"!==b||3===a.length&&"'"===a[0]&&"'"===a[2]||(a!==a.replace(/[^0-9]+/g,"")?a="("+a+" & 0xFF)":0<parseInt(a)&&
256>parseInt(a)||(a="("+a+" & 0xFF)"));return d+(", "+a+");\n")};
Blockly.Blocks.console_print_multiple={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_PRINT_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal print");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");this.appendDummyInput("NEWLINE").appendField("then a new line").appendField(new Blockly.FieldCheckbox("FALSE"),
"ck_nl");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.specDigits_=!1;this.setWarningText(null)},mutationToDom:function(){var a=document.createElement("mutation"),b=[],c=[],d=[];a.setAttribute("options",JSON.stringify(this.optionList_));for(var e=0;e<this.optionList_.length;e++)b.push(this.getFieldValue("DIV"+
e)||"0"),c.push(this.getFieldValue("PLACE"+e)||""),d.push(this.getFieldValue("DIGIT"+e)||"");a.setAttribute("divisors",JSON.stringify(b));this.specDigits_&&(a.setAttribute("places",JSON.stringify(c)),a.setAttribute("digits",JSON.stringify(d)));return a},domToMutation:function(a){this.getInput("PRINT0")&&this.removeInput("PRINT0");this.getInput("PRINT1")&&this.removeInput("PRINT1");this.getInput("NEWLINE")&&this.removeInput("NEWLINE");var b=JSON.parse(a.getAttribute("options")),c=JSON.parse(a.getAttribute("divisors"));
this.optionList_=b;b=[];var d=[];this.specDigits_=!1;if(a.getAttribute("places")||a.getAttribute("digits"))this.specDigits_=!0,b=JSON.parse(a.getAttribute("places")),d=JSON.parse(a.getAttribute("digits"));for(a=0;a<this.optionList_.length;a++){var e="decimal number",f="Number";"str"===this.optionList_[a]?(e="text",f="String"):"char"===this.optionList_[a]?e="ASCII character":"hex"===this.optionList_[a]?e="hexadecimal number":"bin"===this.optionList_[a]&&(e="binary number");"float"!==this.optionList_[a]||
this.specDigits_?"float"===this.optionList_[a]&&this.specDigits_?(this.appendValueInput("PRINT"+a).setAlign(Blockly.ALIGN_RIGHT).setCheck(f).appendField("float point  divide by","TYPE"+a).appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"DIV"+a).appendField("digits").appendField(new Blockly.FieldTextInput("",function(a){return(a=a.replace(/O/ig,"0").replace(/[^0-9]*/g,""))||""}),"DIGIT"+a).appendField("places").appendField(new Blockly.FieldTextInput("",function(a){return(a=a.replace(/O/ig,
"0").replace(/[^0-9]*/g,""))||""}),"PLACE"+a),this.setFieldValue(c[a]||"100","DIV"+a),this.setFieldValue(b[a]||"","PLACE"+a),this.setFieldValue(d[a]||"","DIGIT"+a)):!this.specDigits_||"hex"!==this.optionList_[a]&&"dec"!==this.optionList_[a]&&"bin"!==this.optionList_[a]?this.appendValueInput("PRINT"+a).setAlign(Blockly.ALIGN_RIGHT).setCheck(f).appendField(e,"TYPE"+a):(this.appendValueInput("PRINT"+a).setAlign(Blockly.ALIGN_RIGHT).setCheck(f).appendField(e,"TYPE"+a).appendField("digits").appendField(new Blockly.FieldTextInput("",
function(a){return(a=a.replace(/O/ig,"0").replace(/[^0-9]*/g,""))||""}),"DIGIT"+a),this.setFieldValue(d[a]||"","DIGIT"+a)):(this.appendValueInput("PRINT"+a).setAlign(Blockly.ALIGN_RIGHT).setCheck(f).appendField("float point  divide by","TYPE"+a).appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"DIV"+a),this.setFieldValue(c[a],"DIV"+a))}"console_print_multiple"===this.type?this.appendDummyInput("NEWLINE").appendField("then a new line").appendField(new Blockly.FieldCheckbox("FALSE"),
"ck_nl"):"xbee_print_multiple"===this.type?this.appendDummyInput("NEWLINE").appendField("then a carriage return").appendField(new Blockly.FieldCheckbox("TRUE"),"ck_nl"):"string_sprint_multiple"===this.type&&this.appendDummyInput("NEWLINE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR")},decompose:function(a){var b=a.newBlock("console_print_container"),c="console_print_";"console_print_multiple"===this.type||"oled_print_multiple"===this.type||
"debug_lcd_print_multiple"===this.type||"parallel_lcd_print_multiple"===this.type||"heb_print_multiple"===this.type?(b.initSvg(),b.setFieldValue(this.specDigits_?"TRUE":"FALSE","PLACES")):"string_sprint_multiple"===this.type?(b=a.newBlock("string_sprint_container"),b.initSvg(),b.setFieldValue(this.specDigits_?"TRUE":"FALSE","PLACES"),c="string_scan_"):(b=a.newBlock("serial_print_container"),b.initSvg());for(var d=b.getInput("STACK").connection,e=0;e<this.optionList_.length;e++){var f=a.newBlock(c+
this.optionList_[e]);f.initSvg();d.connect(f.previousConnection);d=f.nextConnection}return b},compose:function(a){for(var b=0,c=[],d=[],e=[];this.getInput("PRINT"+b);)c[b]=this.getFieldValue("DIGIT"+b),d[b]=this.getFieldValue("PLACE"+b),e[b]=this.getFieldValue("DIV"+b),this.removeInput("PRINT"+b),b++;var f=this.getFieldValue("ck_nl");this.getInput("NEWLINE")&&this.removeInput("NEWLINE");b=0;this.optionList_.length=0;var g=a.getInputTargetBlock("STACK");this.specDigits_=!1;"TRUE"===a.getFieldValue("PLACES")&&
(this.specDigits_=!0);for(var h=a="";g;){h="Number";var m=g.type.split("_");"dec"===m[2]?(this.optionList_.push("dec"),a="decimal number"):"hex"===m[2]?(this.optionList_.push("hex"),a="hexadecimal number"):"bin"===m[2]?(this.optionList_.push("bin"),a="binary number"):"char"===m[2]?(this.optionList_.push("char"),a="ASCII character"):"str"===m[2]&&(this.optionList_.push("str"),h="String",a="text");"float"!==m[2]||this.specDigits_?"float"===m[2]&&this.specDigits_?(this.optionList_.push("float"),h=this.appendValueInput("PRINT"+
b).setAlign(Blockly.ALIGN_RIGHT).setCheck(h).appendField("float point  divide by","TYPE"+b).appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"DIV"+b).appendField("digits").appendField(new Blockly.FieldTextInput("",function(a){return(a=a.replace(/O/ig,"0").replace(/[^0-9]*/g,""))||""}),"DIGIT"+b).appendField("places").appendField(new Blockly.FieldTextInput("",function(a){return(a=a.replace(/O/ig,"0").replace(/[^0-9]*/g,""))||""}),"PLACE"+b),this.setFieldValue(e[b]||"100","DIV"+b),
this.setFieldValue(d[b]||"","PLACE"+b),this.setFieldValue(c[b]||"","DIGIT"+b)):!this.specDigits_||"hex"!==this.optionList_[b]&&"dec"!==this.optionList_[b]&&"bin"!==this.optionList_[b]?h=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(h).appendField(a,"TYPE"+b):(h=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(h).appendField(a,"TYPE"+b).appendField("digits").appendField(new Blockly.FieldTextInput("",function(a){return(a=a.replace(/O/ig,"0").replace(/[^0-9]*/g,
""))||""}),"DIGIT"+b),this.setFieldValue(c[b]||"","DIGIT"+b)):(this.optionList_.push("float"),h=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(h).appendField("float point  divide by","TYPE"+b).appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"DIV"+b),this.setFieldValue(e[b]||"100","DIV"+b));g.valueConnection_&&h.connection.connect(g.valueConnection_);b++;g=g.nextConnection&&g.nextConnection.targetBlock()}"console_print_multiple"===this.type?this.appendDummyInput("NEWLINE").appendField("then a new line").appendField(new Blockly.FieldCheckbox(f||
"FALSE"),"ck_nl"):"xbee_print_multiple"===this.type?this.appendDummyInput("NEWLINE").appendField("then a carriage return").appendField(new Blockly.FieldCheckbox(f||"TRUE"),"ck_nl"):"string_sprint_multiple"===this.type&&this.appendDummyInput("NEWLINE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR")},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("PRINT"+b);a.valueConnection_=c&&c.connection.targetConnection;
a=a.nextConnection&&a.nextConnection.targetBlock();b++}},onchange:function(){var a=null;this.workspace&&1>this.optionList_.length&&(a="Terminal print multiple must have at least one term.");this.setWarningText(a)}};
Blockly.Blocks.console_print_container={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("send");this.appendStatementInput("STACK");this.appendDummyInput().appendField("specify digits").appendField(new Blockly.FieldCheckbox("FALSE"),"PLACES");this.contextMenu=!1}};
Blockly.Blocks.serial_print_container={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("send");this.appendStatementInput("STACK");this.contextMenu=!1}};
Blockly.Blocks.string_sprint_container={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("string");this.appendStatementInput("STACK");this.appendDummyInput().appendField("specify digits").appendField(new Blockly.FieldCheckbox("FALSE"),"PLACES");this.contextMenu=!1}};
Blockly.Blocks.console_print_dec={init:function(){var a="protocols";"string_scan_dec"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("decimal number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.console_print_hex={init:function(){var a="protocols";"string_scan_hex"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("hexadecimal number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.console_print_bin={init:function(){var a="protocols";"string_scan_bin"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("binary number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.console_print_str={init:function(){var a="protocols";"string_scan_str"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("text");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.console_print_char={init:function(){var a="protocols";"string_scan_char"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("ASCII character");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.Blocks.console_print_float={init:function(){var a="protocols";"string_scan_float"===this.type&&(a="math");this.setColour(colorPalette.getColor(a));this.appendDummyInput().appendField("floating point number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.propc.console_print_multiple=function(){var a="",b=null,c="";switch(this.type){case "console_print_multiple":a+='print("';Blockly.propc.serial_terminal_=!0;break;case "serial_print_multiple":b="Serial initialize";c="// ERROR: Serial is not initialized!\n";var d="";0<this.ser_pins.length&&(d=this.ser_pins[0][0].replace(",","_"));this.getInput("SERPIN")&&(d=this.getFieldValue("SER_PIN").replace(",","_"));a+="dprint(fdser"+d+', "';break;case "debug_lcd_print_multiple":b="Serial LCD initialize";
c="// ERROR: LCD is not initialized!\n";a+='dprint(serial_lcd, "';break;case "parallel_lcd_print_multiple":b="Parallel LCD initialize";c="// ERROR: LCD is not initialized!\n";a+='dprint(parallel_lcd, "';break;case "oled_print_multiple":b="OLED initialize";c="// ERROR: OLED is not initialized!\n";a+='oledc_print("';break;case "xbee_print_multiple":b="XBee initialize";c="// ERROR: XBEE is not initialized!\n";a+='dprint(xbee, "';break;case "heb_print_multiple":a+='oledprint("';break;case "string_sprint_multiple":d=
Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[d]="char *";a+="sprint("+d+', "';break;case "wx_print_multiple":b="WX initialize";c="// ERROR: WX is not initialized!\n";projectData&&"heb-wx"===projectData.board&&(b=null);d=Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),Blockly.Variables.NAME_TYPE);var e=this.getFieldValue("CONNECTION");a+="wifi_print("+e+", "+d+', "'}e=d="";for(var f=0;this.getInput("PRINT"+f);){var g=
this.getFieldValue("DIGIT"+f)||"";this.getFieldValue("PLACE"+f)&&""!==this.getFieldValue("PLACE"+f)&&(g+="."+this.getFieldValue("PLACE"+f));""!==g&&(g="0"+g);this.getFieldValue("TYPE"+f).includes("hexadecimal number")?(a+="%"+g+"x",e="0x0"):this.getFieldValue("TYPE"+f).includes("decimal number")?(a+="%"+g+"d",e="0"):this.getFieldValue("TYPE"+f).includes("binary number")?(a+="%"+g+"b",e="0b0"):this.getFieldValue("TYPE"+f).includes("text")?(a+="%s",e='" "'):this.getFieldValue("TYPE"+f).includes("ASCII character")?
(a+="%c",e="32"):this.getFieldValue("TYPE"+f).includes("float point  divide by")&&(a+="%"+g+"f",e="0");d=this.getFieldValue("TYPE"+f).includes("float point  divide by")?d+(", ((float) "+(Blockly.propc.valueToCode(this,"PRINT"+f,Blockly.propc.ORDER_NONE)||e)+") / "+this.getFieldValue("DIV"+f)+".0"):d+(", "+(Blockly.propc.valueToCode(this,"PRINT"+f,Blockly.propc.ORDER_NONE).replace("/%g","%%")||e));f++}"TRUE"===this.getFieldValue("ck_nl")&&(a+="\\r");a+='"'+d+");\n";d=Blockly.getMainWorkspace().getAllBlocks().toString();
b&&-1===d.indexOf(b)&&(a=c);"wx_print_multiple"===this.type&&-1<d.indexOf("Simple WX")&&(a="// ERROR: You cannot use Advanced WX blocks with Simple WX blocks!");"heb-wx"===projectData.board&&"wx_print_multiple"===this.type&&Blockly.propc.wx_init_adv();return a};
Blockly.Blocks.console_scan_text={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_SCAN_TEXT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal receive text store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.console_scan_text=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[a]="char *";Blockly.propc.serial_terminal_=!0;return""!==a?"getStr("+a+", 128);\n":""};
Blockly.Blocks.console_scan_number={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_SCAN_NUMBER_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal receive").appendField(new Blockly.FieldDropdown([["number (32-bit integer)","NUMBER"],["byte (ASCII character)","BYTE"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.console_scan_number=function(){var a=this.getFieldValue("TYPE"),b=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE);Blockly.propc.serial_terminal_=!0;var c="";return""!==b?"NUMBER"===a?c+('scan("%d", &'+b+");\n"):c+(b+" = getChar();\n"):""};
Blockly.Blocks.console_newline={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_NEWLINE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal new line");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.console_newline=function(){Blockly.propc.serial_terminal_=!0;return"term_cmd(CR);\n"};
Blockly.Blocks.console_close={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_CLOSE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal close");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.console_close=function(){this.disabled||(Blockly.propc.setups_.terminal_close="simpleterm_close();\n");return""};
Blockly.Blocks.console_clear={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_CLEAR_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal clear screen");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.console_clear=function(){Blockly.propc.serial_terminal_=!0;return"term_cmd(CLS);\n"};
Blockly.Blocks.console_move_to_position={helpUrl:Blockly.MSG_TERMINAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONSOLE_MOVE_TO_POSITION_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Terminal set cursor to row");this.appendValueInput("ROW").setCheck("Number");this.appendDummyInput().appendField("column");this.appendValueInput("COLUMN").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null)}};Blockly.propc.console_move_to_position=function(){Blockly.propc.serial_terminal_=!0;var a=Blockly.propc.valueToCode(this,"ROW",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"COLUMN",Blockly.propc.ORDER_NONE);0>Number(a)?a=0:255<Number(a)&&(a=255);0>Number(b)?b=0:255<Number(b)&&(b=255);return"term_cmd(CRSRXY, "+b+", "+a+");\n"};
Blockly.Blocks.serial_open={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_OPEN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PIN_SETUP").appendField("Serial initialize RX").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["31","31"],["None","None"]])),"RXPIN").appendField("TX").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["30","30"],["None","None"]])),"TXPIN");this.appendDummyInput("BAUD_RATE").appendField("baud").appendField(new Blockly.FieldDropdown([["2400",
"2400"],["4800","4800"],["9600","9600"],["19200","19200"],["38400","38400"],["57600","57600"],["115200","115200"],["other","other"]],function(a){"other"===a&&(this.otherBaud=!0);this.sourceBlock_.setToOther(a)}),"BAUD");this.appendDummyInput("MODE").appendField("mode").appendField(new Blockly.FieldDropdown([["standard","standard"],["other","other"]],function(){this.sourceBlock_.setToMode()}),"TYPE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.otherMode=
this.otherBaud=!1;this.serialPin=this.getFieldValue("RXPIN")+","+this.getFieldValue("TXPIN");this.onchange({oldXml:!0})},onchange:function(a){this.serialPin=this.getFieldValue("RXPIN")+","+this.getFieldValue("TXPIN");var b=Blockly.getMainWorkspace().getAllBlocks();if(a&&(a.blockId===this.id||a.oldXml))for(var c=0;c<b.length;c++){var d=b[c].serPins;d&&("RXPIN"===a.name?d.call(b[c],a.oldValue+","+this.getFieldValue("TXPIN"),a.newValue+","+this.getFieldValue("TXPIN")):"TXPIN"===a.name?d.call(b[c],this.getFieldValue("RXPIN")+
","+a.oldValue,this.getFieldValue("RXPIN")+","+a.newValue):a.oldXml&&d.call(b[c]))}"31"!==this.getFieldValue("RXPIN")&&"30"!==this.getFieldValue("TXPIN")||-1!==b.toString().indexOf("Terminal close")?this.setWarningText(null):this.setWarningText("DO NOT use pins 30 or 31 without using the Terminal close block!")},setToOther:function(a){if("other"===a||!0===this.otherBaud)a&&"other"!==a||(a="1200"),this.otherBaud=!0,this.getInput("BAUD_RATE")&&this.removeInput("BAUD_RATE"),this.appendDummyInput("BAUD_RATE").appendField("baud").appendField(new Blockly.FieldNumber(a,
null,null,1),"BAUD"),this.moveInputBefore("BAUD_RATE","MODE")},setToMode:function(a){a||(a=["FALSE","FALSE","FALSE","FALSE"]);this.getInput("MODE")&&this.removeInput("MODE");this.appendDummyInput("MODE").appendField("invert RX").appendField(new Blockly.FieldCheckbox(a[0]),"ck_bit0").appendField("invert TX").appendField(new Blockly.FieldCheckbox(a[1]),"ck_bit1").appendField("open-drain").appendField(new Blockly.FieldCheckbox(a[2]),"ck_bit2").appendField("remove TX echo").appendField(new Blockly.FieldCheckbox(a[3]),
"ck_bit3");this.otherMode=!0},mutationToDom:function(){if(this.otherBaud||this.otherMode){var a=document.createElement("mutation");a.setAttribute("baud",this.getFieldValue("BAUD")||"1200");for(var b=0;4>b;b++)a.setAttribute("ck_bit"+b.toString(10),this.getFieldValue("ck_bit"+b.toString(10))||"FALSE");return a}},domToMutation:function(a){var b=a.getAttribute("baud");void 0!==b&&(this.otherBaud=!0,this.setToOther(b));b=["FALSE","FALSE","FALSE","FALSE"];for(var c=!1,d=0;4>d;d++)b[d]=a.getAttribute("ck_bit"+
d.toString(10)),"TRUE"===b[d]&&(c=!0);c&&this.setToMode(b)}};
Blockly.propc.serial_open=function(){for(var a=this.getFieldValue("RXPIN").replace("None","-1"),b=this.getFieldValue("TXPIN").replace("None","-1"),c=this.getFieldValue("RXPIN").replace("None","N"),d=this.getFieldValue("TXPIN").replace("None","N"),e="0b",f=3;-1<f;f--)e+="TRUE"===(this.getFieldValue("ck_bit"+f.toString(10))||"FALSE")?"1":"0";f=this.getFieldValue("BAUD");this.disabled||(Blockly.propc.definitions_["include fdserial"]='#include "fdserial.h"',Blockly.propc.definitions_["var fdserial"+c+
"_"+d]="fdserial *fdser"+c+"_"+d+";",Blockly.propc.setups_["setup_fdserial"+c+"_"+d]="fdser"+c+"_"+d+" = fdserial_open("+a+", "+b+", "+e+", "+f+");");return""};
Blockly.Blocks.serial_send_text={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_SEND_TEXT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial transmit").appendField(new Blockly.FieldDropdown([["text","TEXT"],["decimal number","INT"],["hexadecimal number","HEX"],["binary number","BIN"],["ASCII character","BYTE"]]),"TYPE");this.appendValueInput("VALUE");this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null);this.setWarningText(null);this.ser_pins=[];this.serPins()},mutationToDom:function(){var a=document.createElement("mutation");this.getInput("SERPIN")&&a.setAttribute("serpin",this.getFieldValue("SER_PIN"));a.setAttribute("pinmenu",JSON.stringify(this.ser_pins));a.setAttribute("type",this.getFieldValue("TYPE"));return a},domToMutation:function(a){var b=a.getAttribute("serpin");this.ser_pins=JSON.parse(a.getAttribute("pinmenu"))||[["0,0","0,0"]];this.getInput("SERPIN")&&
this.removeInput("SERPIN");b&&(this.appendDummyInput("SERPIN").setAlign(Blockly.ALIGN_RIGHT).appendField("RXTX").appendField(new Blockly.FieldDropdown(this.ser_pins),"SER_PIN"),this.setFieldValue(b,"SER_PIN"))},serPins:function(a,b){var c="-1";0<this.ser_pins.length&&(c=this.ser_pins[0][0]);this.ser_pins.length=0;this.getInput("SERPIN")&&(c=this.getFieldValue("SER_PIN"));this.updateSerPin();this.getInput("SERPIN")&&this.removeInput("SERPIN");1<this.ser_pins.length&&(this.appendDummyInput("SERPIN").setAlign(Blockly.ALIGN_RIGHT).appendField("RXTX").appendField(new Blockly.FieldDropdown(this.ser_pins),
"SER_PIN"),this.getInput("PRINT0")?this.moveInputBefore("SERPIN","PRINT0"):this.getInput("OPTION0")&&this.moveInputBefore("SERPIN","OPTION0"),c===a||null===a?this.setFieldValue(b,"SER_PIN"):this.getInput("SERPIN")&&"-1"!==c&&this.setFieldValue(c,"SER_PIN"))},updateSerPin:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=this.ser_pins.length=0;b<a.length;b++)if("serial_open"===a[b].type){var c=a[b].serialPin;c&&this.ser_pins.push([c,c])}this.ser_pins=uniq_fast(this.ser_pins)},onchange:function(){-1===
Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")?this.setWarningText("WARNING: You must use a Serial\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.serial_send_text=function(){var a="";0<this.ser_pins.length&&(a=this.ser_pins[0][0].replace(",","_").replace(/None/g,"N"));this.getInput("SERPIN")&&(a=this.getFieldValue("SER_PIN").replace(",","_").replace(/None/g,"N"));if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize"))return"// ERROR: Serial is not initialized!\n";var b=this.getFieldValue("TYPE"),c=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ATOMIC)||"0";if("BYTE"===b){if(3!==c.length||
"'"!==c[0]||"'"!==c[2])c!==c.replace(/[^0-9]+/g,"")?c="("+c+" & 0xFF)":0<parseInt(c)&&256>parseInt(c)||(c="("+c+" & 0xFF)");return"fdserial_txChar(fdser"+a+", "+c+");\n"}if("INT"===b)return"dprint(fdser"+a+', "%d\\r", '+c+");\n";if("HEX"===b)return"dprint(fdser"+a+', "%x\\r", '+c+");\n";if("BIN"===b)return"dprint(fdser"+a+', "%b\\r", '+c+");\n";b="dprint(fdser"+a+', "%s\\r", '+c.replace(/%/g,"%%")+");\n";return b+("while(!fdserial_txEmpty(fdser"+a+"));\n")+"pause(5);\n"};
Blockly.Blocks.serial_receive_text={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_RECEIVE_TEXT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial receive").appendField(new Blockly.FieldDropdown([["text","TEXT"],["decimal number","INT"],["hexadecimal number","HEX"],["binary number","BIN"],["ASCII character","BYTE"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VALUE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null);this.ser_pins=[];this.serPins()},mutationToDom:Blockly.Blocks.serial_send_text.mutationToDom,domToMutation:Blockly.Blocks.serial_send_text.domToMutation,serPins:Blockly.Blocks.serial_send_text.serPins,updateSerPin:Blockly.Blocks.serial_send_text.updateSerPin,onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")?this.setWarningText("WARNING: You must use a Serial\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};
Blockly.propc.serial_receive_text=function(){var a="";0<this.ser_pins.length&&(a=this.ser_pins[0][0].replace(",","_").replace(/None/g,"N"));this.getInput("SERPIN")&&(a=this.getFieldValue("SER_PIN").replace(",","_").replace(/None/g,"N"));if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize"))return"// ERROR: Serial is not initialized!\n";var b=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE),c=this.getFieldValue("TYPE");if("BYTE"===
c)return b+" = fdserial_rxChar(fdser"+a+");\n";if("INT"===c)return"dscan(fdser"+a+', "%d", &'+b+");\n";if("BIN"===c)return"dscan(fdser"+a+', "%b", &'+b+");\n";if("HEX"===c)return"dscan(fdser"+a+', "%x", &'+b+");\n";Blockly.propc.vartype_[b]="char *";return"dscan(fdser"+a+', "%s", '+b+");\n"};
Blockly.Blocks.serial_status={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_STATUS_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial").appendField(new Blockly.FieldDropdown([["characters are recieved","rxReady"],["recieved character count","rxCount"],["peek at first recieved character","rxPeek"],["transmit buffer empty","txEmpty"]]),"TYPE");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setWarningText(null);
this.ser_pins=[];this.serPins()},mutationToDom:Blockly.Blocks.serial_send_text.mutationToDom,domToMutation:Blockly.Blocks.serial_send_text.domToMutation,serPins:Blockly.Blocks.serial_send_text.serPins,updateSerPin:Blockly.Blocks.serial_send_text.updateSerPin,onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")?this.setWarningText("WARNING: You must use a Serial\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.serial_status=function(){var a="";0<this.ser_pins.length&&(a=this.ser_pins[0][0].replace(",","_").replace(/None/g,"N"));this.getInput("SERPIN")&&(a=this.getFieldValue("SER_PIN").replace(",","_").replace(/None/g,"N"));return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")?"// ERROR: Serial is not initialized!\n":["fdserial_"+this.getFieldValue("TYPE")+"(fdser"+a+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.serial_print_multiple={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_PRINT_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial transmit");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");this.setPreviousStatement(!0,"Block");
this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.setWarningText(null);this.ser_pins=[];this.serPins()},mutationToDom:function(){var a=document.createElement("mutation"),b=[];a.setAttribute("pinmenu",JSON.stringify(this.ser_pins));a.setAttribute("options",JSON.stringify(this.optionList_));for(var c=0;c<
this.optionList_.length;c++)b.push(this.getFieldValue("DIV"+c)||"0");a.setAttribute("divisors",JSON.stringify(b));this.getInput("SERPIN")&&a.setAttribute("serpin",this.getFieldValue("SER_PIN"));return a},domToMutation:function(a){this.getInput("PRINT0")&&this.removeInput("PRINT0");this.getInput("PRINT1")&&this.removeInput("PRINT1");this.getInput("NEWLINE")&&this.removeInput("NEWLINE");var b=JSON.parse(a.getAttribute("options")),c=JSON.parse(a.getAttribute("divisors"));this.optionList_=b;for(b=0;b<
this.optionList_.length;b++){var d="decimal number",e="Number";"str"===this.optionList_[b]?(d="text",e="String"):"char"===this.optionList_[b]?d="ASCII character":"hex"===this.optionList_[b]?d="hexadecimal number":"bin"===this.optionList_[b]&&(d="binary number");"float"===this.optionList_[b]?(this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(e).appendField("float point  divide by","TYPE"+b).appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"DIV"+b),this.setFieldValue(c[b],
"DIV"+b)):this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(e).appendField(d,"TYPE"+b)}this.ser_pins=JSON.parse(a.getAttribute("pinmenu"))||[["0,0","0,0"]];a=a.getAttribute("serpin");this.getInput("SERPIN")&&this.removeInput("SERPIN");a&&(this.appendDummyInput("SERPIN").setAlign(Blockly.ALIGN_RIGHT).appendField("RXTX").appendField(new Blockly.FieldDropdown(this.ser_pins),"SER_PIN"),this.setFieldValue(a,"SER_PIN"),this.getInput("PRINT0")&&this.moveInputBefore("SERPIN","PRINT0"))},
decompose:Blockly.Blocks.console_print_multiple.decompose,compose:function(a){for(var b=0;this.getInput("PRINT"+b);)this.removeInput("PRINT"+b),b++;b=0;this.optionList_.length=0;a=a.getInputTargetBlock("STACK");for(var c="",d;a;)d="Number","console_print_dec"===a.type?(this.optionList_.push("dec"),c="decimal number"):"console_print_hex"===a.type?(this.optionList_.push("hex"),c="hexadecimal number"):"console_print_bin"===a.type?(this.optionList_.push("bin"),c="binary number"):"console_print_char"===
a.type?(this.optionList_.push("char"),c="ASCII character"):"console_print_str"===a.type&&(this.optionList_.push("str"),d="String",c="text"),"console_print_float"===a.type?(this.optionList_.push("float"),d=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(d).appendField("float point  divide by","TYPE"+b).appendField(new Blockly.FieldNumber("100",null,null,1),"DIV"+b)):d=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck(d).appendField(c,"TYPE"+b),a.valueConnection_&&
d.connection.connect(a.valueConnection_),b++,a=a.nextConnection&&a.nextConnection.targetBlock()},serPins:Blockly.Blocks.serial_send_text.serPins,updateSerPin:Blockly.Blocks.serial_send_text.updateSerPin,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections,onchange:function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize"))this.setWarningText("WARNING: You must use a Serial\ninitialize block at the beginning of your program!");else{var a=null;
this.workspace&&1>this.optionList_.length&&(a="Serial transmit multiple must have at least one term.");this.setWarningText(a)}}};Blockly.propc.serial_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.serial_scan_multiple={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_SCAN_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial receive");this.optionList_=["dec","char"];this.updateShape_();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["console_print_dec","console_print_hex","console_print_bin","console_print_float","console_print_char"]));
this.setWarningText(null);this.ser_pins=[];this.serPins();this.scanAfter=""},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("pinmenu",JSON.stringify(this.ser_pins));a.setAttribute("options",JSON.stringify(this.optionList_));a.setAttribute("scanafter",this.scanAfter);this.getInput("SERPIN")&&a.setAttribute("serpin",this.getFieldValue("SER_PIN"));return a},domToMutation:function(a){this.scanAfter=a.getAttribute("scanafter")||"";this.optionList_=JSON.parse(a.getAttribute("options"));
this.updateShape_();this.ser_pins=JSON.parse(a.getAttribute("pinmenu"))||[["0,0","0,0"]];a=a.getAttribute("serpin");this.getInput("SERPIN")&&this.removeInput("SERPIN");a&&(this.appendDummyInput("SERPIN").setAlign(Blockly.ALIGN_RIGHT).appendField("RXTX").appendField(new Blockly.FieldDropdown(this.ser_pins),"SER_PIN"),this.setFieldValue(a,"SER_PIN"),this.getInput("OPTION0")&&this.moveInputBefore("SERPIN","OPTION0"))},decompose:function(a){var b="serial_scan_container",c="console_print_";if("string_scan_multiple"===
this.type||"string_sprint_multiple"===this.type)b="string_scan_container",c="string_scan_";b=a.newBlock(b);b.initSvg();for(var d=b.getInput("STACK").connection,e=0;e<this.optionList_.length;e++){var f=a.newBlock(c+this.optionList_[e]);f.initSvg();d.connect(f.previousConnection);d=f.nextConnection}"string_scan_multiple"===this.type&&this.scanAfter&&-1<this.scanAfter.indexOf("After")&&b.setFieldValue(this.scanAfter,"SCAN_START");return b},compose:function(a){this.scanAfter=a.getFieldValue("SCAN_START");
var b=a.getInputTargetBlock("STACK");this.optionList_.length=0;for(a=[];b;){var c=b.type.split("_");this.optionList_.push(c[c.length-1]);a.push([b.userData_,b.cpuData_]);b=b.nextConnection&&b.nextConnection.targetBlock()}this.updateShape_();for(b=0;b<this.optionList_.length;b++)a[b][1]&&this.setFieldValue(a[b][1],"CPU"+b),a[b][0]&&this.setFieldValue(a[b][0],"MULT"+b)},serPins:Blockly.Blocks.serial_send_text.serPins,updateSerPin:Blockly.Blocks.serial_send_text.updateSerPin,saveConnections:function(a){a=
a.getInputTargetBlock("STACK");for(var b=0;a;)a.cpuData_=this.getFieldValue("CPU"+b)||Blockly.LANG_VARIABLES_GET_ITEM,a.userData_=this.getFieldValue("MULT"+b)||null,a=a.nextConnection&&a.nextConnection.targetBlock(),b++},updateShape_:function(){for(var a=0;this.getInput("OPTION"+a);)this.removeInput("OPTION"+a),a++;this.getInput("SCAN_AFTER")&&this.removeInput("SCAN_AFTER");for(a=0;a<this.optionList_.length;a++){var b=this.optionList_[a],c="store ASCII character in";"dec"===b?c="store decimal number in":
"hex"===b?c="store hexadecimal number in":"bin"===b&&(c="store binary number in");"float"===b?(this.appendDummyInput("OPTION"+a).appendField("store float point \u2715").appendField(new Blockly.FieldDropdown(Blockly.DROPDOWN_MULTIPLIER),"MULT"+a).appendField("in","TYPE"+a).appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"CPU"+a),this.setFieldValue("100","MULT"+a)):this.appendDummyInput("OPTION"+a).appendField(c,"TYPE"+a).appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"CPU"+a)}"AfterStr"===this.scanAfter?this.appendValueInput("SCAN_AFTER").appendField("start after text"):"AfterPos"===this.scanAfter&&this.appendValueInput("SCAN_AFTER").appendField("start from position")},onchange:function(){var a=null;-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")&&(a="WARNING: You must use a Serial\ninitialize block at the beginning of your program!");this.workspace&&1>this.optionList_.length&&(a="Serial recieve must have at least one search term.");
this.setWarningText(a)}};Blockly.Blocks.serial_scan_container={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("receive");this.appendStatementInput("STACK");this.contextMenu=!1}};
Blockly.propc.serial_scan_multiple=function(){var a="";0<this.ser_pins.length&&(a=this.ser_pins[0][0].replace(",","_").replace(/None/g,"N"));this.getInput("SERPIN")&&(a=this.getFieldValue("SER_PIN").replace(",","_").replace(/None/g,"N"));if(-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial initialize")){a="dscan(fdser"+a+', "';for(var b="",c="",d=0;this.getFieldValue("CPU"+d);)this.getFieldValue("TYPE"+d).includes("store decimal number")?a+="%d":this.getFieldValue("TYPE"+d).includes("store ASCII character")?
a+="%c":this.getFieldValue("TYPE"+d).includes("store hexadecimal number")?a+="%x":this.getFieldValue("TYPE"+d).includes("store binary number")?a+="%b":"in"===this.getFieldValue("TYPE"+d)&&(a+="%f"),"in"===this.getFieldValue("TYPE"+d)?(b+=", &__fpBuf"+d,c+=Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),c+=" = (int) (__fpBuf"+d+" * "+this.getFieldValue("MULT"+d)+");\n",this.disabled||(Blockly.propc.global_vars_["floatPointScanBuffer"+d]="float __fpBuf"+d+
";")):b+=", &"+Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),d++;return a+('"'+b+");\n"+c)}return"// ERROR: Serial is not initialized!\n"};
Blockly.Blocks.serial_tx={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_TX_TOOLTIP);this.setColour("#FF8800");this.appendDummyInput().appendField("Serial transmit").appendField(new Blockly.FieldDropdown([["number (32-bit integer)","INT"],["byte (ASCII character)","BYTE"]]),"TYPE");this.appendValueInput("VALUE").setCheck(null);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText("WARNING: This block has been deprecated\nand may not work correctly!\nPlease use one of the blocks\navailable in the menu.")}};
Blockly.propc.serial_tx=function(){return"// ERROR: This block has been depricated, please use a different serial transmit block!\n"};
Blockly.Blocks.serial_rx={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERIAL_RX_TOOLTIP);this.setColour("#FF8800");this.appendDummyInput().appendField("Serial receive").appendField(new Blockly.FieldDropdown([["number (32-bit integer)","INT"],["byte (ASCII character)","BYTE"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null);this.setWarningText("WARNING: This block has been deprecated\nand may not work correctly!\nPlease use one of the blocks\navailable in the menu.")}};Blockly.propc.serial_rx=function(){return"// ERROR: This block has been deprecated, please use a different serial receive block!\n"};
Blockly.Blocks.shift_in={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){for(var a=[],b=2;33>b;b++)a.push([b.toString(10),b.toString(10)]);this.setTooltip(Blockly.MSG_SHIFT_IN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("shift in").appendField(new Blockly.FieldDropdown(a),"BITS").appendField("bits").appendField(new Blockly.FieldDropdown([["MSB first","MSB"],["LSB first","LSB"]]),"MODE").appendField(new Blockly.FieldDropdown([["before clock",
"PRE"],["after clock","POST"]]),"ORDER");this.appendDummyInput("PINS");this.setInputsInline(!0);this.setOutput(!0,"Number");this.updateConstMenu()},updateConstMenu:function(a,b){this.v_list=[];for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)if("constant_define"===c[d].type){var e=c[d].getFieldValue("CONSTANT_NAME");e===a&&b&&(e=b);e&&this.v_list.push([e,e])}this.v_list=uniq_fast(this.v_list);this.setPinMenus(a,b)},setPinMenus:function(a,b){var c=this.getFieldValue("DATA"),d=
this.getFieldValue("CLK");this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("DATA").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DATA").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"CLK");c&&c===a&&b?this.setFieldValue(b,"DATA"):c&&this.setFieldValue(c,"DATA");d&&d===a&&b?this.setFieldValue(b,"CLK"):d&&this.setFieldValue(d,"CLK")}};
Blockly.propc.shift_in=function(){var a=this.getFieldValue("DATA"),b=this.getFieldValue("CLK"),c=this.getFieldValue("BITS"),d=this.getFieldValue("MODE"),e=this.getFieldValue("ORDER");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);-1===profile["default"].digital.toString().indexOf(b+","+b)&&(b="MY_"+b);return["shift_in("+a+", "+b+", "+d+e+", "+c+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.shift_out={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){for(var a=[],b=2;33>b;b++)a.push([b.toString(10),b.toString(10)]);this.setTooltip(Blockly.MSG_SHIFT_OUT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("VALUE").setCheck("Number").appendField("shift out the").appendField(new Blockly.FieldDropdown(a),"BITS").appendField("lowest bits of");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["MSB first","MSBFIRST"],["LSB first",
"LSBFIRST"]]),"MODE");this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:Blockly.Blocks.shift_in.setPinMenus};
Blockly.propc.shift_out=function(){var a=this.getFieldValue("BITS"),b=this.getFieldValue("MODE"),c=this.getFieldValue("DATA"),d=this.getFieldValue("CLK"),e=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"0";-1===profile["default"].digital.toString().indexOf(c+","+c)&&(c="MY_"+c);-1===profile["default"].digital.toString().indexOf(d+","+d)&&(d="MY_"+d);return"shift_out("+c+", "+d+", "+b+", "+a+", "+e+");\n"};
Blockly.Blocks.debug_lcd_init={helpUrl:Blockly.MSG_SERIAL_LCD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DEBUG_LCD_INIT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("PIN"),d=this.getFieldValue("BAUD");this.getInput("PINS")&&
this.removeInput("PINS");this.appendDummyInput("PINS").appendField("Serial LCD initialize PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN").appendField("baud").appendField(new Blockly.FieldDropdown([["2400","2400"],["9600","9600"],["19200","19200"]]),"BAUD");this.setFieldValue(d,"BAUD");c&&c===a&&b?this.setFieldValue(b,"PIN"):c&&this.setFieldValue(c,"PIN")}};
Blockly.propc.debug_lcd_init=function(){if(!this.disabled){var a=this.getFieldValue("PIN");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);var b=this.getFieldValue("BAUD");Blockly.propc.global_vars_.setup_debug_lcd="serial *serial_lcd;";Blockly.propc.setups_.setup_debug_lcd="serial_lcd  = serial_open("+a+", "+a+", 0, "+b+");"}return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial LCD initialize")?"// ERROR: LCD is not initialized!\n":"writeChar(serial_lcd, 22);\npause(5);\n"};
Blockly.Blocks.debug_lcd_music_note={helpUrl:Blockly.MSG_SERIAL_LCD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DEBUG_LCD_MUSIC_NOTE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial LCD play note").appendField(new Blockly.FieldDropdown([["C","223"],["C#","224"],["D","225"],["D#","226"],["E","227"],["F","228"],["F#","229"],["G","230"],["G#","231"],["A","220"],["A#","221"],["B","222"],["no note (rest)","232"]]),"NOTE").appendField("octave").appendField(new Blockly.FieldDropdown([["3rd",
"215"],["4th","216"],["5th","217"],["6th","218"],["7th","219"]]),"OCTAVE").appendField("length").appendField(new Blockly.FieldDropdown([["whole (2 s)","214"],["half (1 s)","213"],["quarter (500 ms)","212"],["eigth (250 ms)","211"],["sixteenth (125 ms)","210"],["thirty-second (63 ms)","209"],["sixty-fourth (31 ms)","208"]]),"LENGTH");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("LCD initialize")?
this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.debug_lcd_music_note=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Serial LCD initialize"))return"// ERROR: LCD is not initialized!\n";var a=this.getFieldValue("NOTE"),b=this.getFieldValue("OCTAVE"),c=this.getFieldValue("LENGTH");return a="writeChar(serial_lcd, "+b+");\n"+("writeChar(serial_lcd, "+c+");\n")+("writeChar(serial_lcd, "+a+");\n")};
Blockly.Blocks.debug_lcd_print={init:function(){this.setHelpUrl(Blockly.MSG_SERIAL_LCD_HELPURL);this.setTooltip(Blockly.MSG_DEBUG_LCD_PRINT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));var a="Serial";-1<this.type.indexOf("parallel")&&(a="Parallel",this.setHelpUrl(Blockly.MSG_PARALLEL_LCD_HELPURL));this.appendValueInput("MESSAGE").setCheck("String").appendField(a+" LCD print text ");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},
onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();-1===a.indexOf("Serial LCD initialize")&&"debug_lcd_print"===this.type||-1===a.indexOf("Parallel LCD initialize")&&"parallel_lcd_print"===this.type?this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.debug_lcd_print=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString(),b="serial";"parallel_lcd_print"===this.type&&(b="parallel");if(-1===a.indexOf("Serial LCD initialize")&&"serial"===b||-1===a.indexOf("Parallel LCD initialize")&&"parallel"===b)return"// ERROR: LCD is not initialized!\n";a=Blockly.propc.valueToCode(this,"MESSAGE",Blockly.propc.ORDER_NONE);return"dprint("+b+"_lcd, "+a.replace(/%/g,"%%")+");\n"};
Blockly.Blocks.debug_lcd_number={init:function(){this.setHelpUrl(Blockly.MSG_SERIAL_LCD_HELPURL);this.setTooltip(Blockly.MSG_DEBUG_LCD_NUMBER_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));var a="Serial";-1<this.type.indexOf("parallel")&&(a="Parallel",this.setHelpUrl(Blockly.MSG_PARALLEL_LCD_HELPURL));this.appendValueInput("VALUE").setCheck("Number").appendField(a+" LCD print number");this.appendDummyInput().appendField("as").appendField(new Blockly.FieldDropdown([["Decimal","DEC"],["Hexadecimal",
"HEX"],["Binary","BIN"]]),"FORMAT");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();-1===a.indexOf("Serial LCD initialize")&&"debug_lcd_number"===this.type||-1===a.indexOf("Parallel LCD initialize")&&"parallel_lcd_number"===this.type?this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.debug_lcd_number=function(){var a="",b="serial";"parallel_lcd_print"===this.type&&(b="parallel");if(!findBlocksByType("debug_lcd_init")&&"serial"===b||!findBlocksByType("parallel_lcd_init")&&"parallel"===b)a+="// ERROR: LCD is not initialized!\n";else{var c=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ATOMIC),d=this.getFieldValue("FORMAT");a+="dprint("+b+"_lcd, ";a=("BIN"===d?a+'"%b"':"HEX"===d?a+'"%x"':a+'"%d"')+(", "+c+");")}return a};
Blockly.Blocks.debug_lcd_action={helpUrl:Blockly.MSG_SERIAL_LCD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DEBUG_LCD_ACTION_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Serial LCD command").appendField(new Blockly.FieldDropdown([["clear screen","12"],["move cursor right","9"],["move cursor left","8"],["move cursor down","10"],["carriage return","13"],["backlight on","17"],["backlight off","18"],["display off","21"],["display on, cursor off",
"22"],["display on, cursor off, blink","23"],["display on, cursor on","24"],["display on, cursor on, blink","25"]]),"ACTION");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){findBlocksByType("debug_lcd_init")?this.setWarningText(null):this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!")}};
Blockly.propc.debug_lcd_action=function(){return findBlocksByType("debug_lcd_init")?"writeChar(serial_lcd, "+this.getFieldValue("ACTION")+");\npause(5);\n":"// ERROR: LCD is not initialized!\n"};
Blockly.Blocks.debug_lcd_set_cursor={init:function(){this.setHelpUrl(Blockly.MSG_SERIAL_LCD_HELPURL);this.setTooltip(Blockly.MSG_DEBUG_LCD_SET_CURSOR_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));var a="Serial";-1<this.type.indexOf("parallel")&&(a="Parallel",this.setHelpUrl(Blockly.MSG_PARALLEL_LCD_HELPURL));this.appendValueInput("ROW").appendField(a+" LCD set cursor row").setCheck("Number");this.appendValueInput("COLUMN").appendField("column").setCheck("Number");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();-1===a.indexOf("Serial LCD initialize")&&"debug_lcd_set_cursor"===this.type||-1===a.indexOf("Parallel LCD initialize")&&"parallel_lcd_set_cursor"===this.type?this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.debug_lcd_set_cursor=function(){if(!findBlocksByType("debug_lcd_init")&&"debug_lcd_set_cursor"===this.type||!findBlocksByType("parallel_lcd_init")&&"parallel_lcd_set_cursor"===this.type)return"// LCD is not initialized!\n";var a=Blockly.propc.valueToCode(this,"ROW",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"COLUMN",Blockly.propc.ORDER_NONE);return"debug_lcd_set_cursor"===this.type?"writeChar(serial_lcd, (128 + (constrainInt("+a+", 0, 3) * 20) + constrainInt("+b+", 0, 19)));\n":
"lcdParallel_setCursor(parallel_lcd, "+b+", char "+a+");"};
Blockly.Blocks.debug_lcd_print_multiple={init:function(){this.setHelpUrl(Blockly.MSG_SERIAL_LCD_HELPURL);this.setTooltip(Blockly.MSG_DEBUG_LCD_PRINT_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));var a="Serial";-1<this.type.indexOf("parallel")&&(a="Parallel",this.setHelpUrl(Blockly.MSG_PARALLEL_LCD_HELPURL));this.appendDummyInput().appendField(a+" LCD print");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.specDigits_=!1;this.setWarningText(null)},mutationToDom:Blockly.Blocks.console_print_multiple.mutationToDom,domToMutation:Blockly.Blocks.console_print_multiple.domToMutation,decompose:Blockly.Blocks.console_print_multiple.decompose,
compose:Blockly.Blocks.console_print_multiple.compose,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections,onchange:function(){var a=null;this.workspace&&1>this.optionList_.length&&(a="LCD print multiple must have at least one term.");if(!findBlocksByType("debug_lcd_init")&&"debug_lcd_print_multiple"===this.type||!findBlocksByType("parallel_lcd_init")&&"parallel_lcd_print_multiple"===this.type)a="WARNING: You must use an LCD\ninitialize block at the beginning of your program!";this.setWarningText(a)}};
Blockly.propc.debug_lcd_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.parallel_lcd_init={helpUrl:Blockly.MSG_PARALLEL_LCD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DEBUG_LCD_INIT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){for(var c="COLS ROWS RS_PIN EN_PIN DATA0 DATA1 DATA2 DATA3".split(" "),d=[],e=
0;8>e;e++)d.push(this.getFieldValue(c[e]));this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("Parallel LCD initialize columns").appendField(new Blockly.FieldNumber("16",null,null,1),"COLS").appendField("rows").appendField(new Blockly.FieldNumber("2",null,null,1),"ROWS").appendField("RS").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"RS_PIN").appendField("EN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),
"EN_PIN").appendField("D0").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DATA0").appendField("D1").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DATA1").appendField("D2").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DATA2").appendField("D3").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DATA3");this.setFieldValue(d[0],c[0]);this.setFieldValue(d[1],
c[1]);for(e=2;8>e;e++)d[e]&&d[e]===a&&b?this.setFieldValue(b,c[e]):d[e]&&this.setFieldValue(d[e],c[e])}};
Blockly.propc.parallel_lcd_init=function(){if(!this.disabled){for(var a="COLS ROWS RS_PIN EN_PIN DATA0 DATA1 DATA2 DATA3".split(" "),b=[],c=0;8>c;c++)b.push(this.getFieldValue(a[c])),1===c&&b.push("8");Blockly.propc.definitions_["include lcdParallel"]='#include "lcdParallel.h"';Blockly.propc.global_vars_.setup_parallel_lcd="lcdParallel *parallel_lcd;";Blockly.propc.setups_.setup_parallel_lcd="parallel_lcd = lcdParallel_init("+b.join(",")+");"}return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Parallel LCD initialize")?
"// ERROR: LCD is not initialized!\n":""};Blockly.Blocks.parallel_lcd_print=Blockly.Blocks.debug_lcd_print;Blockly.propc.parallel_lcd_print=Blockly.propc.debug_lcd_print;Blockly.Blocks.parallel_lcd_number=Blockly.Blocks.debug_lcd_number;Blockly.propc.parallel_lcd_number=Blockly.propc.debug_lcd_number;
Blockly.Blocks.parallel_lcd_action={helpUrl:Blockly.MSG_PARALLEL_LCD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DEBUG_LCD_ACTION_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Parallel LCD command").appendField(new Blockly.FieldDropdown([["Display off","noDisplay"],["Display on","display"],["Cursor solid","noBlink"],["Cursor blinking","blink"],["Cursor off","noCursor"],["Cursor on","cursor"],["Scroll left","scrollDisplayLeft"],["Scroll right",
"scrollDisplayRight"],["Write left to right","leftToRight"],["Write right to left","rightToLeft"],["Right justify text","autoscroll"],["Left justify text","noAutoscroll"]]),"ACTION");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Parallel LCD initialize")?this.setWarningText("WARNING: You must use an LCD\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.parallel_lcd_action=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Parallel LCD initialize")?"// ERROR: LCD is not initialized!\n":"lcdParallel_"+this.getFieldValue("ACTION")+"(parallel_lcd);\n"};Blockly.Blocks.parallel_lcd_set_cursor=Blockly.Blocks.debug_lcd_set_cursor;Blockly.propc.parallel_lcd_set_cursor=Blockly.propc.debug_lcd_set_cursor;Blockly.Blocks.parallel_lcd_print_multiple=Blockly.Blocks.debug_lcd_print_multiple;
Blockly.propc.parallel_lcd_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.xbee_setup={helpUrl:Blockly.MSG_XBEE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_XBEE_SETUP_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("DO_PIN"),d=this.getFieldValue("DI_PIN"),e=this.getFieldValue("BAUD");this.getInput("PINS")&&
this.removeInput("PINS");this.appendDummyInput("PINS").appendField("XBee initialize DI").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DO_PIN").appendField("DO").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DI_PIN").appendField("baud").appendField(new Blockly.FieldDropdown([["9600","9600"],["2400","2400"],["4800","4800"],["19200","19200"],["57600","57600"],["115200","115200"]]),"BAUD");this.setFieldValue(e,"BAUD");
c&&c===a&&b?this.setFieldValue(b,"DO_PIN"):c&&this.setFieldValue(c,"DO_PIN");d&&d===a&&b?this.setFieldValue(b,"DI_PIN"):d&&this.setFieldValue(d,"DI_PIN")}};
Blockly.propc.xbee_setup=function(){if(!this.disabled){for(var a=["DI_PIN","DO_PIN","BAUD"],b=[],c=0;3>c;c++)b.push(this.getFieldValue(a[c])),1===c&&b.push("0");Blockly.propc.definitions_["include fdserial"]='#include "fdserial.h"';Blockly.propc.global_vars_.xbee="fdserial *xbee;";Blockly.propc.setups_.xbee="xbee = fdserial_open("+b.join(",")+");"}return""};
Blockly.Blocks.xbee_transmit={helpUrl:Blockly.MSG_XBEE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_XBEE_TRANSMIT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("XBee transmit").appendField(new Blockly.FieldDropdown([["text","TEXT"],["decimal number","INT"],["hexadecimal number","HEX"],["binary number","BIN"],["ASCII character","BYTE"]]),"TYPE");this.appendValueInput("VALUE").setCheck(null);this.appendDummyInput("NEWLINE").appendField("then a carriage return").appendField(new Blockly.FieldCheckbox("TRUE"),
"ck_nl");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize")?this.setWarningText("WARNING: You must use an XBee\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.xbee_transmit=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize"))return"// ERROR: XBee is not initialized!\n";var a=this.getFieldValue("TYPE"),b=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ATOMIC)||"0",c=this.getFieldValue("ck_nl");c="TRUE"===c?"\\r":"";if("BYTE"===a){if(3!==b.length||"'"!==b[0]||"'"!==b[2])b!==b.replace(/[^0-9]+/g,"")?b="("+b+" & 0xFF)":0<parseInt(b)&&256>parseInt(b)||(b="("+b+" & 0xFF)");return"fdserial_txChar(xbee, "+
b+");\n"}return"INT"===a?'dprint(xbee, "%d'+c+'", '+b+");\n":"HEX"===a?'dprint(xbee, "%x'+c+'", '+b+");\n":"BIN"===a?'dprint(xbee, "%b'+c+'", '+b+");\n":'dprint(xbee, "%s'+c+'", '+b.replace(/%/g,"%%")+");\nwhile(!fdserial_txEmpty(xbee));\npause(5);\n"};
Blockly.Blocks.xbee_receive={helpUrl:Blockly.MSG_XBEE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_XBEE_RECEIVE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("XBee receive").appendField(new Blockly.FieldDropdown([["text","TEXT"],["decimal number","INT"],["hexadecimal number","HEX"],["binary number","BIN"],["ASCII character","BYTE"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VALUE");
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize")?this.setWarningText("WARNING: You must use an XBee\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.xbee_receive=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize"))return"// ERROR: XBee is not initialized!\n";var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE),b=this.getFieldValue("TYPE");if("BYTE"===b)return a+" = fdserial_rxChar(xbee);\n";if("INT"===b)return'dscan(xbee, "%d", &'+a+");\n";if("BIN"===b)return'dscan(xbee, "%b", &'+a+");\n";if("HEX"===b)return'dscan(xbee, "%x", &'+a+");\n";Blockly.propc.vartype_[a]=
"char *";return'dscan(xbee, "%s", '+a+");\n"};
Blockly.Blocks.xbee_print_multiple={helpUrl:Blockly.MSG_XBEE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_XBEE_PRINT_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("XBee transmit");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");this.appendDummyInput("NEWLINE").appendField("then a carriage return").appendField(new Blockly.FieldCheckbox("TRUE"),
"ck_nl");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.setWarningText(null)},mutationToDom:Blockly.Blocks.console_print_multiple.mutationToDom,domToMutation:Blockly.Blocks.console_print_multiple.domToMutation,decompose:Blockly.Blocks.console_print_multiple.decompose,
compose:Blockly.Blocks.console_print_multiple.compose,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections,onchange:function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize"))this.setWarningText("WARNING: You must use a XBee\ninitialize block at the beginning of your program!");else{var a=null;this.workspace&&1>this.optionList_.length&&(a="XBee transmit multiple must have at least one term.");this.setWarningText(a)}}};
Blockly.propc.xbee_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.xbee_scan_multiple={helpUrl:Blockly.MSG_XBEE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_XBEE_SCAN_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("XBee receive");this.optionList_=["dec","char"];this.updateShape_();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["console_print_dec","console_print_hex","console_print_bin","console_print_float","console_print_char"]));
this.setWarningText(null);this.ser_pins=[]},mutationToDom:Blockly.Blocks.serial_scan_multiple.mutationToDom,domToMutation:Blockly.Blocks.serial_scan_multiple.domToMutation,decompose:Blockly.Blocks.serial_scan_multiple.decompose,compose:Blockly.Blocks.serial_scan_multiple.compose,saveConnections:Blockly.Blocks.serial_scan_multiple.saveConnections,updateShape_:Blockly.Blocks.serial_scan_multiple.updateShape_,updateSerPin:function(){},onchange:function(){var a=null;-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize")&&
(a="WARNING: You must use an XBee\ninitialize block at the beginning of your program!");this.workspace&&1>this.optionList_.length&&(a="XBee recieve must have at least one search term.");this.setWarningText(a)}};
Blockly.propc.xbee_scan_multiple=function(){if(-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("XBee initialize")){for(var a='dscan(xbee, "',b="",c="",d=0;this.getFieldValue("CPU"+d);)this.getFieldValue("TYPE"+d).includes("store decimal number")?a+="%d":this.getFieldValue("TYPE"+d).includes("store ASCII character")?a+="%c":this.getFieldValue("TYPE"+d).includes("store hexadecimal number")?a+="%x":this.getFieldValue("TYPE"+d).includes("store binary number")?a+="%b":"in"===this.getFieldValue("TYPE"+
d)&&(a+="%f"),"in"===this.getFieldValue("TYPE"+d)?(b+=", &__fpBuf"+d,c+=Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),c+=" = (int) (__fpBuf"+d+" * "+this.getFieldValue("MULT"+d)+");\n",this.disabled||(Blockly.propc.global_vars_["floatPointScanBuffer"+d]="float __fpBuf"+d+";")):b+=", &"+Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),d++;return a+('"'+b+");\n"+c)}return"// ERROR: XBee is not initialized!\n"};
Blockly.Blocks.oled_initialize={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_INITIALIZE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PINS");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=["DIN","CLK","CS","DC","RES"],d=[this.getFieldValue("DIN"),this.getFieldValue("CLK"),this.getFieldValue("CS"),
this.getFieldValue("DC"),this.getFieldValue("RES")];this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("OLED initialize").appendField("DIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"DIN").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"CLK").appendField("CS").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"CS").appendField("D/C").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),
"DC").appendField("RES").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"RES");for(var e=0;5>e;e++)d[e]&&d[e]===a&&b?this.setFieldValue(b,c[e]):d[e]&&this.setFieldValue(d[e],c[e])}};
Blockly.propc.oled_initialize=function(){if(!this.disbled){for(var a=[this.getFieldValue("DIN"),this.getFieldValue("CLK"),this.getFieldValue("CS"),this.getFieldValue("DC"),this.getFieldValue("RES")],b=0;4>b;b++)-1===profile["default"].digital.toString().indexOf(a[b]+","+a[b])&&(a[b]="MY_"+a[b]);Blockly.propc.definitions_.oledtools='#include "oledc.h"';Blockly.propc.setups_.oled="oledc_init("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", 2);"}return""};
Blockly.Blocks.oled_font_loader={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_FONT_LOADER_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("OLED font loader (EEPROM only)")}};Blockly.propc.oled_font_loader=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.definitions_.oledfonts='#include "oledc_fontLoader.h"';return"oledc_fontLoader();"};
Blockly.Blocks.oled_clear_screen={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_CLEAR_SCREEN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("OLED command").appendField(new Blockly.FieldDropdown([["clear screen","CLS"],["sleep","SLEEP"],["wake","WAKE"],["invert","INV"],["orient pins up","O-UP"],["orient pins down","O-DOWN"],["orient pins left","O-LEFT"],["orient pins right","O-RIGHT"]]),"CMD");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_clear_screen=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=this.getFieldValue("CMD"),b="";"CLS"===a?b+="oledc_clear(0, 0, oledc_getWidth(), oledc_getHeight() );\n":"WAKE"===a?b+="oledc_wake();\n":"SLEEP"===a?b+="oledc_sleep();\n":"INV"===a?b+="oledc_invertDisplay();\n":"O-UP"===a?b+="oledc_setRotation(0);\n":"O-DOWN"===a?b+="oledc_setRotation(2);\n":"O-LEFT"===a?b+="oledc_setRotation(1);\n":
"O-RIGHT"===a&&(b+="oledc_setRotation(3);\n");return b};
Blockly.Blocks.oled_draw_circle={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_DRAW_CIRCLE_TOOLTIP);this.appendValueInput("POINT_X").setCheck("Number").appendField("OLED draw circle at (x)");this.appendValueInput("POINT_Y").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("RADIUS").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("radius");this.appendValueInput("COLOR").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("color");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("fill").appendField(new Blockly.FieldCheckbox("TRUE"),
"ck_fill");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_draw_circle=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"POINT_X",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"POINT_Y",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"RADIUS",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,"COLOR",
Blockly.propc.ORDER_NONE);var e="TRUE"===this.getFieldValue("ck_fill")?"oledc_fillCircle(":"oledc_drawCircle(";e=e+(a+", "+b+", ")+(c+", ");return e=/0x[0-9A-Fa-f]{4}/.test(d)?e+("oledc_color565("+parseInt(d.substr(2,2),16).toString(10)+", "+parseInt(d.substr(4,2),16).toString(10)+", "+parseInt(d.substr(6,2),16).toString(10)+"));"):e+("oledc_color565(get8bitColor("+d+', "RED"), get8bitColor('+d+', "GREEN"), get8bitColor('+d+', "BLUE")));')};
Blockly.Blocks.oled_draw_line={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_DRAW_LINE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X_ONE").setCheck("Number").appendField("OLED draw line from 1 (x)");this.appendValueInput("Y_ONE").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("X_TWO").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("to 2 (x)");this.appendValueInput("Y_TWO").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");
this.appendValueInput("COLOR").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("color");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_draw_line=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"X_ONE",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y_ONE",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"X_TWO",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,"Y_TWO",Blockly.propc.ORDER_NONE),
e=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE);a="oledc_drawLine("+a+", "+b+", "+c+", "+d+", ";return a=/0x[0-9A-Fa-f]{4}/.test(e)?a+("oledc_color565("+parseInt(e.substr(2,2),16).toString(10)+", "+parseInt(e.substr(4,2),16).toString(10)+", "+parseInt(e.substr(6,2),16).toString(10)+"));"):a+("oledc_color565(get8bitColor("+e+', "RED"), get8bitColor('+e+', "GREEN"), get8bitColor('+e+', "BLUE")));')};
Blockly.Blocks.oled_draw_pixel={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_DRAW_PIXEL_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X_AXIS").setCheck("Number").appendField("OLED draw pixel at");this.appendValueInput("Y_AXIS").setCheck("Number").appendField(",");this.appendValueInput("COLOR").setCheck("Number").appendField("color");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);
this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_draw_pixel=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"X_AXIS",Blockly.propc.ORDER_ATOMIC),b=Blockly.propc.valueToCode(this,"Y_AXIS",Blockly.propc.ORDER_ATOMIC),c=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE);a="oledc_drawPixel("+a+", "+b+", ";return a=
/0x[0-9A-Fa-f]{4}/.test(c)?a+("oledc_color565("+parseInt(c.substr(2,2),16).toString(10)+", "+parseInt(c.substr(4,2),16).toString(10)+", "+parseInt(c.substr(6,2),16).toString(10)+"));"):a+("oledc_color565(get8bitColor("+c+', "RED"), get8bitColor('+c+', "GREEN"), get8bitColor('+c+', "BLUE")));')};
Blockly.Blocks.oled_draw_triangle={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_DRAW_TRIANGLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("POINT_X0").setCheck("Number").appendField("OLED draw triangle at 1 (x)");this.appendValueInput("POINT_Y0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("POINT_X1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("2 (x)");this.appendValueInput("POINT_Y1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");
this.appendValueInput("POINT_X2").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("3 (x)");this.appendValueInput("POINT_Y2").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("COLOR").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("color");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("fill").appendField(new Blockly.FieldCheckbox("TRUE"),"ck_fill");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");
this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_draw_triangle=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"POINT_X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"POINT_Y0",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"POINT_X1",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,
"POINT_Y1",Blockly.propc.ORDER_NONE),e=Blockly.propc.valueToCode(this,"POINT_X2",Blockly.propc.ORDER_NONE),f=Blockly.propc.valueToCode(this,"POINT_Y2",Blockly.propc.ORDER_NONE),g=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE);var h="TRUE"===this.getFieldValue("ck_fill")?"oledc_fillTriangle(":"oledc_drawTriangle(";h=h+(a+", "+b+", ")+(c+", "+d+", ")+(e+", "+f+", ");return h=/0x[0-9A-Fa-f]{4}/.test(g)?h+("oledc_color565("+parseInt(g.substr(2,2),16).toString(10)+", "+parseInt(g.substr(4,
2),16).toString(10)+", "+parseInt(g.substr(6,2),16).toString(10)+"));"):h+("oledc_color565(get8bitColor("+g+', "RED"), get8bitColor('+g+', "GREEN"), get8bitColor('+g+', "BLUE")));')};
Blockly.Blocks.oled_draw_rectangle={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_DRAW_RECTANGLE_TOOLTIP);this.appendValueInput("POINT_X").setCheck("Number").appendField("OLED draw rectangle at (x)");this.appendValueInput("POINT_Y").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("RECT_WIDTH").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("width");this.appendValueInput("RECT_HEIGHT").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("height");
this.appendValueInput("RECT_ROUND").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("roundness");this.appendValueInput("COLOR").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("color");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("fill").appendField(new Blockly.FieldCheckbox("TRUE"),"ck_fill");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setWarningText(null)},
onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_draw_rectangle=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"POINT_X",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"POINT_Y",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"RECT_WIDTH",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,
"RECT_HEIGHT",Blockly.propc.ORDER_NONE),e=Blockly.propc.valueToCode(this,"RECT_ROUND",Blockly.propc.ORDER_NONE),f=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE),g=this.getFieldValue("ck_fill");a="0"===e?("TRUE"===g?"oledc_fillRect(":"oledc_drawRect(")+(a+", "+b+", "+c+", "+d+", "):("TRUE"===g?"oledc_fillRoundRect(":"oledc_drawRoundRect(")+(a+", "+b+", "+c+", "+d+", "+e+", ");return a=/0x[0-9A-Fa-f]{4}/.test(f)?a+("oledc_color565("+parseInt(f.substr(2,2),16).toString(10)+", "+parseInt(f.substr(4,
2),16).toString(10)+", "+parseInt(f.substr(6,2),16).toString(10)+"));"):a+("oledc_color565(get8bitColor("+f+', "RED"), get8bitColor('+f+', "GREEN"), get8bitColor('+f+', "BLUE")));')};
Blockly.Blocks.oled_text_size={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_TEXT_SIZE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("OLED text size").appendField(new Blockly.FieldDropdown([["small","SMALL"],["medium","MEDIUM"],["large","LARGE"]]),"size_select").appendField("font").appendField(new Blockly.FieldDropdown([["sans","FONT_SANS"],["serif","FONT_SERIF"],["script","FONT_SCRIPT"],["bubble","FONT_BUBBLE"]]),
"font_select");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_text_size=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=this.getFieldValue("size_select"),b=this.getFieldValue("font_select");return"oledc_setTextSize("+a+");\n"+("oledc_setTextFont("+b+");\n")};
Blockly.Blocks.oled_text_color={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_TEXT_COLOR_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("FONT_COLOR").setCheck("Number").appendField("OLED font color");this.appendValueInput("BACKGROUND_COLOR").setCheck("Number").appendField("font background color");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?
this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_text_color=function(){this.disabled||(Blockly.propc.definitions_.colormath='#include "colormath.h"');if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"FONT_COLOR",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"BACKGROUND_COLOR",Blockly.propc.ORDER_NONE);return"oledc_setTextColor("+("oledc_color565(get8bitColor("+a+', "RED"), get8bitColor('+a+', "GREEN"), get8bitColor('+
a+', "BLUE")), ')+("oledc_color565(get8bitColor("+b+', "RED"), get8bitColor('+b+', "GREEN"), get8bitColor('+b+', "BLUE")));')};Blockly.Blocks.oled_get_max_height={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_GET_MAX_HEIGHT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("OLED max height");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};
Blockly.propc.oled_get_max_height=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?["0",Blockly.propc.ORDER_NONE]:["oledc_getHeight()",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.oled_get_max_width={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_GET_MAX_WIDTH_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("OLED max width");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};
Blockly.propc.oled_get_max_width=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?["0",Blockly.propc.ORDER_NONE]:["oledc_getWidth()",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.oled_set_cursor={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_SET_CURSOR_TOOLTIP);this.appendValueInput("X_POS").setCheck("Number").appendField("OLED set cursor at (x)");this.appendValueInput("Y_POS").setCheck("Number").appendField("(y)");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?
this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};Blockly.propc.oled_set_cursor=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"X_POS",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y_POS",Blockly.propc.ORDER_NONE);return"oledc_setCursor("+a+", "+b+",0);"};
Blockly.Blocks.oled_print_text={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_PRINT_TEXT_TOOLTIP);this.appendValueInput("MESSAGE").setCheck("String").appendField("OLED print text ");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setWarningText(null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.oled_print_text=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?"// ERROR: OLED is not initialized!\n":"oledc_drawText("+Blockly.propc.valueToCode(this,"MESSAGE",Blockly.propc.ORDER_NONE)+");"};
Blockly.Blocks.oled_print_number={helpUrl:Blockly.MSG_OLED_HELPURL,init:function(){this.setTooltip(Blockly.MSG_OLED_PRINT_NUMBER_TOOLTIP);this.appendValueInput("NUMIN").setCheck("Number").appendField("OLED print number ");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["Decimal","DEC"],["Hexadecimal","HEX"],["Binary","BIN"]]),"type");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setWarningText(null)},
onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")?this.setWarningText("WARNING: You must use an OLED\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.oled_print_number=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize"))return"// ERROR: OLED is not initialized!\n";var a=Blockly.propc.valueToCode(this,"NUMIN",Blockly.propc.ORDER_NONE),b=this.getFieldValue("type");return"oledc_drawNumber("+a+", "+b+");"};
Blockly.Blocks.oled_print_multiple={init:function(){var a=Blockly.MSG_OLED_PRINT_MULTIPLE_TOOLTIP,b=Blockly.MSG_TERMINAL_HELPURL;this.myDevice="OLED";"heb_print_multiple"===this.type&&(a=Blockly.MSG_HEB_PRINT_MULTIPLE_TOOLTIP,b=Blockly.MSG_BADGE_DISPLAY_HELPURL,this.myDevice="Display");this.setTooltip(a);this.setHelpUrl(b);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField(this.myDevice+" print");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");
this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.specDigits_=!1;this.setWarningText(null)},mutationToDom:Blockly.Blocks.console_print_multiple.mutationToDom,
domToMutation:Blockly.Blocks.console_print_multiple.domToMutation,decompose:Blockly.Blocks.console_print_multiple.decompose,compose:Blockly.Blocks.console_print_multiple.compose,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections,onchange:function(){var a=null;this.workspace&&1>this.optionList_.length&&(a=this.myDevice+" print multiple must have at least one term.");-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("OLED initialize")&&"heb_print_multiple"!==this.type&&
(a="WARNING: You must use an OLED\ninitialize block at the beginning of your program!");this.setWarningText(a)}};Blockly.propc.oled_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.ws2812b_init={init:function(){var a=Blockly.MSG_WS2812B_INIT_TOOLTIP,b=Blockly.MSG_WS2812B_HELPURL;projectData&&"heb-wx"===projectData.board&&(a=Blockly.MSG_BADGE_RGB_INIT_TOOLTIP,b=Blockly.MSG_WS2812B_HELPURL);this.setTooltip(a);this.setHelpUrl(b);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));projectData&&"heb-wx"===projectData.board?this.appendDummyInput().appendField("RGB-LED set number of LEDs").appendField(new Blockly.FieldNumber("4",
null,null,1),"LEDNUM"):(this.appendDummyInput().appendField("RGB-LED initialize PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital,function(a){this.sourceBlock_.onPinSet(a)}),"PIN").appendField("number of LEDs").appendField(new Blockly.FieldNumber("4",null,null,1),"LEDNUM").appendField("type").appendField(new Blockly.FieldDropdown([["WS2812","WS2812"]]),"TYPE"),this.rgbPin=this.getFieldValue("PIN"),this.onPinSet())},onchange:function(a){this.rgbPin=this.getFieldValue("PIN");if(a&&
(a.oldXml||a.xml))this.onPinSet(null)},onPinSet:function(a){var b=this.rgbPin;this.rgbPin=a;for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++){var e=c[d].rgbPins,f=c[d].onchange;e&&a?(e.call(c[d],b,a),f&&f.call(c[d],{xml:!0})):e&&e.call(c[d])}}};
Blockly.propc.ws2812b_init=function(){if(!this.disabled){var a="";projectData&&"heb-wx"!==projectData.board&&(a=this.getFieldValue("PIN"));var b=window.parseInt(this.getFieldValue("LEDNUM"))||"4";1>b&&(b=1);1500<b&&(b=1500);Blockly.propc.definitions_.ws2812b_def='#include "ws2812.h"';Blockly.propc.definitions_["ws2812b_sets"+a]="";projectData&&"heb-wx"!==projectData.board&&(Blockly.propc.definitions_["ws2812b_sets"+a]+="#define RGB_PIN"+a+"   "+a);Blockly.propc.definitions_["ws2812b_sets"+a]+="\n#define RGB_COUNT"+
a+"   "+b;Blockly.propc.global_vars_["ws2812b_array"+a]="ws2812 *ws2812b"+a+";\nint RGBleds"+a+"["+b+"];\n";Blockly.propc.setups_["ws2812b_init"+a]="ws2812b"+a+" = ws2812b_open();"}return""};
Blockly.Blocks.ws2812b_set={init:function(){var a=Blockly.MSG_WS2812B_HELPURL;projectData&&"heb-wx"===projectData.board&&(a=Blockly.MSG_BADGE_LEDS_HELPURL);this.setHelpUrl(a);this.setTooltip(Blockly.MSG_WS2812B_SET_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("LED").setCheck("Number").appendField("RGB-LED set LED number");this.appendValueInput("COLOR").setCheck("Number").appendField("to color");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null);this.setWarningText(null);this.rgb_pins=[];this.warnFlag=0;projectData&&"heb-wx"!==projectData.board&&this.rgbPins()},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("pinmenu",JSON.stringify(this.rgb_pins));this.getInput("RGBPIN")&&a.setAttribute("rgbpin",this.getFieldValue("RGB_PIN"));return a},domToMutation:function(a){var b=a.getAttribute("rgbpin");this.rgb_pins=JSON.parse(a.getAttribute("pinmenu"));"null"===b&&(b=null);this.getInput("RGBPIN")&&this.removeInput("RGBPIN");
b&&(this.appendDummyInput("RGBPIN").appendField("PIN").appendField(new Blockly.FieldDropdown(this.rgb_pins),"RGB_PIN"),this.setFieldValue(b,"RGB_PIN"))},rgbPins:function(a,b){var c="-1";0<this.rgb_pins.length&&(c=this.rgb_pins[0][0]);this.rgb_pins.length=0;this.getInput("RGBPIN")&&(c=this.getFieldValue("RGB_PIN"));this.updateRGBpin();this.getInput("RGBPIN")&&this.removeInput("RGBPIN");1<this.rgb_pins.length&&(this.appendDummyInput("RGBPIN").appendField("PIN").appendField(new Blockly.FieldDropdown(this.rgb_pins),
"RGB_PIN"),c===a||null===a?this.setFieldValue(b,"RGB_PIN"):this.getInput("RGBPIN")&&"-1"!==c&&this.setFieldValue(c,"RGB_PIN"))},updateRGBpin:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=this.rgb_pins.length=0;b<a.length;b++)if("ws2812b_init"===a[b].type){var c=a[b].rgbPin||a[b].getFieldValue("PIN");c&&this.rgb_pins.push([c,c])}this.rgb_pins=uniq_fast(this.rgb_pins)},onchange:function(a){if(a&&projectData&&"heb-wx"!==projectData.board&&(a.oldXml||a.type===Blockly.Events.CREATE||
"RGB_PIN"===a.name&&a.blockId===this.id||0<this.warnFlag))if(a=Blockly.getMainWorkspace().getAllBlocks(),-1===a.toString().indexOf("RGB-LED initialize"))this.setWarningText("WARNING: You must use an RGB-LED\ninitialize block at the beginning of your program!");else if(this.setWarningText(null),this.warnFlag--,this.getInput("RGBPIN")){for(var b="",c=0;c<a.length;c++)"ws2812b_init"===a[c].type&&(b+=(a[c].rgbPin||a[c].getFieldValue("PIN"))+",");-1===b.indexOf(this.getFieldValue("RGB_PIN"))&&(this.setWarningText("WARNING: You must use choose a new PIN for this block!"),
this.warnFlag=3*a.length)}}};
Blockly.propc.ws2812b_set=function(){var a=Blockly.getMainWorkspace().getAllBlocks();this.updateRGBpin();if(-1===a.toString().indexOf("RGB-LED initialize")&&-1===a.toString().indexOf("RGB-LED set number")&&projectData&&"heb-wx"!==projectData.board)return"// ERROR: RGB-LED is not initialized!\n";a=Blockly.propc.valueToCode(this,"LED",Blockly.propc.ORDER_NONE);var b=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE),c="0";projectData&&"heb-wx"===projectData.board?c="":(0<this.rgb_pins.length&&
(c=this.rgb_pins[0][0]),this.getInput("RGBPIN")&&(c=this.getFieldValue("RGB_PIN")));return"RGBleds"+c+"[constrainInt("+a+", 1, RGB_COUNT"+c+") - 1] = "+b+";\n"};
Blockly.Blocks.ws2812b_set_multiple={init:function(){var a=Blockly.MSG_WS2812B_HELPURL;projectData&&"heb-wx"===projectData.board&&(a=Blockly.MSG_BADGE_LEDS_HELPURL);this.setHelpUrl(a);this.setTooltip(Blockly.MSG_WS2812B_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("START").setCheck("Number").appendField("RGB-LED set LEDs from");this.appendValueInput("END").setCheck("Number").appendField("to");this.appendValueInput("COLOR").setCheck("Number").appendField("to color");
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null);this.rgb_pins=[];projectData&&"heb-wx"!==projectData.board&&this.rgbPins()},mutationToDom:Blockly.Blocks.ws2812b_set.mutationToDom,domToMutation:Blockly.Blocks.ws2812b_set.domToMutation,rgbPins:Blockly.Blocks.ws2812b_set.rgbPins,updateRGBpin:Blockly.Blocks.ws2812b_set.updateRGBpin,onchange:Blockly.Blocks.ws2812b_set.onchange};
Blockly.propc.ws2812b_set_multiple=function(){this.updateRGBpin();var a=Blockly.getMainWorkspace().getAllBlocks().toString();if(-1===a.indexOf("RGB-LED initialize")&&a.toString().indexOf("RGB-LED set number")&&projectData&&"heb-wx"!==projectData.board)return"// ERROR: RGB-LED is not initialized!\n";a=Blockly.propc.valueToCode(this,"START",Blockly.propc.ORDER_NONE);var b=Blockly.propc.valueToCode(this,"END",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"COLOR",Blockly.propc.ORDER_NONE),
d="0";projectData&&"heb-wx"===projectData.board?d="":(0<this.rgb_pins.length&&(d=this.rgb_pins[0][0]),this.getInput("RGBPIN")&&(d=this.getFieldValue("RGB_PIN")));return"for(int __ldx = "+a+"; __ldx <= "+b+"; __ldx++) {"+("RGBleds"+d+"[constrainInt(__ldx, 1, RGB_COUNT"+d+") - 1] = "+c+";}")};
Blockly.Blocks.ws2812b_update={init:function(){var a=Blockly.MSG_WS2812B_HELPURL;projectData&&"heb-wx"===projectData.board&&(a=Blockly.MSG_BADGE_LEDS_HELPURL);this.setHelpUrl(a);this.setTooltip(Blockly.MSG_WS2812B_UPDATE_TOOLTIP);this.appendDummyInput().appendField("RGB-LED update LEDs");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null);this.rgb_pins=[];this.setColour(colorPalette.getColor("protocols"));projectData&&"heb-wx"!==
projectData.board&&this.rgbPins()},mutationToDom:Blockly.Blocks.ws2812b_set.mutationToDom,domToMutation:Blockly.Blocks.ws2812b_set.domToMutation,rgbPins:Blockly.Blocks.ws2812b_set.rgbPins,updateRGBpin:Blockly.Blocks.ws2812b_set.updateRGBpin,onchange:Blockly.Blocks.ws2812b_set.onchange};
Blockly.propc.ws2812b_update=function(){this.updateRGBpin();var a=Blockly.getMainWorkspace().getAllBlocks().toString();if(-1===a.indexOf("RGB-LED initialize")&&a.toString().indexOf("RGB-LED set number")){if(projectData&&"heb-wx"!==projectData.board)return"// ERROR: RGB-LED is not initialized!\n";this.disabled||(Blockly.propc.definitions_.ws2812b_def='#include "ws2812.h"',Blockly.propc.definitions_.ws2812b_sets="#define RGB_COUNT   4",Blockly.propc.global_vars_.ws2812b_array="ws2812 *ws2812b;\nint RGBleds[4];\n",
Blockly.propc.setups_.ws2812b_init="ws2812b = ws2812b_open();")}a="";projectData&&"heb-wx"!==projectData.board&&(0<this.rgb_pins.length&&(a=this.rgb_pins[0][0]),this.getInput("RGBPIN")&&(a=this.getFieldValue("RGB_PIN")));return"ws2812_set(ws2812b"+a+", RGB_PIN"+a+", RGBleds"+a+", RGB_COUNT"+a+");\n"};
Blockly.Blocks.wx_init={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_INIT_TOOLTIP);(new Blockly.FieldColour("#FFFFFF")).setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX initialize").appendField("mode").appendField(new Blockly.FieldDropdown([["Terminal on USB","USB_PGM_TERM"],["Terminal on WX","USB_PGM"],["Term & Programming on WX","WX_ALL_COM"]]),"MODE").appendField(" DI").appendField(new Blockly.FieldDropdown([["WX Socket",
"30"]].concat(profile["default"].digital),function(a){this.sourceBlock_.updateShape_({PIN:a})}),"DI");this.appendDummyInput("DOPIN").appendField("DO").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DO");this.getInput("DOPIN").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("DI");a.setAttribute("pin",b);return a},domToMutation:function(a){a=
a.getAttribute("pin");this.updateShape_({PIN:a})},updateShape_:function(a){"30"===a.PIN?this.getInput("DOPIN").setVisible(!1):this.getInput("DOPIN").setVisible(!0)}};
Blockly.propc.wx_init=function(){if(!this.diabled){var a="31",b="30",c="WX_ALL_COM";"wx_init"===this.type&&(b=this.getFieldValue("DI"),a=this.getFieldValue("DO"),"30"===b&&(a="31"),c=this.getFieldValue("MODE"));a="wifi_start("+a+", "+b+", 115200, "+c+');\nwifi_setBuffer(__wxBffr, sizeof(__wxBffr));\n__wsId = wifi_listen(WS, "/ws/a");\n';a+="while(!__wsHandle) {\n  wifi_poll(&__wxEvent, &__wxId, &__wxHandle);\n";a+="  if(__wxEvent == 'W' && __wxId == __wsId)  __wsHandle = __wxHandle;\n}";Blockly.propc.definitions_.wx_def=
'#include "wifi.h"';Blockly.propc.global_vars_.wx_vars="int __wxEvent, __wxId, __wxHandle, __wsId, __wv[15], __wsHandle = 0;\nchar __wxBffr[136];\n";Blockly.propc.setups_.wx_init=a}return""};
Blockly.Blocks.wx_config_page={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_CONFIG_PAGE_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX configure page title").appendField(new Blockly.FieldTextInput("title"),"TITLE").appendField(" background color").appendField(a,"BKG");this.setInputsInline(!1);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks();if(-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board)this.setWarningText("WARNING: You must use a Simple WX\ninitialize block at the beginning of your program!");else{for(var b=null,c=0;c<a.length;c++)0===a[c].toString().indexOf("WX ")&&(b="WARNING: You cannot use Simple WX and\nAdvanced WX blocks together in your project!");this.setWarningText(b)}}};
Blockly.propc.wx_config_page=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();if(-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board)return"// ERROR: Simple WX is not initialized!\n";a="#FFFFFF"===this.getFieldValue("BKG")?"1":"0";var b=this.getFieldValue("TITLE");return'wifi_print(WS, __wsHandle, "S,'+a+","+b+'");\n'};
Blockly.Blocks.wx_set_widget={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_SET_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("SET_1").appendField("Simple WX configure widget").appendField(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"]]),"WIDGET").appendField("to a").appendField(new Blockly.FieldDropdown([["Button \u2794","0"],
["Switch \u2794","1"],["Slider \u2794","2"],["Send Value \u2794","3"],["Pick Color \u2794","4"],["\u2794 Show Value","5"],["\u2794 Gauge","6"],["\u2794 Bar Graph","7"],["\u2794 Show Color","8"],["\u2794 Light Bulb","9"],["Clear Widget","10"]],function(a){this.sourceBlock_.updateShape_({TYPE:a})}),"TYPE").appendField(" label").appendField(new Blockly.FieldTextInput("label"),"LABEL");this.appendDummyInput("SET_2").appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),"COLOR").appendField(" minimum").appendField(new Blockly.FieldNumber("0",
null,null,1),"MIN").appendField(" maximum").appendField(new Blockly.FieldNumber("10",null,null,1),"MAX").appendField(" initial value").appendField(new Blockly.FieldNumber("5",null,null,1),"INITIAL");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks();if(-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board)this.setWarningText("WARNING: You must use a Simple WX\ninitialize block at the beginning of your program!");
else{for(var b=null,c=0;c<a.length;c++)0===a[c].toString().indexOf("WX ")&&(b="WARNING: You cannot use Simple WX and\nAdvanced WX blocks together in your project!");this.setWarningText(b)}},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("TYPE");a.setAttribute("w_type",b);b=this.getFieldValue("COLOR");a.setAttribute("w_color",b);b=this.getFieldValue("MIN");a.setAttribute("w_min",b);b=this.getFieldValue("MAX");a.setAttribute("w_max",b);b=this.getFieldValue("INITIAL");
a.setAttribute("w_init",b);return a},domToMutation:function(a){var b=a.getAttribute("w_type"),c=a.getAttribute("w_color"),d=a.getAttribute("w_min"),e=a.getAttribute("w_max");a=a.getAttribute("w_init");this.updateShape_({TYPE:b,COLOR:c,MIN:d,MAX:e,INITIAL:a})},updateShape_:function(a){var b=a.TYPE;void 0===a.TYPE&&(b=this.getFieldValue("TYPE"));var c=a.MIN;void 0===a.MIN&&(c=this.getFieldValue("MIN"));var d=a.MAX;void 0===a.MAX&&(d=this.getFieldValue("MAX"));var e=a.COLOR;void 0===a.COLOR&&(e=this.getFieldValue("COLOR"));
var f=a.INITIAL;void 0===a.INITIAL&&(f=this.getFieldValue("INITIAL"));this.getInput("SET_2")&&this.removeInput("SET_2");if("10"!==b){this.appendDummyInput("SET_2");var g=this.getInput("SET_2")}"2"===b||"6"===b||"7"===b?g.appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),"COLOR").appendField(" minimum").appendField(new Blockly.FieldNumber("0",null,null,1),"MIN").appendField(" maximum").appendField(new Blockly.FieldNumber("10",null,null,1),"MAX").appendField(" initial value").appendField(new Blockly.FieldNumber("5",
null,null,1),"INITIAL"):"1"===b?g.appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),"COLOR").appendField(" off value").appendField(new Blockly.FieldNumber("0",null,null,1),"MIN").appendField(" on value").appendField(new Blockly.FieldNumber("10",null,null,1),"MAX").appendField(" initial state").appendField(new Blockly.FieldDropdown([["on","on"],["off","off"]]),"INITIAL"):"0"===b||"5"===b||"9"===b?g.appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),
"COLOR").appendField(" initial value").appendField(new Blockly.FieldNumber("5",null,null,1),"INITIAL"):"8"===b?g.appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),"COLOR").appendField(" initial color shown").appendField(new Blockly.FieldColour("#ffffff"),"INITIAL"):("3"===b||"4"===b)&&g.appendField("widget color").appendField(new Blockly.FieldColour("#ffffff"),"COLOR");this.getField("TYPE")&&null!==b&&this.setFieldValue(b,"TYPE");this.getField("MIN")&&null!==c&&this.setFieldValue(c,
"MIN");this.getField("MAX")&&null!==d&&this.setFieldValue(d,"MAX");this.getField("COLOR")&&null!==e&&this.setFieldValue(e,"COLOR");this.getField("INITIAL")&&null!==f&&(this.setFieldValue(f,"INITIAL"),"1"===b&&f===c&&this.setFieldValue("off","INITIAL"),"1"===b&&f===d&&this.setFieldValue("on","INITIAL"))}};
Blockly.propc.wx_set_widget=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();if(-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board)return"// ERROR: Simple WX is not initialized!\n";a=this.getFieldValue("WIDGET");var b=this.getFieldValue("LABEL"),c=this.getFieldValue("TYPE"),d=this.getFieldValue("COLOR").substr(1).toUpperCase(),e=window.parseInt(this.getFieldValue("MIN")||"0"),f=window.parseInt(this.getFieldValue("MAX")||
"10");var g="8"===c?window.parseInt((this.getFieldValue("INITIAL")||"#FFFFFF").substr(1),16).toString(10):"on"===this.getFieldValue("INITIAL")?f:"off"===this.getFieldValue("INITIAL")?e:window.parseInt(this.getFieldValue("INITIAL")||"5").toString(10);return'wifi_print(WS, __wsHandle, "W,'+a+","+c+","+b+","+(e+","+f+","+g+","+d+'");\n')};
Blockly.Blocks.wx_send_widget={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_SEND_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("NUM").setCheck("Number").appendField("Simple WX send");this.appendDummyInput().appendField("to widget").appendField(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"]]),"WIDGET");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:Blockly.Blocks.wx_set_widget.onchange};
Blockly.propc.wx_send_widget=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();if(-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board)return"// ERROR: Simple WX is not initialized!\n";a=Blockly.propc.valueToCode(this,"NUM",Blockly.propc.ORDER_NONE);var b=this.getFieldValue("WIDGET");this.getFieldValue("TYPE");return'wifi_print(WS, __wsHandle, "D,'+b+',%d", '+a+");\n"};
Blockly.Blocks.wx_read_widgets={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_READ_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX read widgets");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:Blockly.Blocks.wx_set_widget.onchange};
Blockly.propc.wx_read_widgets=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();return-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board?"// ERROR: Simple WX is not initialized!\n":"wifi_print(WS, __wsHandle, \"U,0\");\n__wv[0] = 0;\nwhile(__wv[0] != 'V') {  __wv[0]++;\n  wifi_poll(&__wxEvent, &__wxId,&__wxHandle);\n  if(__wxEvent == 'W' && __wxId == __wsId)__wsHandle = __wxHandle;\n   if(__wxEvent == 'D') wifi_scan(WS, __wxHandle, \"%c%d%d%d%d%d%d%d%d%d%d%d%d%d%d\", &__wv[0], &__wv[1], &__wv[2], &__wv[3], &__wv[4], &__wv[5], &__wv[6], &__wv[7], &__wv[8], &__wv[9], &__wv[10], &__wv[11], &__wv[12], &__wv[13], &__wv[14]);\nif(__wxEvent == 'X') {__wsHandle = 0;\nwhile (!__wsHandle){wifi_poll( & __wxEvent, & __wxId, & __wxHandle);\nif (__wxEvent == 'W' && __wxId == __wsId) __wsHandle = __wxHandle;}break;}}"};
Blockly.Blocks.wx_get_widget={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_GET_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX widget").appendField(new Blockly.FieldDropdown([["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10","10"],["11","11"],["12","12"],["device horizontal tilt","13"],["device vertical tilt","14"]]),"WIDGET").appendField("value");this.setOutput(!0,
"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setWarningText(null)},onchange:Blockly.Blocks.wx_set_widget.onchange};Blockly.propc.wx_get_widget=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();return-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board?"// ERROR: Simple WX is not initialized!\n":["__wv["+this.getFieldValue("WIDGET")+"]",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.wx_evt_connected={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_GET_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX connected");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setWarningText(null)},onchange:Blockly.Blocks.wx_set_widget.onchange};
Blockly.propc.wx_evt_connected=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();return-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board?"// ERROR: Simple WX is not initialized!\n":["(__wxEvent != 'X')",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.wx_reconnect={helpUrl:Blockly.MSG_SWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SWX_GET_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Simple WX reconnect");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:Blockly.Blocks.wx_set_widget.onchange};
Blockly.propc.wx_reconnect=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init();return-1===a.toString().indexOf("Simple WX initialize")&&"heb-wx"!==projectData.board?"// ERROR: Simple WX is not initialized!\n":"__wsId = wifi_listen(WS, \"/ws/a\"); __wsHandle = 0;\nwhile(!__wsHandle) {\n  wifi_poll(&__wxEvent, &__wxId, &__wxHandle);\n  if(__wxEvent == 'W' && __wxId == __wsId)  __wsHandle = __wxHandle;\n}"};
Blockly.Blocks.wx_init_adv={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_INIT_ADV_TOOLTIP);(new Blockly.FieldColour("#FFFFFF")).setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("WX initialize").appendField("mode").appendField(new Blockly.FieldDropdown([["Terminal on USB","USB_PGM_TERM"],["Terminal on WX","USB_PGM"],["Term & Programming on WX","WX_ALL_COM"]]),"MODE").appendField(" DI").appendField(new Blockly.FieldDropdown([["WX Socket",
"30"]].concat(profile["default"].digital),function(a){this.sourceBlock_.updateShape_({PIN:a})}),"DI");this.appendDummyInput("DOPIN").appendField("DO").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DO");this.getInput("DOPIN").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText(null)},onchange:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=null,c=0;c<a.length;c++)0===a[c].toString().indexOf("Simple WX")&&
(b="WARNING: You cannot use Advanced WX and\nSimple WX blocks together in your project!");this.setWarningText(b)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("DI");a.setAttribute("pin",b);return a},domToMutation:function(a){a=a.getAttribute("pin");this.updateShape_({PIN:a})},updateShape_:function(a){"30"===a.PIN?this.getInput("DOPIN").setVisible(!1):this.getInput("DOPIN").setVisible(!0)}};
Blockly.propc.wx_init_adv=function(){if(!this.disabled){var a="31",b="30",c="WX_ALL_COM";"wx_init"===this.type&&(b=this.getFieldValue("DI"),a=this.getFieldValue("DO"),"30"===b&&(a="31"),c=this.getFieldValue("MODE"));Blockly.propc.definitions_.wx_def='#include "wifi.h"';Blockly.propc.setups_.wx_init="wifi_start("+a+", "+b+", 115200, "+c+");"}return""};
Blockly.Blocks.wx_scan_multiple={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_SCAN_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("WX scan").appendField(new Blockly.FieldDropdown([["POST","POST"],["TCP","TCP"],["Websocket","WS"],["Command","CMD"]],function(a){this.sourceBlock_.setPrefix_({ACTION:a})}),"CONNECTION").appendField("from handle").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"HANDLE");this.appendDummyInput("PREFIX").appendField("string starts with").appendField(new Blockly.FieldTextInput("txt"),"START");this.optionList_=["dec","char"];this.updateShape_();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["console_print_dec","console_print_hex","console_print_bin","console_print_float","console_print_char"]));this.setWarningText(null);this.ser_pins=[]},setPrefix_:function(a){var b=!1;"POST"===a.ACTION&&(b=!0);this.getInput("PREFIX").setVisible(b);
this.getFieldValue("VARNAME")},mutationToDom:Blockly.Blocks.serial_scan_multiple.mutationToDom,domToMutation:Blockly.Blocks.serial_scan_multiple.domToMutation,decompose:Blockly.Blocks.serial_scan_multiple.decompose,compose:Blockly.Blocks.serial_scan_multiple.compose,saveConnections:Blockly.Blocks.serial_scan_multiple.saveConnections,updateShape_:Blockly.Blocks.serial_scan_multiple.updateShape_,updateSerPin:function(){},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks();if(-1===a.toString().indexOf("WX initialize")&&
"heb-wx"!==projectData.board)this.setWarningText("WARNING: You must use a WX\ninitialize block at the beginning of your program!");else{for(var b=null,c=0;c<a.length;c++)0===a[c].toString().indexOf("Simple WX")&&(b="WARNING: You cannot use Advanced WX and\nSimple WX blocks together in your project!");this.optionList_&&this.workspace&&1>this.optionList_.length&&(b="WX scan must have at least one search term.");this.setWarningText(b)}}};
Blockly.propc.wx_scan_multiple=function(){var a=Blockly.getMainWorkspace().getAllBlocks();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1<a.toString().indexOf("WX initialize")||"heb-wx"===projectData.board){a=Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),Blockly.Variables.NAME_TYPE);var b=this.getFieldValue("CONNECTION"),c=this.getFieldValue("START").replace(/'/g,"\\'").replace(/"/g,'\\"');"POST"!==b&&(c="");a="wifi_scan("+b+", "+a+', "'+c;c=b="";for(var d=0;this.getFieldValue("CPU"+
d);)this.getFieldValue("TYPE"+d).includes("store decimal number")?a+="%d":this.getFieldValue("TYPE"+d).includes("store ASCII character")?a+="%c":this.getFieldValue("TYPE"+d).includes("store hexadecimal number")?a+="%x":this.getFieldValue("TYPE"+d).includes("store binary number")?a+="%b":"in"===this.getFieldValue("TYPE"+d)&&(a+="%f"),"in"===this.getFieldValue("TYPE"+d)?(b+=", &__fpBuf"+d,c+=Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),c+=" = (int) (__fpBuf"+
d+" * "+this.getFieldValue("MULT"+d)+");\n",this.disabled||(Blockly.propc.global_vars_["floatPointScanBuffer"+d]="float __fpBuf"+d+";")):b+=", &"+Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),d++;return a+('"'+b+");\n"+c)}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_print_multiple={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_PRINT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX print to").appendField(new Blockly.FieldDropdown([["GET","GET"],["TCP","TCP"],["Websocket","WS"],["Command","CMD"]]),"CONNECTION").appendField("handle").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"HANDLE");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("string");
this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("integer");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator("console_print_str console_print_dec console_print_hex console_print_bin console_print_float console_print_char".split(" ")));this.optionList_=["str","dec"];this.setWarningText(null)},mutationToDom:Blockly.Blocks.console_print_multiple.mutationToDom,domToMutation:Blockly.Blocks.serial_print_multiple.domToMutation,
decompose:Blockly.Blocks.console_print_multiple.decompose,compose:Blockly.Blocks.serial_print_multiple.compose,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections,onchange:Blockly.Blocks.wx_scan_multiple.onchange};Blockly.propc.wx_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.wx_scan_string={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_SCAN_STRING_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX scan").appendField(new Blockly.FieldDropdown([["POST","POST"],["Websocket","WS"],["TCP","TCP"],["Command","CMD"]],function(a){this.sourceBlock_.setPrefix_({ACTION:a})}),"CONNECTION").appendField("from handle").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"HANDLE");this.appendDummyInput("PREFIX").appendField("string starts with").appendField(new Blockly.FieldTextInput("txt"),"START");this.appendDummyInput("STORE").appendField("store string in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VARNAME");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0)},setPrefix_:function(a){var b=!1;"POST"===a.ACTION&&(b=!0);this.getInput("PREFIX").setVisible(b);b=this.getFieldValue("VARNAME");this.getInput("STORE")&&this.removeInput("STORE");
"item"===b&&"TCP"===a.ACTION&&(b="wxBuffer");this.appendDummyInput("STORE").appendField("store string in").appendField(new Blockly.FieldVariable(b),"VARNAME")},onchange:function(){var a=Blockly.getMainWorkspace().getAllBlocks();if(-1===a.toString().indexOf("WX initialize")&&"heb-wx"!==projectData.board)this.setWarningText("WARNING: You must use a WX\ninitialize block at the beginning of your program!");else{var b=null,c=Number(this.getRelativeToSurfaceXY().y);"TCP"===this.getFieldValue("CONNECTION")&&
(b="You must use a WX buffer block before this\nblock and you must store the string in the buffer\nvarialbe when scanning a string from a TCP connection!");for(var d=0;d<a.length;d++)if(0===a[d].toString().indexOf("Simple WX"))b="WARNING: You cannot use Advanced WX and\nSimple WX blocks together in your project!";else if("wx_buffer"===a[d].type){var e=Number(a[d].getRelativeToSurfaceXY().y);a[d].getFieldValue("BUFFER")===this.getFieldValue("VARNAME")&&c>e&&(b=null)}this.optionList_&&this.workspace&&
1>this.optionList_.length&&(b="WX scan must have at least one search term.");this.setWarningText(b)}}};
Blockly.propc.wx_scan_string=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)){a=Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),Blockly.Variables.NAME_TYPE);var b=this.getFieldValue("CONNECTION"),c=this.getFieldValue("START").replace(/'/g,"\\'").replace(/"/g,'\\"'),d=Blockly.propc.variableDB_.getName(this.getFieldValue("VARNAME"),
Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[d]="char *";"POST"!==b&&(c="");return"wifi_scan("+b+", "+a+', "'+c+'%s", &'+d+");\n"}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_send_string={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_SEND_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("DATA").setAlign(Blockly.ALIGN_RIGHT).appendField("WX send string").setCheck("String");this.appendDummyInput().appendField("handle").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"HANDLE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},
onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_send_string=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();return-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)?(a=Blockly.propc.valueToCode(this,"DATA",Blockly.propc.ORDER_NONE),"wifi_send("+Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),Blockly.Variables.NAME_TYPE)+", "+a+", sizeof("+a+"));\n"):"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_receive_string={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_RECEIVE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX receive store string in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"DATA").appendField("byte count in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"BYTES");this.appendValueInput("MAX").appendField("handle").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"HANDLE").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("max bytes");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setInputsInline(!1)},onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_receive_string=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)){a=Blockly.propc.variableDB_.getName(this.getFieldValue("DATA"),Blockly.Variables.NAME_TYPE);var b=Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),Blockly.Variables.NAME_TYPE),c=Blockly.propc.valueToCode(this,"MAX",Blockly.propc.ORDER_NONE)||
"64",d=Blockly.propc.variableDB_.getName(this.getFieldValue("BYTES"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[a]="char *";return d+" = wifi_recv("+b+", "+a+", "+c+");\n"}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_poll={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_POLL_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("WX poll store event in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"EVENT").appendField("ID in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"ID").appendField("handle in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"HANDLE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_poll=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)){a=Blockly.propc.variableDB_.getName(this.getFieldValue("ID"),Blockly.Variables.NAME_TYPE);var b=Blockly.propc.variableDB_.getName(this.getFieldValue("EVENT"),Blockly.Variables.NAME_TYPE),c=Blockly.propc.variableDB_.getName(this.getFieldValue("HANDLE"),
Blockly.Variables.NAME_TYPE);return"wifi_poll(&"+b+", &"+a+", &"+c+");\n"}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_listen={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_LISTEN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("PATH").setAlign(Blockly.ALIGN_RIGHT).appendField("WX connect").appendField(new Blockly.FieldDropdown([["HTTP","HTTP"],["Websocket","WS"],["TCP","TCP"]],function(a){this.sourceBlock_.setPrefix_({ACTION:a})}),"PROTOCOL").appendField("store ID in","TEXT").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"ID").appendField("path","LABEL").setCheck("String");this.appendValueInput("PORT").appendField("port").setCheck("Number");this.appendDummyInput("CONNVARS").appendField(new Blockly.FieldVariable("wxConnId1"),"ID1").appendField(new Blockly.FieldVariable("wxConnId2"),"ID2").appendField(new Blockly.FieldVariable("wxConnId3"),"ID3").appendField(new Blockly.FieldVariable("wxConnId4"),"ID4");this.getInput("PORT").setVisible(!1);this.getInput("CONNVARS").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("PROTOCOL");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setPrefix_({ACTION:a})},setPrefix_:function(a){var b=!1;this.getInput("CONNVARS")&&this.removeInput("CONNVARS");"TCP"===a.ACTION?(b=!0,this.setFieldValue("URL","LABEL"),this.setFieldValue("wxHandle","ID"),this.setFieldValue("store handle in","TEXT")):(this.setFieldValue("path",
"LABEL"),this.setFieldValue("wxConnId1","ID"),this.setFieldValue("store ID in","TEXT"),this.appendDummyInput("CONNVARS").appendField(new Blockly.FieldVariable("wxConnId1"),"ID1").appendField(new Blockly.FieldVariable("wxConnId2"),"ID2").appendField(new Blockly.FieldVariable("wxConnId3"),"ID3").appendField(new Blockly.FieldVariable("wxConnId4"),"ID4"),this.getInput("CONNVARS").setVisible(!1));this.getInput("PORT").setVisible(b)},onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_listen=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)){a=Blockly.propc.valueToCode(this,"PATH",Blockly.propc.ORDER_NONE);var b=this.getFieldValue("PROTOCOL"),c=Blockly.propc.variableDB_.getName(this.getFieldValue("ID"),Blockly.Variables.NAME_TYPE),d=Blockly.propc.valueToCode(this,"PORT",Blockly.propc.ORDER_NONE)||
"80",e="";return"TCP"===b?e+(c+" = wifi_connect("+a+", "+d+");\n"):e+(c+" = wifi_listen("+b+", "+a+");\n")}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_join={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_JOIN_NETWORK_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX join network SSID").appendField(new Blockly.FieldTextInput("myNetwork"),"SSID").appendField("passphrase").appendField(new Blockly.FieldTextInput("passphrase"),"PASS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("WX initialize")&&"heb-wx"!==projectData.board?this.setWarningText("WARNING: You must use a WX\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.wx_join=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board){a=this.getFieldValue("SSID")||"";var b=this.getFieldValue("PASS")||"";return'wifi_join("'+a+'", "'+b+'");\n'}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_code={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_CODE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX code").appendField(new Blockly.FieldDropdown([["ARG","0xE6"],["Connect","0xE4"],["Close","0xE8"],["Check","0xEE"],["Join","0xEF"],["Listen","0xE7"],["Path","0xEB"],["Poll","0xEC"],["Receive","0xE9"],["Reply","0xE5"],["Send","0xEA"],["Set","0xED"],["AP Mode","0xF3"],
["CMD","0xFE"],["GET","71"],["HTTP","0xF7"],["POST","80"],["Station Mode","0xF4"],["Station+AP Mode","0xF2"],["TCP","0xF5"],["Websocket","0xF6"],["GPIO_DI","1"],["GPIO_DO","3"],["GPIO_RTS","15"],["GPIO_CTS","13"],["GPIO_ASC","5"],["GPIO_DBG","2"],["GPIO_PGM","0"],["Invalid Request","1"],["Invalid Argument","2"],["Wrong Argument","3"],["No free listeners","4"],["No free connection","5"],["Lookup failed","6"],["Connection failed","7"],["Send failed","8"],["Invalid state","9"],["Invalid size","10"],
["Disconnected","11"],["Not implemented","12"],["Busy","13"],["Internal error","14"],["No error","0"],["Out of memory","-1"],["Undefined (NEG2)","-2"],["Timeout","-3"],["Routing problem","-4"],["Operation in progress","-5"],["Undefined (NEG6)","-6"],["Number too large","-7"],["Connection aborted","-8"],["Connection reset","-9"],["Connection closed","-10"],["Not connected","-11"],["Illegal argument","-12"],["Undefined (NEG13)","-13"],["UDP send error","-14"],["Already connected","-15"],["SSL handshake failed",
"-28"],["SSL application invalid","-61"]]),"CODE");this.setOutput(!0,"Number")}};Blockly.propc.wx_code=function(){return[this.getFieldValue("CODE"),Blockly.propc.ORDER_NONE]};
Blockly.Blocks.wx_mode={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_MODE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX ").appendField(new Blockly.FieldDropdown([["Set","SET"],["Leave and set","LEAVE"],["Check","CHECK"]],function(a){this.sourceBlock_.setPrefix_({ACTION:a})}),"ACTION").appendField("mode");this.appendDummyInput("CHECK").appendField("to").appendField(new Blockly.FieldDropdown([["AP",
"AP"],["Station","STA"],["Station + AP","STA_AP"]]),"MODE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setInputsInline(!0)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("ACTION");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setPrefix_({ACTION:a})},setPrefix_:function(a){this.getInput("CHECK")&&this.removeInput("CHECK");"LEAVE"===a.ACTION?this.appendDummyInput("CHECK").appendField("to").appendField(new Blockly.FieldDropdown([["AP",
"AP"],["Station + AP","STA_AP"]]),"MODE"):this.appendDummyInput("CHECK").appendField("to").appendField(new Blockly.FieldDropdown([["AP","AP"],["Station","STA"],["Station + AP","STA_AP"]]),"MODE");"CHECK"===a.ACTION?(this.getInput("CHECK").setVisible(!1),this.setPreviousStatement(!1,null),this.setNextStatement(!1,null),this.setOutput(!0,"Number")):(this.getInput("CHECK").setVisible(!0),this.setPreviousStatement(!0,"Block"),this.setNextStatement(!0,null),this.setOutput(!1))},onchange:function(){-1===
Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("WX initialize")&&"heb-wx"!==projectData.board&&this.setWarningText("WARNING: You must use a WX\ninitialize block at the beginning of your program!")}};
Blockly.propc.wx_mode=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board){a=this.getFieldValue("MODE");var b=this.getFieldValue("ACTION");return"CHECK"===b?["wifi_mode(CHECK)",Blockly.propc.ORDER_NONE]:"LEAVE"===b?"wifi_leave("+a+");\n":"wifi_mode("+a+");\n"}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_buffer={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_BUFFER_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("WX buffer use variable").appendField(new Blockly.FieldVariable("wxBuffer"),"BUFFER").appendField("set size to").appendField(new Blockly.FieldNumber("64",null,null,1),"SIZE").appendField("characters");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},
onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_buffer=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();if(-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)){a=this.getFieldValue("SIZE")||"64";var b=Blockly.propc.variableDB_.getName(this.getFieldValue("BUFFER"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[b]="char";Blockly.propc.varlength_[b]=a+" + 1";return"wifi_setBuffer("+b+", ("+a+" + 1));\n"}return"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_disconnect={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_DISCONNECT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX disconnect").appendField(new Blockly.FieldDropdown([["HTTP","HTTP"],["Websocket","WS"],["TCP","TCP"]],function(a){this.sourceBlock_.setPrefix_({ACTION:a})}),"PROTOCOL").appendField("ID","TEXT").appendField(new Blockly.FieldVariable("wxId"),"ID");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("PROTOCOL");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setPrefix_({ACTION:a})},setPrefix_:function(a){"TCP"===a.ACTION?(this.setFieldValue("wxHandle","ID"),this.setFieldValue("handle","TEXT")):(this.setFieldValue("wxId","ID"),this.setFieldValue("ID","TEXT"))},onchange:Blockly.Blocks.wx_scan_multiple.onchange};
Blockly.propc.wx_disconnect=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&Blockly.propc.wx_init_adv();return-1===a.indexOf("Simple WX initialize")&&(-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board)?"wifi_disconnect("+Blockly.propc.variableDB_.getName(this.getFieldValue("ID"),Blockly.Variables.NAME_TYPE)+");\n":"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.wx_ip={helpUrl:Blockly.MSG_AWX_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AWX_GET_IP_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("WX").appendField(new Blockly.FieldDropdown([["Station","STA"],["AP","AP"]]),"MODE").appendField("IP address");this.setInputsInline(!0);this.setOutput(!0,"String")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("WX initialize")&&
"heb-wx"!==projectData.board&&this.setWarningText("WARNING: You must use a WX\ninitialize block at the beginning of your program!")}};
Blockly.propc.wx_ip=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();"heb-wx"===projectData.board&&(-1<a.indexOf("Simple WX initialize")?Blockly.propc.wx_init():Blockly.propc.wx_init_adv());return-1<a.indexOf("WX initialize")||"heb-wx"===projectData.board?(a=this.getFieldValue("MODE"),this.disabled||(Blockly.propc.methods_.ip_address_func='char *wifi_ip_string(int __mode) {int __ip[4]; char __result = wifi_ip(__mode, __ip); char *ipStr; if(__result == \'E\') {ipStr = "Error          ";} else {sprint(ipStr, "%d.%d.%d.%d", __ip[0], __ip[1], __ip[2], __ip[3]);} return ipStr;}',Blockly.propc.method_declarations_.ip_address_func=
"char *wifi_ip_string(int __mode);\n"),["wifi_ip_string("+a+")",Blockly.propc.ORDER_NONE]):"// ERROR: WX is not initialized!\n"};
Blockly.Blocks.graph_output={helpUrl:Blockly.MSG_GRAPHING_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GRAPH_OUTPUT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Graph");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField(new Blockly.FieldTextInput("label"),"GRAPH_LABEL0").appendField("value","VALUE_LABEL0");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["graph_dec"]));
this.optionList_=["dec"];this.graph_labels_=[]},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("options",JSON.stringify(this.optionList_));var b="S";"value (X1)"===this.getFieldValue("VALUE_LABEL0")&&(b="X");a.setAttribute("mode",b);return a},domToMutation:function(a){var b=JSON.parse(a.getAttribute("options"));a=a.getAttribute("mode");var c=" (X1); (Y1); (X2); (Y2); (X3); (Y3); (X4); (Y4); (X5); (Y5)".split(";"),d="";this.optionList_=b;for(b=0;b<this.optionList_.length;b++)this.getInput("PRINT"+
b)&&this.removeInput("PRINT"+b),"X"===a&&(d=c[b]),this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldTextInput("label"),"GRAPH_LABEL"+b).appendField("value"+d,"VALUE_LABEL"+b)},setFieldLabels:function(a){for(var b=0,c=" (X1); (Y1); (X2); (Y2); (X3); (Y3); (X4); (Y4); (X5); (Y5)".split(";");this.getFieldValue("VALUE_LABEL"+b);)"X"===a?this.setFieldValue("value"+c[b],"VALUE_LABEL"+b):this.setFieldValue("value","VALUE_LABEL"+b),b++},decompose:function(a){var b=
a.newBlock("graphing_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.optionList_.length;d++){var e=a.newBlock("graph_dec");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}d=0;for(this.graph_labels_=[];this.getFieldValue("GRAPH_LABEL"+d);)this.graph_labels_.push(this.getFieldValue("GRAPH_LABEL"+d)),d++;return b},compose:function(a){var b=0,c="         ".split(" ");for("value (X1)"===this.getFieldValue("VALUE_LABEL0")&&(c=" (X1); (Y1); (X2); (Y2); (X3); (Y3); (X4); (Y4); (X5); (Y5)".split(";"));this.getInput("PRINT"+
b);)this.removeInput("PRINT"+b),b++;b=0;this.optionList_.length=0;for(a=a.getInputTargetBlock("STACK");a;){this.optionList_.push("dec");var d=this.appendValueInput("PRINT"+b).setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField(new Blockly.FieldTextInput("label"),"GRAPH_LABEL"+b).appendField("value"+c[b],"VALUE_LABEL"+b);a.valueConnection_&&d.connection.connect(a.valueConnection_);b++;a=a.nextConnection&&a.nextConnection.targetBlock()}for(b=0;b<this.graph_labels_.length;b++)this.getFieldValue("GRAPH_LABEL"+
b)&&this.setFieldValue(this.graph_labels_[b],"GRAPH_LABEL"+b)},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("PRINT"+b);a.valueConnection_=c&&c.connection.targetConnection;a=a.nextConnection&&a.nextConnection.targetBlock();b++}a=0;for(this.graph_labels_=[];this.getFieldValue("GRAPH_LABEL"+a);)this.graph_labels_.push(this.getFieldValue("GRAPH_LABEL"+a)),a++},onchange:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=null,c=0;c<a.length;c++)"graph_settings"===
a[c].type&&(b=a[c]);if(b){this.workspace&&1>this.optionList_.length?this.setWarningText("Graphing output must have at least one value."):10<this.optionList_.length?this.setWarningText("Graphing output only supports up to 10 values."):this.setWarningText(null);for(c=0;this.getFieldValue("VALUE_LABEL"+c);)c++;1===c%2&&-1<b.getFieldValue("YSETTING").indexOf("XY")&&this.setWarningText("Number of values must be EVEN when graphing an x/y series!")}else this.setWarningText("WARNING: You must use a Graph\ninitialize block at the beginning of your program!")}};
Blockly.Blocks.graphing_container={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("send");this.appendStatementInput("STACK");this.contextMenu=!1}};Blockly.Blocks.graph_dec={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("value");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};
Blockly.propc.graph_output=function(){if(-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Graph initialize")){this.getFieldValue("HANDLE");this.getFieldValue("CONNECTION");for(var a='print("%u',b="",c="",d=0;Blockly.propc.valueToCode(this,"PRINT"+d,Blockly.propc.ORDER_NONE)&&!(a+=",%d",b+=", "+Blockly.propc.valueToCode(this,"PRINT"+d,Blockly.propc.ORDER_NONE||"0"),c+=this.getFieldValue("GRAPH_LABEL"+d),Blockly.propc.valueToCode(this,"PRINT"+(d+1),Blockly.propc.ORDER_NONE)&&9>d&&(c+=
","),d++,10<d););this.disabled||(Blockly.propc.serial_graphing_=!0,Blockly.propc.definitions_.graphing_labels="// GRAPH_LABELS_START:"+c+":GRAPH_LABELS_END //");return a+('\\r", (CNT >> 16)'+b+");\n")}return"// ERROR: Graphing is not initialized!"};
Blockly.Blocks.graph_settings={helpUrl:Blockly.MSG_GRAPHING_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GRAPH_SETTINGS_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Graph initialize  keep").appendField(new Blockly.FieldNumber("40",null,null,1),"XAXIS").appendField("seconds of data").appendField(new Blockly.FieldDropdown([["time series- autoscale","AUTO"],["time series- ranged","FIXED"],["x/y series- autoscale","AUTOXY"],["x/y series- ranged",
"FIXEDXY"]],function(a){this.sourceBlock_.setGraphMode(a)}),"YSETTING");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},setGraphMode:function(a){var b="S";-1<a.indexOf("XY")&&(b="X");this.getInput("RANGES")&&this.removeInput("RANGES");-1<a.indexOf("FIXED")&&this.addRanges(a);a=Blockly.getMainWorkspace().getAllBlocks();for(var c=0;c<a.length;c++)"graph_output"===a[c].type&&a[c].setFieldLabels.call(a[c],b)},addRanges:function(a){"FIXED"===a?this.appendDummyInput("RANGES").appendField("y-axis minimum",
"LABELMIN").appendField(new Blockly.FieldNumber("0",null,null,1),"YMIN").appendField(" maximum","LABELMAX").appendField(new Blockly.FieldNumber("100",null,null,1),"YMAX"):this.appendDummyInput("RANGES").appendField("x-axis min").appendField(new Blockly.FieldNumber("0",null,null,1),"XMIN").appendField(" max").appendField(new Blockly.FieldNumber("100",null,null,1),"XMAX").appendField(" y-axis min").appendField(new Blockly.FieldNumber("0",null,null,1),"YMIN").appendField(" max").appendField(new Blockly.FieldNumber("100",
null,null,1),"YMAX")},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("scaling",this.getFieldValue("YSETTING"));return a},domToMutation:function(a){"FIXED"===a.getAttribute("scaling")&&this.addRanges()}};
Blockly.propc.graph_settings=function(){if(!this.disabled){var a=this.getFieldValue("XAXIS")||"10",b=this.getFieldValue("YMIN")||"0",c=this.getFieldValue("YMAX")||"0",d=this.getFieldValue("YSETTING")||"AUTO",e={AUTO:"S",FIXED:"S",AUTOXY:"X",FIXEDXY:"X",AUTOSC:"O",FIXEDSC:"O"};Blockly.propc.definitions_.graphing_settings="// GRAPH_SETTINGS_START:100,"+a+","+e[d]+","+b+","+c;"X"===e[d]&&(a=this.getFieldValue("XMIN")||"0",b=this.getFieldValue("XMAX")||"0",Blockly.propc.definitions_.graphing_settings+=
","+a+","+b);Blockly.propc.definitions_.graphing_settings+=":GRAPH_SETTINGS_END //"}return""};
Blockly.Blocks.i2c_send={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_I2C_SEND_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("DATA").appendField("i\u00b2c controller send").appendField(new Blockly.FieldNumber("2",null,null,1),"COUNT").appendField("bytes of data");this.appendValueInput("ADDR").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField(new Blockly.FieldDropdown([["MSB","1"],["LSB","-1"]]),"ORDER").appendField("first  to register");
this.appendValueInput("DEVICE").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([["length 1 byte","1"],["length 2 bytes","2"],["length 3 bytes","3"],["length 4 bytes","4"]]),"ADDRCOUNT").setCheck("Number").appendField(" at device address");this.appendDummyInput("PINS");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.pinWarn=null;this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,
b){var c=this.getFieldValue("SDA"),d=this.getFieldValue("SCL");this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").setAlign(Blockly.ALIGN_RIGHT).appendField("SDA").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list),function(a){this.sourceBlock_.checkI2cPins(null,a,null)}),"SDA").appendField("SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list),function(a){this.sourceBlock_.checkI2cPins(null,null,a)}),
"SCL");c&&c===a&&b?this.setFieldValue(b,"SDA"):c&&this.setFieldValue(c,"SDA");d&&d===a&&b?this.setFieldValue(b,"SCL"):d&&this.setFieldValue(d,"SCL")},mutationToDom:function(){var a=document.createElement("mutation");this.pinWarn&&a.setAttribute("pinwarn",this.pinWarn);return a},domToMutation:function(a){this.pinWarn=a=a.getAttribute("pinwarn")||null;this.setWarningText(a)},checkI2cPins:function(a,b,c){b=b||this.getFieldValue("SDA");c=c||this.getFieldValue("SCL");this.pinWarn=null;if(null===a){a=Blockly.getMainWorkspace().getAllBlocks();
for(var d=0;d<a.length;d++){var e=a[d].checkI2cPins;if(e){e=a[d].getFieldValue("SDA");var f=a[d].getFieldValue("SCL");(b===c||e===b&&f!==c||e!==b&&f===c||e===c&&f!==b||f===b&&e!==c)&&a[d]!==this&&"i2c_busy"!==a[d].type&&(this.pinWarn="WARNING: Both SDA and SCL must be equal to \nSDA and SCL on other blocks if sharing \nan i\u00b2c bus, or both must be different \nif on seperate i\u00b2c busses, and SDA and SCL \nmust be different from each other!")}}for(d=0;d<a.length;d++)(e=a[d].checkI2cPins)&&e.call(a[d],
this.pinWarn?!0:!1),(e=a[d].setSdaPins)&&b!==this.getFieldValue("SDA")&&e.call(a[d],b,this.getFieldValue("SDA")),(e=a[d].setSclPins)&&c!==this.getFieldValue("SCL")&&e.call(a[d],c,this.getFieldValue("SCL"))}else!0===a?this.pinWarn="WARNING: Both SDA and SCL must be equal to \nSDA and SCL on other blocks if sharing \nan i\u00b2c bus, or both must be different \nif on seperate i\u00b2c busses, and SDA and SCL \nmust be different from each other!":!1===a&&(this.pinWarn=null);this.setWarningText(this.pinWarn)}};
Blockly.propc.i2c_send=function(){for(var a=this.pinWarn?"// "+this.pinWarn.replace(/\n/g,""):"",b=this.getFieldValue("SDA"),c="0",d=this.getFieldValue("SCL"),e=this.getFieldValue("ORDER"),f=this.getFieldValue("ADDRCOUNT"),g=Blockly.propc.valueToCode(this,"DATA",Blockly.propc.ORDER_NONE)||"0",h=this.getFieldValue("COUNT")||"1",m=Blockly.propc.valueToCode(this,"ADDR",Blockly.propc.ORDER_NONE)||"0",l=Blockly.propc.valueToCode(this,"DEVICE",Blockly.propc.ORDER_NONE)||"0",n=Blockly.getMainWorkspace().getAllBlocks(),
p=0;p<n.length;p++)"i2c_mode"===n[p].type&&n[p].getFieldValue("SCL")===d&&(c=n[p].getFieldValue("MODE"));this.disabled||(p=n="",-1===profile["default"].digital.toString().indexOf(b+","+b)&&(n="MY_"),-1===profile["default"].digital.toString().indexOf(d+","+d)&&(p="MY_"),Blockly.propc.definitions_["i2c_init"+b]="i2c *i2c"+b+";",Blockly.propc.setups_["i2c_init"+b]="i2c"+b+" = i2c_newbus("+p+d+", "+n+b+", "+c+");");c="";d="Number";(n=this.getInput("DATA").connection.targetBlock())&&(n=n.outputConnection.check_)&&
-1<n.toString().indexOf("String")&&(d="String");if("Number"===d){Blockly.propc.definitions_.i2c_Buf="unsigned char i2cBuf[4] = {0, 0, 0, 0};";switch(h){default:case "4":c+="i2cBuf[3] = ("+g+" >> 24) & 255; ";case "3":c+="i2cBuf[2] = ("+g+" >> 16) & 255; ";case "2":c+="i2cBuf[1] = ("+g+" >> 8) & 255; ";case "1":c+="i2cBuf[0] = ("+g+") & 255;"}g="i2cBuf"}return a=a+c+("i2c_out(i2c"+b+", "+l+" & 0x7F, "+m)+(", "+e.replace(/1/g,"")+f+", "+g+", "+h+");\n")};
Blockly.Blocks.i2c_receive={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_I2C_RECEIVE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("ADDR").setCheck(null).appendField("i\u00b2c controller receive").appendField(new Blockly.FieldNumber("2",null,null,1),"COUNT").appendField("bytes").appendField(new Blockly.FieldDropdown([["MSB","1"],["LSB","-1"]]),"ORDER").appendField("first  from register");this.appendValueInput("DEVICE").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldDropdown([["length 1 byte",
"1"],["length 2 bytes","2"],["length 3 bytes","3"],["length 4 bytes","4"]]),"ADDRCOUNT").setCheck(null).appendField(" at device address");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("as").appendField(new Blockly.FieldDropdown([["Decimal","int"],["String","str"]]),"TYPE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),"VAR");this.appendDummyInput("PINS");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null);this.pinWarn=null;this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("SDA"),d=this.getFieldValue("SCL"),e=this.getFieldValue("COUNT");this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").setAlign(Blockly.ALIGN_RIGHT).appendField("SDA").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list),function(a){this.sourceBlock_.checkI2cPins(null,a,null)}),"SDA").appendField("SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list),
function(a){this.sourceBlock_.checkI2cPins(null,null,a)}),"SCL");this.setFieldValue(e,"COUNT");c&&c===a&&b?this.setFieldValue(b,"SDA"):c&&this.setFieldValue(c,"SDA");d&&d===a&&b?this.setFieldValue(b,"SCL"):d&&this.setFieldValue(d,"SCL")},mutationToDom:Blockly.Blocks.i2c_send.mutationToDom,domToMutation:Blockly.Blocks.i2c_send.domToMutation,checkI2cPins:Blockly.Blocks.i2c_send.checkI2cPins};
Blockly.propc.i2c_receive=function(){for(var a=this.pinWarn?"// "+this.pinWarn.replace(/\n/g,""):"",b=this.getFieldValue("SDA"),c="0",d=this.getFieldValue("SCL"),e=this.getFieldValue("ORDER"),f=this.getFieldValue("ADDRCOUNT"),g=this.getFieldValue("TYPE"),h=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),m=this.getFieldValue("COUNT")||"1",l=Blockly.propc.valueToCode(this,"ADDR",Blockly.propc.ORDER_NONE)||"0",n=Blockly.propc.valueToCode(this,"DEVICE",Blockly.propc.ORDER_NONE)||
"0",p=Blockly.getMainWorkspace().getAllBlocks(),q=0;q<p.length;q++)"i2c_mode"===p[q].type&&p[q].getFieldValue("SCL")===d&&(c=p[q].getFieldValue("MODE"));this.disabled||(q=p="",-1===profile["default"].digital.toString().indexOf(b+","+b)&&(p="MY_"),-1===profile["default"].digital.toString().indexOf(d+","+d)&&(q="MY_"),Blockly.propc.definitions_["i2c_init"+b]="i2c *i2c"+b+";",Blockly.propc.setups_["i2c_init"+b]="i2c"+b+" = i2c_newbus("+q+d+", "+p+b+", "+c+");");c=h+" = ";if("str"===g)Blockly.propc.vartype_[h]=
"char *",c="";else{Blockly.propc.definitions_.i2c_Buf="unsigned char i2cBuf[4] = {0, 0, 0, 0};";h="i2cBuf";c+="(";switch(m){case "4":c+="(i2cBuf[3] << 24) | ";case "3":c+="(i2cBuf[2] << 16) | ";case "2":c+="(i2cBuf[1] << 8) | ";case "1":c+="i2cBuf[0]"}c+=");\n"}a=a+("i2c_in(i2c"+b+", "+n+" & 0x7F, "+l)+(", "+e.replace(/1/g,"")+f+", "+h+", "+m+");\n");return a+c};
Blockly.Blocks.i2c_mode={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_I2C_MODE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("PINS");this.warnFlag=0;this.pinWarn=null;this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("SCL"),d=this.getFieldValue("MODE");this.getInput("PINS")&&this.removeInput("PINS");
this.appendDummyInput("PINS").appendField("i\u00b2c controller set mode").appendField(new Blockly.FieldDropdown([["normal (open-collector)","0"],["push-pull","1"]]),"MODE").appendField("SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"SCL");this.setFieldValue(d,"MODE");c&&c===a&&b?this.setFieldValue(b,"SCL"):c&&this.setFieldValue(c,"SCL")},onchange:function(a){if(a&&(a.oldXml||a.type===Blockly.Events.CREATE||"SCL"===a.name||"SDA"===a.name||a.blockId===this.id||
0<this.warnFlag)){a=Blockly.getMainWorkspace().getAllBlocks();this.warnFlag--;var b=null;this.pinWarn="WARNING: SCL on this block must match SCL on at least one i\u00b2c receieve or i\u00b2c send block!";for(var c=0;c<a.length;c++){if("i2c_send"===a[c].type||"i2c_receive"===a[c].type)a[c].getFieldValue("SCL")===this.getFieldValue("SCL")&&(b&&b!==a[c].getFieldValue("SDA")?(this.pinWarn="WARNING: Both SDA and SCL must match SDA and SCL on other i\u00b2c blocks if sharing ",this.pinWarn+="an i\u00b2c bus, or both must be different if on seperate i\u00b2c busses!",
b="-1"):(b=a[c].getFieldValue("SDA"),this.pinWarn=null)),a[c].getFieldValue("SCL")===a[c].getFieldValue("SDA")&&(this.pinWarn="WARNING: SDA and SCL cannot be on the same pin!",c=a.length+1);this.setWarningText(this.pinWarn)}}}};Blockly.propc.i2c_mode=function(){return""};
Blockly.Blocks.i2c_busy={helpUrl:Blockly.MSG_PROTOCOLS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_I2C_BUSY_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("DEVICE").setCheck("Number").appendField("i\u00b2c controller is device at address");this.appendDummyInput("PINS");this.setInputsInline(!0);this.setOutput(!0,"Number");this.pinWarn=null;this.updateConstMenu()},updateConstMenu:Blockly.Blocks.shift_in.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("SCL");
this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("busy  SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"SCL");c&&c===a&&b?this.setFieldValue(b,"SCL"):c&&this.setFieldValue(c,"SCL")},mutationToDom:Blockly.Blocks.i2c_send.mutationToDom,domToMutation:Blockly.Blocks.i2c_send.domToMutation,onchange:Blockly.Blocks.i2c_mode.onchange};
Blockly.propc.i2c_busy=function(){var a=Blockly.propc.valueToCode(this,"DEVICE",Blockly.propc.ORDER_NONE)||"0";if(this.pinWarn)return"// "+this.pinWarn;for(var b=Blockly.getMainWorkspace().getAllBlocks(),c="0",d=0;d<b.length;d++)"i2c_send"!==b[d].type&&"i2c_receive"!==b[d].type||b[d].getFieldValue("SCL")!==this.getFieldValue("SCL")||(c=b[d].getFieldValue("SDA"));return["i2c_busy(i2c"+c+", "+a+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.string_scan_multiple={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_SCAN_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("scan string").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"HANDLE");this.setMutator(new Blockly.Mutator(["string_scan_dec","string_scan_hex","string_scan_bin","string_scan_float","string_scan_char"]));this.optionList_=["dec","char"];this.updateShape_();
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setWarningText(null);this.ser_pins=[]},mutationToDom:Blockly.Blocks.serial_scan_multiple.mutationToDom,domToMutation:Blockly.Blocks.serial_scan_multiple.domToMutation,decompose:Blockly.Blocks.serial_scan_multiple.decompose,compose:Blockly.Blocks.serial_scan_multiple.compose,saveConnections:Blockly.Blocks.serial_scan_multiple.saveConnections,updateShape_:Blockly.Blocks.serial_scan_multiple.updateShape_,updateSerPin:function(){}};
Blockly.Blocks.string_scan_container={init:function(){this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("scan string for");this.appendStatementInput("STACK");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["from beginning",""],["after text","AfterStr"]]),"SCAN_START");this.contextMenu=!1}};Blockly.Blocks.string_scan_str=Blockly.Blocks.console_print_str;Blockly.Blocks.string_scan_dec=Blockly.Blocks.console_print_dec;Blockly.Blocks.string_scan_hex=Blockly.Blocks.console_print_hex;
Blockly.Blocks.string_scan_bin=Blockly.Blocks.console_print_bin;Blockly.Blocks.string_scan_float=Blockly.Blocks.console_print_float;Blockly.Blocks.string_scan_char=Blockly.Blocks.console_print_char;
Blockly.propc.string_scan_multiple=function(){var a=Blockly.propc.valueToCode(this,"SCAN_AFTER",Blockly.propc.ORDER_NONE)||"";this.scanAfter&&3<this.scanAfter.length&&a&&(a+=", ");var b="sscan"+(""!==a?this.scanAfter:"");b+="("+this.getFieldValue("HANDLE")+", "+a+'"';for(var c=a="",d=0;this.getFieldValue("CPU"+d);)this.getFieldValue("TYPE"+d).includes("store decimal number")?b+="%d":this.getFieldValue("TYPE"+d).includes("store ASCII character")?b+="%c":this.getFieldValue("TYPE"+d).includes("store hexadecimal number")?
b+="%x":this.getFieldValue("TYPE"+d).includes("store binary number")?b+="%b":"in"===this.getFieldValue("TYPE"+d)&&(b+="%f"),"in"===this.getFieldValue("TYPE"+d)?(a+=", &__fpBuf"+d,c+=Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+d),Blockly.Variables.NAME_TYPE),c+=" = (int) (__fpBuf"+d+" * "+this.getFieldValue("MULT"+d)+");\n",this.disabled||(Blockly.propc.global_vars_["floatPointScanBuffer"+d]="float __fpBuf"+d+";")):a+=", &"+Blockly.propc.variableDB_.getName(this.getFieldValue("CPU"+
d),Blockly.Variables.NAME_TYPE),d++;return b+('"'+a+");\n"+c)};
Blockly.Blocks.string_sprint_multiple={helpUrl:Blockly.MSG_STRINGS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_STRING_SPRINT_MULTIPLE_TOOLTIP);this.setColour(colorPalette.getColor("math"));this.appendDummyInput().appendField("create string from");this.appendValueInput("PRINT0").setAlign(Blockly.ALIGN_RIGHT).setCheck("String").appendField("text");this.appendValueInput("PRINT1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("decimal number");this.appendDummyInput("NEWLINE").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VAR");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!1);this.setMutator(new Blockly.Mutator("string_scan_str string_scan_dec string_scan_hex string_scan_bin string_scan_float string_scan_char".split(" ")));this.optionList_=["str","dec"];this.specDigits_=!1;this.setWarningText(null)},mutationToDom:Blockly.Blocks.console_print_multiple.mutationToDom,domToMutation:Blockly.Blocks.console_print_multiple.domToMutation,decompose:Blockly.Blocks.console_print_multiple.decompose,
compose:Blockly.Blocks.console_print_multiple.compose,saveConnections:Blockly.Blocks.console_print_multiple.saveConnections};Blockly.propc.string_sprint_multiple=Blockly.propc.console_print_multiple;Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.controls_repeat={init:function(){var a="repeat";"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_CONTROL_HELPURL),this.setTooltip(Blockly.MSG_S3_SCRIBBLER_LOOP_TOOLTIP),a="loop"):(this.setHelpUrl(Blockly.MSG_CONTROL_HELPURL),this.setTooltip(Blockly.MSG_CONTROLS_REPEAT_TOOLTIP));this.setColour(colorPalette.getColor("programming"));var b=new Blockly.FieldDropdown([["forever","FOREVER"],["x times","TIMES"],["until","UNTIL"],["while","WHILE"]],function(a){this.sourceBlock_.updateShape_(a)});
this.appendDummyInput().appendField(a);this.appendDummyInput("REPEAT").appendField(b,"TYPE");this.appendStatementInput("DO").appendField(Blockly.LANG_CONTROLS_REPEAT_INPUT_DO);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("TYPE");a.setAttribute("type",b);return a},domToMutation:function(a){a=a.getAttribute("type");this.updateShape_(a)},updateShape_:function(a){var b=this.getInput("TIMES");
"TIMES"===a?b||(this.appendValueInput("TIMES").setCheck("Number"),this.moveInputBefore("TIMES","REPEAT")):b&&this.removeInput("TIMES");b=this.getInput("REPEAT_CONDITION");"WHILE"===a||"UNTIL"===a?b||(this.appendValueInput("REPEAT_CONDITION").setCheck("Number"),this.moveInputBefore("REPEAT_CONDITION","DO")):b&&this.removeInput("REPEAT_CONDITION")}};
Blockly.propc.controls_repeat=function(){var a=this.getFieldValue("TYPE"),b=Blockly.propc.statementToCode(this,"DO");Blockly.propc.INFINITE_LOOP_TRAP&&(b=Blockly.propc.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.propc.ORDER_UNARY_PREFIX,d="";switch(a){case "FOREVER":d="while(1) {\n"+b+"}\n";break;case "TIMES":d="for (int __n = 0; __n < "+(Blockly.propc.valueToCode(this,"TIMES",c)||"0")+"; __n++) {\n"+b+"}\n";break;case "WHILE":a=Blockly.propc.valueToCode(this,"REPEAT_CONDITION",
c)||"0";d="while ("+a+") {\n"+b+"}\n";break;case "UNTIL":a=Blockly.propc.valueToCode(this,"REPEAT_CONDITION",c)||"0",d="while (!("+a+")) {\n"+b+"}\n"}return d};
Blockly.Blocks.controls_if={category:Blockly.LANG_CATEGORY_CONTROLS,init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_CONTROL_HELPURL):this.setHelpUrl(Blockly.MSG_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_CONTROLS_IF_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendValueInput("IF0").setCheck("Number").appendField(Blockly.LANG_CONTROLS_IF_MSG_IF);this.appendStatementInput("DO0").appendField(Blockly.LANG_CONTROLS_IF_MSG_THEN);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));this.elseCount_=this.elseifCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var a=document.createElement("mutation");this.elseifCount_&&a.setAttribute("elseif",this.elseifCount_);this.elseCount_&&a.setAttribute("else",1);return a},domToMutation:function(a){this.elseifCount_=window.parseInt(a.getAttribute("elseif"),10);
this.elseCount_=window.parseInt(a.getAttribute("else"),10);for(a=1;a<=this.elseifCount_;a++)this.appendValueInput("IF"+a).setCheck("Number").appendField(Blockly.LANG_CONTROLS_IF_MSG_ELSEIF),this.appendStatementInput("DO"+a).appendField(Blockly.LANG_CONTROLS_IF_MSG_THEN);this.elseCount_&&this.appendStatementInput("ELSE").appendField(Blockly.LANG_CONTROLS_IF_MSG_ELSE)},decompose:function(a){var b=a.newBlock("controls_if_if");b.initSvg();for(var c=b.getInput("STACK").connection,d=1;d<=this.elseifCount_;d++){var e=
a.newBlock("controls_if_elseif");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}this.elseCount_&&(a=a.newBlock("controls_if_else"),a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){this.elseCount_&&this.getInput("ELSE")&&this.removeInput("ELSE");this.elseCount_=0;for(var b=this.elseifCount_;0<b;b--)this.removeInput("IF"+b),this.removeInput("DO"+b);this.elseifCount_=0;for(a=a.getInputTargetBlock("STACK");a;){switch(a.type){case "controls_if_elseif":this.elseifCount_++;
b=this.appendValueInput("IF"+this.elseifCount_).setCheck("Number").appendField(Blockly.LANG_CONTROLS_IF_MSG_ELSEIF);var c=this.appendStatementInput("DO"+this.elseifCount_);c.appendField(Blockly.LANG_CONTROLS_IF_MSG_THEN);a.valueConnection_&&b.connection.connect(a.valueConnection_);a.statementConnection_&&c.connection.connect(a.statementConnection_);break;case "controls_if_else":this.elseCount_++;b=this.appendStatementInput("ELSE");b.appendField(Blockly.LANG_CONTROLS_IF_MSG_ELSE);a.statementConnection_&&
b.connection.connect(a.statementConnection_);break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=1;a;){switch(a.type){case "controls_if_elseif":var c=this.getInput("IF"+b),d=this.getInput("DO"+b);a.valueConnection_=c&&c.connection.targetConnection;a.statementConnection_=d&&d.connection.targetConnection;b++;break;case "controls_if_else":d=this.getInput("ELSE");a.statementConnection_=d&&
d.connection.targetConnection;break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Blocks.controls_if_if={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(Blockly.LANG_CONTROLS_IF_IF_TITLE_IF);this.appendStatementInput("STACK");this.setTooltip(Blockly.LANG_CONTROLS_IF_IF_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_elseif={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(Blockly.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setTooltip(Blockly.LANG_CONTROLS_IF_ELSEIF_TOOLTIP);this.contextMenu=!1}};
Blockly.Blocks.controls_if_else={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(Blockly.LANG_CONTROLS_IF_ELSE_TITLE_ELSE);this.setPreviousStatement(!0,"Block");this.setTooltip(Blockly.LANG_CONTROLS_IF_ELSE_TOOLTIP);this.contextMenu=!1}};
Blockly.propc.controls_if=function(){var a=0,b=Blockly.propc.valueToCode(this,"IF"+a,Blockly.propc.ORDER_NONE)||"0",c=Blockly.propc.statementToCode(this,"DO"+a),d="if ("+b+") {\n"+c+"}\n";for(a=1;a<=this.elseifCount_;a++)b=Blockly.propc.valueToCode(this,"IF"+a,Blockly.propc.ORDER_NONE)||"0",c=Blockly.propc.statementToCode(this,"DO"+a),d+="else if ("+b+") {\n"+c+"}";this.elseCount_&&(c=Blockly.propc.statementToCode(this,"ELSE"),d+="else {\n"+c+"}\n");return d+"\n"};
Blockly.Blocks.control_repeat_for_loop={init:function(){var a="repeat";"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_CONTROL_HELPURL),this.setTooltip(Blockly.MSG_S3_SCRIBBLER_LIMITED_LOOP_TOOLTIP),a="loop"):(this.setHelpUrl(Blockly.MSG_CONTROL_HELPURL),this.setTooltip(Blockly.MSG_CONTROL_REPEAT_FOR_LOOP_TOOLTIP));this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField(a).appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VAR");this.appendValueInput("START").setCheck("Number").appendField("from");this.appendValueInput("END").setCheck("Number").appendField(new Blockly.FieldDropdown([["thru","= "],["to"," "]]),"EQ");this.appendValueInput("STEP").setCheck("Number").appendField("by");this.appendStatementInput("DO").appendField("do");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setInputsInline(!0)}};
Blockly.propc.control_repeat_for_loop=function(){var a=Blockly.propc.valueToCode(this,"START",Blockly.propc.ORDER_NONE)||"1",b=this.getFieldValue("EQ")+Blockly.propc.valueToCode(this,"END",Blockly.propc.ORDER_NONE)||"10",c=Blockly.propc.valueToCode(this,"STEP",Blockly.propc.ORDER_NONE)||"1",d=Blockly.propc.statementToCode(this,"DO"),e=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);d=c+")) {\n"+d+"\n}";b+="; "+e;e="for ("+e+" = "+a+"; "+e;isNaN(parseFloat(a))||
!isFinite(a)||isNaN(parseFloat(b))||!isFinite(b)?isNaN(parseFloat(c))||!isFinite(c)?e+=" <"+b+" += abs("+d:0>Number(c)?e+=" >"+b+" += ("+d:0<Number(c)?e+=" <"+b+" += ("+d:0===Number(c)&&(e='// ERROR: Your "step" size cannot be 0 (zero)!\n'):e=isNaN(parseFloat(c))||!isFinite(c)?Number(a)<Number(b)?e+(" <"+b+" += abs("+d):e+(" >"+b+" -= abs("+d):Number(a)<Number(b)?e+(" <"+b+" += ("+d):e+(" >"+b+" += ("+d);return e=e.replace(/ \+= \(-1\)/g,"--").replace(/ \+= \(1\)/g,"++")};
Blockly.Blocks.controls_return={helpUrl:Blockly.MSG_CONTROL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONTROLS_RETURN_TOOLTIP);this.appendDummyInput().appendField("return");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setColour(colorPalette.getColor("programming"))}};Blockly.propc.controls_return=function(){return"return;"};
Blockly.Blocks.controls_break={helpUrl:Blockly.MSG_CONTROL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CONTROLS_BREAK_TOOLTIP);this.appendDummyInput().appendField("break");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setColour(colorPalette.getColor("programming"))}};Blockly.propc.controls_break=function(){return"break;"};
Blockly.Blocks.controls_select={category:Blockly.LANG_CATEGORY_CONTROLS,init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_CONTROL_HELPURL):this.setHelpUrl(Blockly.MSG_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_CONTROLS_SELECT_TOOLTIP);this.setColour(colorPalette.getColor("programming"));this.appendValueInput("SWITCH").appendField("switch");this.appendValueInput("SEL1").setCheck("Number").appendField("case");this.appendStatementInput("CASE1").appendField("do (then break").appendField(new Blockly.FieldCheckbox("TRUE"),
"BREAK1").appendField(")");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["controls_select_case","controls_select_default"]));this.elseifCount_=1;this.elseCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var a=document.createElement("mutation");this.elseifCount_&&a.setAttribute("case",this.elseifCount_);this.elseCount_&&a.setAttribute("default",1);return a},domToMutation:function(a){this.elseifCount_=window.parseInt(a.getAttribute("case"),
10);this.elseCount_=window.parseInt(a.getAttribute("default"),10);for(a=1;a<=this.elseifCount_;a++)this.getInput("SEL"+a)||(this.appendValueInput("SEL"+a).setCheck("Number").appendField("case"),this.appendStatementInput("CASE"+a).appendField("do (then break").appendField(new Blockly.FieldCheckbox("TRUE"),"BREAK"+a).appendField(")"));this.elseCount_&&this.appendStatementInput("DEFAULT").appendField("default")},decompose:function(a){var b=a.newBlock("controls_select_select");b.initSvg();for(var c=b.getInput("STACK").connection,
d=1;d<=this.elseifCount_;d++){var e=a.newBlock("controls_select_case");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}this.elseCount_&&(a=a.newBlock("controls_select_default"),a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){this.elseCount_&&this.removeInput("DEFAULT");this.elseCount_=0;for(var b=this.elseifCount_;0<b;b--)this.getInput("SEL"+b)&&this.removeInput("SEL"+b),this.getInput("CASE"+b)&&this.removeInput("CASE"+b);this.elseifCount_=0;for(a=a.getInputTargetBlock("STACK");a;){switch(a.type){case "controls_select_case":this.elseifCount_++;
b=this.appendValueInput("SEL"+this.elseifCount_).setCheck("Number").appendField("case");var c=this.appendStatementInput("CASE"+this.elseifCount_);c.appendField("do (then break").appendField(new Blockly.FieldCheckbox("TRUE"),"BREAK"+this.elseifCount_).appendField(")");a.valueConnection_&&b.connection.connect(a.valueConnection_);a.statementConnection_&&c.connection.connect(a.statementConnection_);break;case "controls_select_default":this.elseCount_++;b=this.appendStatementInput("DEFAULT");b.appendField("default");
a.statementConnection_&&b.connection.connect(a.statementConnection_);break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=1;a;){switch(a.type){case "controls_select_case":var c=this.getInput("SEL"+b),d=this.getInput("CASE"+b);a.valueConnection_=c&&c.connection.targetConnection;a.statementConnection_=d&&d.connection.targetConnection;b++;break;case "controls_select_default":d=this.getInput("DEFAULT");
a.statementConnection_=d&&d.connection.targetConnection;break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Blocks.controls_select_select={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("switch");this.appendStatementInput("STACK");this.setInputsInline(!1);this.contextMenu=!1}};
Blockly.Blocks.controls_select_case={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("case");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.contextMenu=!1}};Blockly.Blocks.controls_select_default={init:function(){this.setColour(colorPalette.getColor("programming"));this.appendDummyInput().appendField("default");this.setPreviousStatement(!0,"Block");this.contextMenu=!1}};
Blockly.propc.controls_select=function(){var a;var b="";var c="switch("+(Blockly.propc.valueToCode(this,"SWITCH",Blockly.propc.ORDER_NONE)||"0")+") {\n";if(!0===b||"TRUE"===b||"true"===b)c+="break;\n";for(a=1;a<=this.elseifCount_;a++){b=Blockly.propc.valueToCode(this,"SEL"+a,Blockly.propc.ORDER_NONE)||"0";var d=Blockly.propc.statementToCode(this,"CASE"+a);c+="case "+b+":\n"+d;b=this.getFieldValue("BREAK"+a);if(!0===b||"TRUE"===b||"true"===b)c+="break;\n"}this.elseCount_&&(d=Blockly.propc.statementToCode(this,
"DEFAULT"),c+="default: \n"+d+"\n");return c+"}\n"};Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.make_pin={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_IO_HELPURL):this.setHelpUrl(Blockly.MSG_PINS_HELPURL);this.setTooltip(Blockly.MSG_MAKE_PIN_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.appendDummyInput().appendField("make PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PIN").appendField(new Blockly.FieldDropdown([["high","HIGH"],
["low","LOW"],["toggle","TOGGLE"],["input","INPUT"],["reverse","REVERSE"]]),"ACTION")}};Blockly.propc.make_pin=function(){var a=this.getFieldValue("PIN");switch(this.getFieldValue("ACTION")){case "HIGH":return"high("+a+");\n";case "LOW":return"low("+a+");\n";case "TOGGLE":return"toggle("+a+");\n\tset_direction("+a+", 1);\n";case "INPUT":return"set_direction("+a+", 0);\n";case "REVERSE":return"reverse("+a+");\n"}};
Blockly.Blocks.make_pin_input={helpUrl:Blockly.MSG_PINS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MAKE_PIN_INPUT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.appendDummyInput("").appendField("make PIN");this.appendValueInput("PIN").setCheck("Number").appendField("A,"+profile["default"].digital.toString(),"RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);this.appendDummyInput("ACTION").appendField(new Blockly.FieldDropdown([["high",
"HIGH"],["low","LOW"],["toggle","TOGGLE"],["input","INPUT"],["reverse","REVERSE"]]),"ACTION")}};Blockly.propc.make_pin_input=function(){var a=Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||0;switch(this.getFieldValue("ACTION")){case "HIGH":return"high("+a+");\n";case "LOW":return"low("+a+");\n";case "TOGGLE":return"toggle("+a+");\n\tset_direction("+a+", 1);\n";case "INPUT":return"set_direction("+a+", 0);\n";case "REVERSE":return"reverse("+a+");\n"}};
Blockly.Blocks.check_pin={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_IO_HELPURL):this.setHelpUrl(Blockly.MSG_PINS_HELPURL);this.setTooltip(Blockly.MSG_CHECK_PIN_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput("").appendField("check PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PIN");this.setOutput(!0,"Number")}};
Blockly.propc.check_pin=function(){return["input("+this.getFieldValue("PIN")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.check_pin_input={helpUrl:Blockly.MSG_PINS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_CHECK_PIN_INPUT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendValueInput("PIN").appendField("check PIN").setCheck("Number").appendField("A,"+profile["default"].digital.toString(),"RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);this.setOutput(!0,"Number");this.setInputsInline(!0)}};
Blockly.propc.check_pin_input=function(){return["input("+(Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_UNARY_PREFIX)||"0")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.set_pins={helpUrl:Blockly.MSG_PINS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SET_PINS_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);for(var a=[],b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)a.push([b.toString(),b.toString()]);var c=[];for(b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)c.push([b.toString(),b.toString()]);
this.appendDummyInput("").appendField("set the").appendField(new Blockly.FieldDropdown([["states","STATE"],["directions","DIRECTION"]],function(a){this.sourceBlock_.updateShape_({ACTION:a})}),"ACTION").appendField("from lowest PIN").appendField(new Blockly.FieldDropdown(c,function(a){this.sourceBlock_.updateShape_({START_PIN:a})}),"START_PIN").appendField("to highest PIN").appendField(new Blockly.FieldDropdown(a,function(a){this.sourceBlock_.updateShape_({PIN_COUNT:a})}),"PIN_COUNT");this.appendDummyInput("PINS").appendField("values:").appendField("P0:").appendField(new Blockly.FieldDropdown([["HIGH",
"1"],["LOW","0"]]),"P0")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("ACTION");a.setAttribute("action",b);b=this.getFieldValue("PIN_COUNT");a.setAttribute("pin_count",b);b=this.getFieldValue("START_PIN");a.setAttribute("start_pin",b);return a},domToMutation:function(a){var b=a.getAttribute("action"),c=a.getAttribute("pin_count");a=a.getAttribute("start_pin");this.updateShape_({ACTION:b,PIN_COUNT:c,START_PIN:a})},updateShape_:function(a){for(var b=[],c=0;32>
c;c++)b.push(this.getFieldValue("P"+c));var d=a.ACTION;void 0===a.ACTION&&(d=this.getFieldValue("ACTION"));var e=a.PIN_COUNT;void 0===a.PIN_COUNT&&(e=this.getFieldValue("PIN_COUNT"));var f=a.START_PIN;void 0===a.START_PIN&&(f=this.getFieldValue("START_PIN"));e=Number(e);f=Number(f);this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("Values:");a=this.getInput("PINS");for(c=0;c<e-f+1;c++){var g=f+c;"STATE"===d?a.appendField("P"+g+":").appendField(new Blockly.FieldDropdown([["HIGH",
"1"],["LOW","0"]]),"P"+g):"DIRECTION"===d&&a.appendField("P"+g+":").appendField(new Blockly.FieldDropdown([["OUT","1"],["IN","0"]]),"P"+g)}for(c=0;32>c;c++)this.getField("P"+c)&&null!==b[c]&&this.setFieldValue(b[c],"P"+c)}};
Blockly.propc.set_pins=function(){var a="",b=this.getFieldValue("ACTION"),c=Number(this.getFieldValue("PIN_COUNT")),d=Number(this.getFieldValue("START_PIN"));"STATE"===b?a="set_outputs(":"DIRECTION"===b&&(a="set_directions(");a=a+c+", "+d;a+=", 0b";for(b=c;b>=d;b--)a+=this.getFieldValue("P"+b);return a+");\n"};
Blockly.Blocks.get_pins={helpUrl:Blockly.MSG_PINS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GET_PINS_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number");for(var a=[],b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)a.push([b.toString(),b.toString()]);var c=[];for(b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)c.push([b.toString(),
b.toString()]);this.appendDummyInput("").appendField("get the").appendField(new Blockly.FieldDropdown([["states","STATE"],["directions","DIRECTION"]]),"ACTION").appendField("from lowest PIN").appendField(new Blockly.FieldDropdown(c),"START_PIN").appendField("to highest PIN").appendField(new Blockly.FieldDropdown(a),"PIN_COUNT")}};
Blockly.propc.get_pins=function(){var a="",b=this.getFieldValue("ACTION"),c=Number(this.getFieldValue("PIN_COUNT")),d=Number(this.getFieldValue("START_PIN"));"STATE"===b?a="get_states(":"DIRECTION"===b&&(a="get_outputs(");a=a+c+", "+d;a+=")";return[a,Blockly.propc.ORDER_NONE]};
Blockly.Blocks.set_pins_binary={helpUrl:Blockly.MSG_PINS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SET_PINS_BINARY_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);for(var a=[],b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)a.push([b.toString(),b.toString()]);var c=[];for(b=profile["default"].contiguous_pins_start;b<=profile["default"].contiguous_pins_end;b++)c.push([b.toString(),
b.toString()]);this.appendValueInput("VALUE").appendField("set the").appendField(new Blockly.FieldDropdown([["states","STATE"],["directions","DIRECTION"]]),"ACTION").appendField("from lowest PIN").appendField(new Blockly.FieldDropdown(c),"START_PIN").appendField("to highest PIN").appendField(new Blockly.FieldDropdown(a),"PIN_COUNT").appendField("using bits from").setCheck("Number")}};
Blockly.propc.set_pins_binary=function(){var a="",b=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"0b0000",c=this.getFieldValue("ACTION"),d=Number(this.getFieldValue("PIN_COUNT")),e=Number(this.getFieldValue("START_PIN"));"STATE"===c?a="set_outputs(":"DIRECTION"===c&&(a="set_directions(");a=a+d+", "+e;return a+=", "+b+");\n"};
Blockly.Blocks.base_freqout={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_BASE_FREQOUT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("frequency PIN","DURATION");this.appendValueInput("DURATION").appendField("duration (ms)").setCheck("Number");this.appendValueInput("FREQUENCY").appendField("frequency (Hz)").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},addPinMenu:function(a,b){this.appendDummyInput("SET_PIN").appendField(a,
"LABEL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["other","other"]]),function(a){this.sourceBlock_.setToOther(a,b)}),"PIN");this.moveBefore=b;this.otherPin=!1},setToOther:function(a,b){if("other"===a){this.otherPin=!0;var c=this.getFieldValue("LABEL");this.getInput("SET_PIN")&&this.removeInput("SET_PIN");this.appendValueInput("PIN").appendField(c).setCheck("Number").appendField("A,"+profile["default"].digital.toString(),"RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);
if(b)this.moveInputBefore("PIN",b);else{var d=this;setTimeout(function(){d.render()},200)}}},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("otherpin",this.otherPin);return a},domToMutation:function(a){"true"===a.getAttribute("otherpin")&&this.setToOther("other",this.moveBefore)}};
Blockly.propc.base_freqout=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"DURATION",Blockly.propc.ORDER_ATOMIC)||1E3,c=Blockly.propc.valueToCode(this,"FREQUENCY",Blockly.propc.ORDER_ATOMIC)||3E3;return"freqout("+a+", "+b+", "+c+");\n"};
Blockly.Blocks.base_count={helpUrl:Blockly.MSG_ANALOG_PULSE_IN_OUT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_BASE_COUNT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("count pulses PIN","DURATION");this.appendValueInput("DURATION").appendField("duration (ms)").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation,
addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};Blockly.propc.base_count=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"DURATION",Blockly.propc.ORDER_ATOMIC)||"1";return["count("+a+", "+b+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.pulse_in={helpUrl:Blockly.MSG_ANALOG_PULSE_IN_OUT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PULSE_IN_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("pulse-in PIN","READ");this.appendDummyInput("READ").appendField("read").appendField(new Blockly.FieldDropdown([["negative/low pulses","0"],["positive/high pulses","1"]]),"STATE");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,
domToMutation:Blockly.Blocks.base_freqout.domToMutation,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};Blockly.propc.pulse_in=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=this.getFieldValue("STATE");return["pulse_in("+a+", "+b+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.pulse_out={helpUrl:Blockly.MSG_ANALOG_PULSE_IN_OUT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PULSE_OUT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("pulse-out PIN","PULSE_LENGTH");this.appendValueInput("PULSE_LENGTH").appendField("pulse length (\u00b5s)").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation,
addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};Blockly.propc.pulse_out=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"PULSE_LENGTH",Blockly.propc.ORDER_ATOMIC);return"pulse_out("+a+", "+b+");\n"};
Blockly.Blocks.rc_charge_discharge={helpUrl:Blockly.MSG_ANALOG_RC_TIME_HELPURL,init:function(){this.setTooltip(Blockly.MSG_RC_CHARGE_DISCHARGE_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("RC time PIN","MODE");this.appendDummyInput("MODE").appendField(" ").appendField(new Blockly.FieldDropdown([["charge","0"],["discharge","1"]]),"STATE");this.setInputsInline(!0);this.setPreviousStatement(!1,"Block");this.setNextStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,
domToMutation:Blockly.Blocks.base_freqout.domToMutation,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};Blockly.propc.rc_charge_discharge=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=this.getFieldValue("STATE");return["rc_time("+a+", "+b+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.eeprom_write={helpUrl:Blockly.MSG_EEPROM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_EEPROM_WRITE_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("DATA").setCheck(null).appendField("EEPROM write").appendField(new Blockly.FieldDropdown([["number","NUMBER"],["text","TEXT"],["byte","BYTE"]],function(a){this.sourceBlock_.setOutputType_(a)}),"TYPE");this.appendValueInput("ADDRESS").appendField("R,0,7675,0","RANGEVALS0").setCheck("Number").appendField("to address");
this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setOutputType_(this.getFieldValue("DATA"))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("type",this.getFieldValue("TYPE"));return a},domToMutation:function(a){(a=a.getAttribute("type"))||(a=null);this.setOutputType_(a||null)},setOutputType_:function(a){var b="Number";"TEXT"===a&&(b="String");if(null===a||"null"===a)b=null;
this.getInput("DATA").setCheck(b)}};
Blockly.propc.eeprom_write=function(){var a=this.getFieldValue("TYPE"),b=Blockly.propc.valueToCode(this,"ADDRESS",Blockly.propc.ORDER_ATOMIC),c=Blockly.propc.valueToCode(this,"DATA",Blockly.propc.ORDER_ATOMIC)||"",d="";if(""!==c)if("BYTE"===a){if(3!==c.length||"'"!==c[0]||"'"!==c[2])c!==c.replace(/[^0-9]+/g,"")?c="("+c+" & 0xFF)":0<parseInt(c)&&256>parseInt(c)||(c="("+c+" & 0xFF)");d+="ee_putByte("+c+", (32768 + constrainInt("+b+", 0, 7675)) );\n"}else d="NUMBER"===a?d+("ee_putInt("+c+", (32768 + constrainInt("+
b+", 0, 7675)) );\n"):d+("ee_putStr("+c+", ((int) strlen("+c+") + 1), (32768 + constrainInt("+b+", 0, 7675)) );\n");return d};
Blockly.Blocks.eeprom_read={helpUrl:Blockly.MSG_EEPROM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_EEPROM_READ_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("ADDRESS").setCheck("Number").appendField("EEPROM read").appendField(new Blockly.FieldDropdown([["number","NUMBER"],["text","TEXT"],["byte","BYTE"]]),"TYPE").appendField("R,0,7675,0","RANGEVALS0").appendField("from address");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VALUE");this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.eeprom_read=function(){var a=this.getFieldValue("TYPE"),b=Blockly.propc.valueToCode(this,"ADDRESS",Blockly.propc.ORDER_ATOMIC)||"0",c=Blockly.propc.variableDB_.getName(this.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE),d="";""!==c&&("BYTE"===a?d+=c+" = ee_getByte( 32768 + constrainInt("+b+", 0, 7675));\n":"NUMBER"===a?d+=c+" = ee_getInt( 32768 + constrainInt("+b+", 0, 7675));\n":(this.disabled||(Blockly.propc.global_vars_.i2c_eeBffr="char __eeBffr[1];",Blockly.propc.global_vars_.i2c_eeIdx=
"int __eeIdx = 0;",Blockly.propc.vartype_[c]="char *"),d=d+"// Get the string from EEPROM one character at a time until it finds the end of the string.\n__eeIdx = 0;\n"+("while(__eeIdx < 128) {\n  ee_getStr(__eeBffr, 1, (32768 + constrainInt("+b+", 0, 7675)) + __eeIdx);\n")+(c+"[__eeIdx] = __eeBffr[0];\nif("+c+"[__eeIdx] == 0) break;\n  __eeIdx++;\n}\n")+("if(__eeIdx >= 128) "+c+"[127] = 0;\n")));return d};
Blockly.Blocks.servo_move={init:function(){"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this.setTooltip(Blockly.MSG_SERVO_MOVE_TOOLTIP);this.addPinMenu("Servo PIN","ANGLE");this.appendValueInput("ANGLE").appendField("set angle").setCheck("Number").appendField("R,0,180,0","RANGEVALS1");this.getField("RANGEVALS1").setVisible(!1);
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};
Blockly.propc.servo_move=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"ANGLE",Blockly.propc.ORDER_NONE);this.disabled||(Blockly.propc.definitions_["include servo"]='#include "servo.h"');return"servo_angle("+a+", "+b+" * 10);\n"};
Blockly.Blocks.servo_speed={init:function(){"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this.setTooltip(Blockly.MSG_SERVO_SPEED_TOOLTIP);this.addPinMenu("CR servo PIN","SPEED");this.appendValueInput("SPEED").appendField("speed").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");
this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};
Blockly.propc.servo_speed=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"SPEED",Blockly.propc.ORDER_NONE);this.disabled||(Blockly.propc.definitions_["include servo"]='#include "servo.h"');return"servo_speed("+a+", "+b+");\n"};
Blockly.Blocks.servo_set_ramp={helpUrl:Blockly.MSG_SERVO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SERVO_SET_RAMP_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.addPinMenu("CR servo PIN","RAMPSTEP");this.appendValueInput("RAMPSTEP").appendField("set ramp step").setCheck("Number").appendField("R,0,100,0","RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,
domToMutation:Blockly.Blocks.base_freqout.domToMutation,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther};
Blockly.propc.servo_set_ramp=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=Blockly.propc.valueToCode(this,"RAMPSTEP",Blockly.propc.ORDER_NONE);0>Number(b)?b="0":100<Number(b)&&(b="100");this.disabled||(Blockly.propc.definitions_["include servo"]='#include "servo.h"');return"servo_setramp("+a+", "+b+");\n"};
Blockly.Blocks.fb360_init={init:function(){this.setTooltip(Blockly.MSG_FB360_INIT_TOOLTIP);"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this.appendDummyInput().appendField("Feedback 360\u00b0 servo initialize PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PIN").appendField("FB").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"FB");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.fb360_init=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("FB");this.disabled||(Blockly.propc.definitions_["include servo360"]='#include "servo360.h"',Blockly.propc.setups_["servo360_"+a]="servo360_connect("+a+","+b+");");return""};
Blockly.Blocks.fb360_setup={init:function(){this.setTooltip(Blockly.MSG_FB360_SETUP_TOOLTIP);"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this._menuOptions=[["acceleration (\u00b0/s\u00b2) to","setAcceleration"],["max speed (\u00b0/s) to","setMaxSpeed"],["turn count (+/- revolutions) to","setTurns"],["home to position (+/- \u00b0)",
"setAngleOffset"],["kP for speed to","setControlSys,S360_SETTING_KPV"],["kI for speed to","setControlSys,S360_SETTING_KIV"],["kD for speed to","setControlSys,S360_SETTING_KDV"],["I for speed max to","setControlSys,S360_SETTING_IV_MAX"],["kP for position to","setControlSys,S360_SETTING_KPA"],["kI for position to","setControlSys,S360_SETTING_KIA"],["kD for position to","setControlSys,S360_SETTING_KDA"],["I for position max to","setControlSys,S360_SETTING_IA_MAX"]];this.addPinMenu("Feedback 360\u00b0 servo PIN",
"VALUE");this.appendValueInput("VALUE").appendField("configure").appendField(new Blockly.FieldDropdown(this._menuOptions,function(a){this.sourceBlock_.updateShape_(a)}),"PARAM").appendField("R,36,3600,0","RANGEVALS1");this.getField("RANGEVALS1").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther,updateShape_:function(a){"setAcceleration"===
a?this.setFieldValue("R,36,3600,1800","RANGEVALS1"):"setMaxSpeed"===a?this.setFieldValue("R,10,1080,540","RANGEVALS1"):this.setFieldValue("R,-2147483648,2147483647,0","RANGEVALS1")},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("param",this.getFieldValue("PARAM"));a.setAttribute("otherpin",this.otherPin);return a},domToMutation:function(a){"true"===a.getAttribute("otherpin")&&this.setToOther("other",this.moveBefore);a=a.getAttribute("param");this.updateShape_(a)},
onchange:function(){for(var a="WARNING: You need a Feedback 360\u00b0 servo initialize block set to match the PIN on this block!",b=Blockly.getMainWorkspace().getAllBlocks(),c=0;c<b.length;c++){var d=b[c].type,e=this.getFieldValue("PIN");"fb360_init"!==d||b[c].getFieldValue("PIN")!==e&&b[c].getFieldValue("FB")!==e||(a=null);"fb360_init"!==d||this.getInput("SET_PIN");if(this.otherPin)if(e=Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC),!isNaN(parseFloat(e))&&isFinite(e)){if(b[c].getFieldValue("PIN")===
e||b[c].getFieldValue("FB")===e)a=null}else a=null;this.setWarningText(a)}}};
Blockly.propc.fb360_setup=function(){var a=this.getFieldValue("PARAM"),b=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"0";var c=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");return-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Feedback 360\u00b0 servo initialize")?-1<a.indexOf(",")?(a=a.split(","),"servo360_"+a[0]+"("+c+", "+a[1]+", "+b+");\n"):"servo360_"+a+"("+c+", "+b+");\n":"// WARNING: You need a Feedback 360\u00b0 servo initialize block set to match the PIN on this block!"};
Blockly.Blocks.fb360_set={init:function(){this.setTooltip(Blockly.MSG_FB360_SET_TOOLTIP);"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this._menuOptions=[["set speed to (+/- \u00b0/s)","speed"],["set position to (+/- \u00b0)","angle"],["change position by (+/- \u00b0)","goto"]];this.addPinMenu("Feedback 360\u00b0 servo PIN",
"VALUE");this.appendValueInput("VALUE").setCheck("Number").appendField(" ").appendField(new Blockly.FieldDropdown(this._menuOptions,function(a){this.sourceBlock_.updateShape_(a)}),"PARAM").appendField("R,-720,720,0","RANGEVALS1");this.getField("RANGEVALS1").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},updateShape_:function(a){"speed"===a?this.setFieldValue("R,-720,720,0","RANGEVALS1"):"angle"===a?this.setFieldValue("R,-1456,1456,0",
"RANGEVALS1"):this.setFieldValue("R,-2147483648,2147483647,0","RANGEVALS1")},onchange:Blockly.Blocks.fb360_setup.onchange,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther,mutationToDom:Blockly.Blocks.fb360_setup.mutationToDom,domToMutation:Blockly.Blocks.fb360_setup.domToMutation};Blockly.propc.fb360_set=Blockly.propc.fb360_setup;
Blockly.Blocks.fb360_get={init:function(){this.setTooltip(Blockly.MSG_FB360_GET_TOOLTIP);"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this.addPinMenu("Feedback 360\u00b0 servo PIN","VALUE");this.appendDummyInput("VALUE").appendField("position (\u00b0)");this.setOutput(!0,"Number");this.setInputsInline(!0)},
onchange:Blockly.Blocks.fb360_setup.onchange,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther,mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation};
Blockly.propc.fb360_get=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");return-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Feedback 360\u00b0 servo initialize")?["servo360_getAngle("+a+")",Blockly.propc.ORDER_NONE]:["0",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.fb360_status={init:function(){this.setTooltip(Blockly.MSG_FB360_STATUS_TOOLTIP);"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot"))):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")));this.addPinMenu("Feedback 360\u00b0 servo PIN","VALUE");this.appendDummyInput("VALUE").appendField(new Blockly.FieldDropdown([["is turning a speed","S360_SPEED"],["is moving to a position",
"S360_GOTO"],["is holding at a position","S360_POSITION"]]),"STATUS");this.setOutput(!0,"Number");this.setInputsInline(!0)},onchange:Blockly.Blocks.fb360_setup.onchange,addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther,mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation};
Blockly.propc.fb360_status=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");return-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Feedback 360\u00b0 servo initialize")?["(servo360_getCsop("+a+") == "+this.getFieldValue("STATUS")+")",Blockly.propc.ORDER_NONE]:["0",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.ab_volt_in={helpUrl:Blockly.MSG_ANALOG_PULSES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AB_VOLT_IN_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("A/D channel").appendField(new Blockly.FieldDropdown(profile["default"].analog),"CHANNEL").appendField("read (0-5V) in volt-100ths");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.ab_volt_in=function(){var a=this.getFieldValue("CHANNEL");this.disabled||(Blockly.propc.definitions_["include abvolts"]='#include "abvolts.h"',Blockly.propc.setups_.setup_abvolts="ad_init(21, 20, 19, 18);");return["(ad_in("+a+") * 500 / 4096)",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.ab_volt_out={helpUrl:Blockly.MSG_ANALOG_PULSES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_AB_VOLT_OUT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("D/A channel").appendField(new Blockly.FieldDropdown([["0","0"],["1","1"]]),"CHANNEL").appendField("output (0-3.3V)");this.appendValueInput("VALUE").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("R,0,330,0","RANGEVALS1").appendField("volt-100ths");this.getField("RANGEVALS1").setVisible(!1);
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.ab_volt_out=function(){var a=this.getFieldValue("CHANNEL"),b=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"0";this.disabled||(Blockly.propc.definitions_["include abvolts"]='#include "abvolts.h"',Blockly.propc.setups_.setup_abvolt_out="da_init(26, 27);");return"da_out("+a+", ("+b+"* 256 / 330));\n"};
Blockly.Blocks.pwm_start={helpUrl:Blockly.MSG_ANALOG_PWM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PWM_START_TOOLTIP);this.setColour("#FF8800");this.appendDummyInput().appendField("PWM initialize");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setWarningText("NOTE: The PWM initialize block is no longer\nneeded. It can be safely deleted.")}};Blockly.propc.pwm_start=function(){return"// NOTE: The PWM initialize block is no longer needed. It can be safely deleted.\n"};
Blockly.Blocks.pwm_set={helpUrl:Blockly.MSG_ANALOG_PWM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PWM_SET_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.addPinMenu("PWM set PIN","CHANNEL");this.appendDummyInput("CHANNEL").appendField("channel").appendField(new Blockly.FieldDropdown([["A","0"],["B","1"]]),"CHANNEL");this.appendValueInput("DUTY_CYCLE",Number).appendField("R,0,100,0","RANGEVALS1").setCheck("Number").appendField("duty cycle (%)");this.getField("RANGEVALS1").setVisible(!1);
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},addPinMenu:Blockly.Blocks.base_freqout.addPinMenu,setToOther:Blockly.Blocks.base_freqout.setToOther,mutationToDom:Blockly.Blocks.base_freqout.mutationToDom,domToMutation:Blockly.Blocks.base_freqout.domToMutation};
Blockly.propc.pwm_set=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");var b=this.getFieldValue("CHANNEL"),c=Blockly.propc.valueToCode(this,"DUTY_CYCLE",Blockly.propc.ORDER_NONE);0>Number(c)?c="0":100<Number(c)&&(c="100");this.disabled||(Blockly.propc.setups_.pwm_start="pwm_start(100);");return"pwm_set("+a+", "+b+", "+c+");\n"};
Blockly.Blocks.pwm_stop={helpUrl:Blockly.MSG_ANALOG_PWM_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PWM_STOP_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("PWM stop");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.pwm_stop=function(){return"pwm_stop();\n"};
Blockly.Blocks.sound_init={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SOUND_INIT_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("sound initialize left (+) PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None","-1"]])),"PINL").appendField("right (\u2212) PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None","-1"]])),"PINR");this.setPreviousStatement(!0,"Block");
this.setNextStatement(!0,null)}};Blockly.propc.sound_init=function(){if(!this.disabled){var a=this.getFieldValue("PINL"),b=this.getFieldValue("PINR");Blockly.propc.setups_.sound_start="audio0 = sound_run("+a+", "+b+");";Blockly.propc.definitions_.include_soundplayer='#include "sound.h"';Blockly.propc.definitions_.sound_define_0="sound* audio0;"}return""};
Blockly.Blocks.sound_play={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SOUND_PLAY_TOOLTIP);this.actionMenuItems=[["set frequency","freq"],["set volume","volume"],["set waveform","wave"],["stop","stop"]];this.setColour(colorPalette.getColor("io"));this.addChannelMenu("sound channel","VALUE");this.appendValueInput("VALUE").setCheck(null).appendField(" ").appendField(new Blockly.FieldDropdown(this.actionMenuItems,function(a){this.sourceBlock_.setSoundAction(a)}),"ACTION");
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.waveInput=!1},addChannelMenu:function(a,b){this.appendDummyInput("SET_CHANNEL").appendField(a,"LABEL").appendField(new Blockly.FieldDropdown([["A","0"],["B","1"],["C","2"],["D","3"],["other","other"]],function(a){this.sourceBlock_.setToOther(a,b)}),"CHANNEL");this.moveBefore=b;this.otherChannel=!1},setSoundAction:function(a){a!==this.getFieldValue("ACTION")&&(this.getInput("VALUE")&&this.removeInput("VALUE"),
"wave"===a?(this.appendDummyInput("VALUE").appendField(" ").appendField(new Blockly.FieldDropdown(this.actionMenuItems,function(a){this.sourceBlock_.setSoundAction(a)}),"ACTION").appendField(new Blockly.FieldDropdown([["sine","SINE"],["square","SQUARE"],["triangle","TRIANGLE"],["sawtooth","SAW"],["noise","NOISE"]]),"WAVE"),this.waveInput=!0):"stop"===a?(this.appendDummyInput("VALUE").appendField(" ").appendField(new Blockly.FieldDropdown(this.actionMenuItems,function(a){this.sourceBlock_.setSoundAction(a)}),
"ACTION"),this.waveInput=!0):(this.appendValueInput("VALUE").setCheck(null).appendField(" ").appendField(new Blockly.FieldDropdown(this.actionMenuItems,function(a){this.sourceBlock_.setSoundAction(a)}),"ACTION"),"volume"===a&&(this.getInput("VALUE").appendField("R,0,127,64","RANGEVALS1"),this.getField("RANGEVALS1").setVisible(!1)),this.waveInput=!1),this.setFieldValue(a,"ACTION"))},setToOther:function(a,b){if("other"===a){this.otherChannel=!0;var c=this.getFieldValue("LABEL");this.getInput("SET_CHANNEL")&&
this.removeInput("SET_CHANNEL");this.appendValueInput("CHANNEL").appendField(c).setCheck("Number").appendField("R,0,3,0","RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);b&&this.moveInputBefore("CHANNEL",b)}},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("otherchannel",this.otherChannel);a.setAttribute("action",this.getFieldValue("ACTION"));return a},domToMutation:function(a){var b=a.getAttribute("otherchannel");a=a.getAttribute("action");"true"===b&&this.setToOther("other",
this.moveBefore);this.setSoundAction(a)},onchange:function(a){if(!projectData.board||"heb"!==projectData.board&&"heb-wx"!==projectData.board)-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("sound initialize")?this.setWarningText("WARNING: You must use a sound initialize\nblock at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.sound_play=function(){var a=this.otherChannel?Blockly.propc.valueToCode(this,"CHANNEL",Blockly.propc.ORDER_ATOMIC):this.getFieldValue("CHANNEL");var b=this.getFieldValue("ACTION");var c=this.waveInput?this.getFieldValue("WAVE"):Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ATOMIC)||"0";"stop"===b&&(b="freq",c="0");a="sound_"+b+"(audio0, "+a+", "+c+");";-1!==Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("sound initialize")||projectData.board&&"heb"===projectData.board||
"heb-wx"===projectData.board||(a="// WARNING: You must use a sound initialize block at the beginning of your program!\n");if(projectData.board&&!this.disabled){if("heb"===projectData.board||"heb-wx"===projectData.board)Blockly.propc.setups_.sound_start="audio0 = sound_run("+profile["default"].earphone_jack_inverted+");";Blockly.propc.definitions_.include_soundplayer='#include "sound.h"';Blockly.propc.definitions_.sound_define_0="sound* audio0;"}return a};
Blockly.Blocks.wav_play={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAV_PLAY_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("WAV play file").appendField(new Blockly.FieldTextInput("filename",function(a){a=a.replace(/[^A-Z0-9a-z_]/g,"").toLowerCase();8<a.length&&(a=a.substring(0,7));return a}),"FILENAME");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.wav_play=function(){var a=this.getFieldValue("FILENAME");if(!this.disabled){Blockly.propc.definitions_["include wavplayer"]='#include "wavplayer.h"';for(var b=!1,c=!1,d=Blockly.getMainWorkspace().getAllBlocks(),e=0;e<d.length;e++)"sd_init"===d[e].type&&(b=!0),"wav_set_pins"===d[e].type&&(c=!0);b||(Blockly.propc.setups_.sd_card="sd_mount("+profile["default"].sd_card+");");"heb-wx"!==projectData.board||c||(Blockly.propc.setups_.wavplayer_pin="wav_set_pins("+profile["default"].earphone_jack+
");")}return'wav_play("'+a+'.wav");\n'};Blockly.Blocks.wav_status={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAV_STATUS_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("WAV status");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};
Blockly.propc.wav_status=function(){this.disabled||(Blockly.propc.definitions_["include wavplayer"]='#include "wavplayer.h"');return["wav_playing()",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.wav_volume={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAV_VOLUME_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendValueInput("VOLUME").appendField("WAV volume").appendField("R,0,10,0","RANGEVALS1");this.getField("RANGEVALS1").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.wav_volume=function(){var a=Blockly.propc.valueToCode(this,"VOLUME",Blockly.propc.ORDER_NONE)||"0";this.disabled||(Blockly.propc.definitions_["include wavplayer"]='#include "wavplayer.h"');return"wav_volume("+a+");\n"};
Blockly.Blocks.wav_set_pins={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAV_SET_PINS_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput("LEFTPIN").appendField("WAV set output left PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None","-1"]])),"PINL").appendField("right PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None","-1"]])),"PINR");this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null)}};Blockly.propc.wav_set_pins=function(){var a=this.getFieldValue("PINL"),b=this.getFieldValue("PINR");b===a&&(b="-1");this.disabled||(Blockly.propc.setups_.wavplayer_pin="wav_set_pins("+a+", "+b+");");return""};
Blockly.Blocks.wav_stop={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_WAV_STOP_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("WAV stop");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.wav_stop=function(){this.disabled||(Blockly.propc.definitions_["include wavplayer"]='#include "wavplayer.h"');return"wav_stop();\n"};
Blockly.Blocks.sd_init={helpUrl:Blockly.MSG_SD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SD_INIT_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendDummyInput().appendField("SD initialize DO").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DO").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital),"CLK").appendField("DI").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DI").appendField("CS").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"CS");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.sd_init=function(){var a=this.getFieldValue("DO"),b=this.getFieldValue("CLK"),c=this.getFieldValue("DI"),d=this.getFieldValue("CS");this.disabled||(Blockly.propc.setups_.sd_card="sd_mount("+a+", "+b+", "+c+", "+d+");");return""};
Blockly.Blocks.sd_open={helpUrl:Blockly.MSG_SD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SD_OPEN_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendDummyInput("MODE").appendField("SD file open").appendField(new Blockly.FieldTextInput("filename.txt",function(a){a=a.replace(/[^A-Z0-9a-z_\.]/g,"").toLowerCase();a=a.split(".");8<a[0].length&&(a[0].length=8);a[1]?3<a[1].length&&(a[1].length=3):a[1]="TXT";return a[0]+"."+a[1]}),"FILENAME").appendField(new Blockly.FieldDropdown([["as read-only",
"r"],["as read-write","w"]]),"MODE");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){"activity-board"!==projectData.board&&"heb-wx"!==projectData.board&&(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("SD initialize")?this.setWarningText("WARNING: You must use a SD initialize\nblock at the beginning of your program!"):this.setWarningText(null))}};
Blockly.propc.sd_open=function(){for(var a=this.getFieldValue("FILENAME"),b=this.getFieldValue("MODE"),c="",d=0,e=!1,f=Blockly.getMainWorkspace().getAllBlocks(),g=0;g<f.length;g++)"sd_open"===f[g].type&&(d++,f[g]===this&&1===d&&(c="FILE* ")),"sd_init"===f[g].type&&(e=!0);this.disabled||e||!profile["default"].sd_card||(Blockly.propc.setups_.sd_card="sd_mount("+profile["default"].sd_card+");");a=c+'fp = fopen("'+a+'","'+b+'");';"activity-board"!==projectData.board&&"heb-wx"!==projectData.board&&-1===
f.toString().indexOf("SD initialize")&&(a="// WARNING: You must use a SD initialize block at the beginning of your program!");return a};
Blockly.Blocks.sd_read={helpUrl:Blockly.MSG_SD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SD_READ_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("SIZE").setCheck(null).appendField("SD file").appendField(new Blockly.FieldDropdown([["read","fread"],["write","fwrite"],["close","fclose"]],function(a){this.sourceBlock_.setSdMode(a)}),"MODE");this.appendDummyInput("VALUE").appendField("bytes  store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),
"VAR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("mode",this.getFieldValue("MODE"));return a},domToMutation:function(a){(a=a.getAttribute("mode"))&&this.setFieldValue(a,"MODE");this.setSdMode(a)},setSdMode:function(a){this.getInput("SIZE")&&this.removeInput("SIZE");this.getInput("VALUE")&&this.removeInput("VALUE");"fwrite"===a?(this.appendValueInput("SIZE"),this.appendValueInput("VALUE").setCheck("String").appendField("bytes of")):
"fread"===a?(this.appendValueInput("SIZE").setCheck("Number"),this.appendDummyInput("VALUE").appendField("bytes  store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),"VAR")):this.appendDummyInput("SIZE");this.getInput("SIZE").appendField("SD file").appendField(new Blockly.FieldDropdown([["read","fread"],["write","fwrite"],["close","fclose"]],function(a){this.sourceBlock_.setSdMode(a)}),"MODE");this.setFieldValue(a,"MODE")},onchange:function(){var a=null,b=Blockly.getMainWorkspace().getAllBlocks().toString();
-1===b.indexOf("SD file open")?a="WARNING: You must use a SD file open block\nbefore reading, writing, or closing an SD file!":-1===b.indexOf("SD initialize")&&"heb-wx"!==projectData.board&&"activity-board"!==projectData.board&&(a="WARNING: You must use a SD initialize\nblock at the beginning of your program!");this.setWarningText(a)}};
Blockly.propc.sd_read=function(){var a=Blockly.propc.valueToCode(this,"SIZE",Blockly.propc.ORDER_NONE)||"1",b=this.getFieldValue("MODE"),c="";"fread"===b?(c=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c="&"+c,Blockly.propc.vartype_[c]="char *"):"fwrite"===b&&(c=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"");a="fclose"===b?b+"(fp);":b+"("+c+", 1, "+a+", fp);";b=Blockly.getMainWorkspace().getAllBlocks().toString();-1===b.indexOf("SD file open")?
a="// WARNING: You must use a SD file open block before reading, writing, or closing an SD file!":-1===b.indexOf("SD initialize")&&"heb-wx"!==projectData.board&&"activity-board"!==projectData.board&&(a="// WARNING: You must use a SD initialize block at the beginning of your program!");c=!1;for(var d=0;d<b.length;d++)"sd_init"===b[d].type&&(c=!0);this.disabled||c||!profile["default"].sd_card||(Blockly.propc.setups_.sd_card="sd_mount("+profile["default"].sd_card+");");return a};
Blockly.Blocks.sd_file_pointer={helpUrl:Blockly.MSG_SD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SD_FILE_POINTER_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("FP").setCheck("Number").appendField("SD file").appendField(new Blockly.FieldDropdown([["set","set"],["get","get"]],function(a){this.sourceBlock_.setSdMode(a)}),"MODE").appendField("pointer = ");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.sd_read.mutationToDom,
domToMutation:Blockly.Blocks.sd_read.domToMutation,setSdMode:function(a){this.getInput("FP")&&this.removeInput("FP");var b="";"set"===a?(b=" = ",this.setOutput(!1),this.appendValueInput("FP").setCheck("Number")):(this.setOutput(!0,"Number"),this.appendDummyInput("FP"));this.getInput("FP").appendField("SD file").appendField(new Blockly.FieldDropdown([["set","set"],["get","get"]],function(a){this.sourceBlock_.setSdMode(a)}),"MODE").appendField("pointer"+b);this.setFieldValue(a,"MODE");a="get"===a?!1:
!0;this.setPreviousStatement(a,"Block");this.setNextStatement(a,null)},onchange:Blockly.Blocks.sd_read.onchange};
Blockly.propc.sd_file_pointer=function(){for(var a=Blockly.getMainWorkspace().getAllBlocks().toString(),b=!1,c=0;c<a.length;c++)"sd_init"===a[c].type&&(b=!0);this.disabled||b||!profile["default"].sd_card||(Blockly.propc.setups_.sd_card="sd_mount("+profile["default"].sd_card+");");return-1===a.indexOf("SD file open")?"// WARNING: You must use a SD file open block before using the file pointer!":-1===a.indexOf("SD initialize")&&"heb-wx"!==projectData.board&&"activity-board"!==projectData.board?"// WARNING: You must use a SD initialize block at the beginning of your program!":
"set"===this.getFieldValue("MODE")?"fp = "+(Blockly.propc.valueToCode(this,"FP",Blockly.propc.ORDER_NONE)||"0")+";":["fp",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.ab_drive_init={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){var a=[["ActivityBot 360\u00b0","abdrive360.h"],["ActivityBot","abdrive.h"],["Arlo","arlodrive.h"],["Servo Differential Drive","servodiffdrive.h"]];"activity-board"!==projectData.board&&(a=[["Servo Differential Drive","servodiffdrive.h"]]);this.setTooltip(Blockly.MSG_ROBOT_DRIVE_INIT_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField("Robot").appendField(new Blockly.FieldDropdown(a,
function(a){this.sourceBlock_.updateShape_({BOT:a})}),"BOT").appendField("initialize");this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);"activity-board"!==projectData.board&&this.updateShape_({BOT:"servodiffdrive.h",LEFT:"12",RIGHT:"13"})},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("bot",this.getFieldValue("BOT"));a.setAttribute("lpin",this.getFieldValue("LEFT")||"");a.setAttribute("rpin",
this.getFieldValue("RIGHT")||"");return a},domToMutation:function(a){var b=a.getAttribute("bot"),c=a.getAttribute("lpin")||"0";a=a.getAttribute("rpin")||"0";this.updateShape_({BOT:b,LEFT:c,RIGHT:a})},updateShape_:function(a){var b=a.BOT;void 0===a.BOT&&(b=this.getFieldValue("BOT"));this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS");var c=this.getInput("PINS");"servodiffdrive.h"===b&&(c.appendField(" left PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"LEFT").appendField("right PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital),"RIGHT"),a.LEFT&&this.setFieldValue(a.LEFT,"LEFT"),a.RIGHT&&this.setFieldValue(a.RIGHT,"RIGHT"));a=Blockly.getMainWorkspace().getAllBlocks();for(c=0;c<a.length;c++){var d=a[c].newRobot;d&&d.call(a[c],b)}}};
Blockly.propc.ab_drive_init=function(){var a=this.getFieldValue("BOT");if(!this.disabled&&(Blockly.propc.definitions_["include abdrive"]='#include "'+a+'"',"servodiffdrive.h"===a)){a=Number(this.getFieldValue("LEFT"));var b=Number(this.getFieldValue("RIGHT"));Blockly.propc.setups_.servodiffdrive="drive_pins("+a+","+b+");"}return""};
Blockly.Blocks.ab_drive_ramping={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_RAMPING_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput("ACCEL").appendField("Robot set acceleration for").appendField(new Blockly.FieldDropdown([["speed blocks to","FOR_SPEED"],["distance blocks to","FOR_GOTO"]]),"OPS").appendField(new Blockly.FieldDropdown([["2000 ticks/s\u00b2","2000"],["1600 ticks/s\u00b2 (jerky)","1600"],["1200 ticks/s\u00b2","1200"],
["800 ticks/s\u00b2 (peppy)","800"],["600 ticks/s\u00b2","600"],["400 ticks/s\u00b2 (smooth)","400"],["200 ticks/s\u00b2","200"],["100 ticks/s\u00b2 (sluggish)","100"]]),"RAMPING");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.isBot="";"activity-board"!==projectData.board&&this.newRobot("servodiffdrive.h")},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("bot",this.isBot);a.setAttribute("ramp",this.getFieldValue("RAMPING")||
"600");a.setAttribute("type",this.getFieldValue("OPS")||"FOR_SPEED");return a},domToMutation:function(a){var b=a.getAttribute("bot"),c=a.getAttribute("type")||this.getFieldValue("OPS");a=a.getAttribute("ramp")||this.getFieldValue("RAMPING");b?this.newRobot(b,c,a):this.whichBot()},whichBot:function(){var a="",b=Blockly.getMainWorkspace().getAllBlocks().toString();-1<b.indexOf("Robot ActivityBot initialize")?a="abdrive.h":-1<b.indexOf("Robot ActivityBot 360\u00b0 initialize")?a="abdrive360.h":-1<b.indexOf("Robot Arlo initialize")?
a="arlodrive.h":-1<b.indexOf("Robot Servo Differential Drive initialize")&&(a="servodiffdrive.h");if("ab_drive_ramping"===this.type){b=this.getFieldValue("RAMPING")||("abdrive.h"===a?"600":"300");var c=this.getFieldValue("OPS")||"FOR_SPEED";this.isBot=a;this.newRobot(a,c,b)}else this.newRobot(a)},newRobot:function(a,b,c){this.setWarningText(null);var d="abdrive360.h"===a?[["Not limited","1200"],["600 ticks/s\u00b2 (peppy)","600"],["500 ticks/s\u00b2","450"],["400 ticks/s\u00b2","300"],["300 ticks/s\u00b2",
"225"],["200 ticks/s\u00b2","150"],["100 ticks/s\u00b2","75"],["50 ticks/s\u00b2 (sluggish)","50"]]:[["not limited","2400"],["1200 ticks/s\u00b2","1200"],["800 ticks/s\u00b2 (peppy)","800"],["600 ticks/s\u00b2","600"],["400 ticks/s\u00b2 (smooth)","400"],["200 ticks/s\u00b2","200"],["100 ticks/s\u00b2 (sluggish)","100"]];this.getInput("ACCEL")&&this.removeInput("ACCEL");"abdrive.h"===a||"arlodrive.h"===a||"abdrive360.h"===a?(this.appendDummyInput("ACCEL").appendField("Robot set acceleration for").appendField(new Blockly.FieldDropdown([["speed blocks to",
"FOR_SPEED"],["distance blocks to","FOR_GOTO"]]),"OPS").appendField(new Blockly.FieldDropdown(d),"RAMPING"),this.setFieldValue(b||"FOR_SPEED","OPS"),this.setFieldValue(c||("abdrive360.h"===a?"300":"600"),"RAMPING"),"arlodrive.h"===a&&this.setWarningText("WARNING: This block does not currently work for the Arlo robot.")):""===a?(this.setWarningText("WARNING: You must use a Robot initialize\nblock at the beginning of your program!"),this.appendDummyInput("ACCEL").appendField("Robot set acceleration")):
(this.appendDummyInput("ACCEL").appendField("Robot set acceleration to").appendField(new Blockly.FieldDropdown(d),"RAMPING"),this.setFieldValue(c||"600","RAMPING"))}};
Blockly.propc.ab_drive_ramping=function(){var a=Number(this.getFieldValue("RAMPING")),b=this.getFieldValue("OPS"),c=Blockly.getMainWorkspace().getAllBlocks().toString();return-1<c.indexOf("Robot ActivityBot initialize")||-1<c.indexOf("Robot Arlo initialize")||-1<c.indexOf("Robot ActivityBot 360\u00b0 initialize")?"drive_setAcceleration("+b+", "+a.toString(10)+");\n":-1<c.indexOf("Robot Servo Differential Drive initialize")?"drive_setramp("+(a/50).toString(10)+","+(a/50).toString(10)+");\n":"// Robot drive system is not initialized!\n"};
Blockly.Blocks.ab_drive_get_ticks={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_GET_TICKS_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput("ACCEL").appendField("Robot encoders store left count in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"LEFT").appendField("right count in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"RIGHT");this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null);this.whichBot()},whichBot:Blockly.Blocks.ab_drive_ramping.whichBot,newRobot:function(a){"abdrive.h"===a||"abdrive360.h"===a||"arlodrive.h"===a?this.setWarningText(null):""===a?this.setWarningText("WARNING: You must use a Robot initialize\nblock at the beginning of your program!"):this.setWarningText("WARNING: This block is not compatible with Servo Differential Drive")}};
Blockly.propc.ab_drive_get_ticks=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("LEFT"),Blockly.Variables.NAME_TYPE),b=Blockly.propc.variableDB_.getName(this.getFieldValue("RIGHT"),Blockly.Variables.NAME_TYPE),c=Blockly.getMainWorkspace().getAllBlocks().toString();return-1<c.indexOf("Robot ActivityBot initialize")||-1<c.indexOf("Robot ActivityBot 360\u00b0 initialize")||-1<c.indexOf("Robot Arlo initialize")?"drive_getTicks(&"+a+", &"+b+");\n":"// Robot drive system is not initialized or non-ActivityBot Robot selected!\n"};
Blockly.Blocks.ab_drive_goto={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_DRIVE_DISTANCE_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField("Robot drive distance in").appendField(new Blockly.FieldDropdown([["ticks","TICK"],["centimeters","CM"],["inches","INCH"]]),"UNITS");this.appendValueInput("LEFT").appendField("R,-4227330,4227330,0","RANGEVALS0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("left");
this.appendValueInput("RIGHT").appendField("R,-4227330,4227330,0","RANGEVALS1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("right");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.whichBot()},whichBot:Blockly.Blocks.ab_drive_ramping.whichBot,newRobot:function(a){"servodiffdrive.h"===a?this.setWarningText('WARNING: Servo Differential Drive\ndoes not support "Robot drive distance"!'):
""===a?this.setWarningText("WARNING: You must use a Robot initialize\nblock at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.ab_drive_goto=function(){var a=Blockly.propc.valueToCode(this,"LEFT",Blockly.propc.ORDER_NONE)||"0",b=Blockly.propc.valueToCode(this,"RIGHT",Blockly.propc.ORDER_NONE)||"0",c=this.getFieldValue("UNITS"),d="",e=Blockly.getMainWorkspace().getAllBlocks().toString();return d=-1<e.indexOf("Robot ActivityBot initialize")||-1<e.indexOf("Robot ActivityBot 360\u00b0 initialize")?"TICK"===c?d+("drive_goto("+a+", "+b+");\n"):"CM"===c?d+("drive_goto(("+a+" * 40)/13, ("+b+" * 40)/13);\n"):d+("drive_goto(("+
a+" * 508)/65, ("+b+" * 508)/65);\n"):-1<e.indexOf("Robot Arlo initialize")?"TICK"===c?d+("drive_goto("+a+", "+b+");\n"):"CM"===c?d+("drive_goto(("+a+" * 253)/90, ("+b+" * 253)/90);\n"):d+("drive_goto(("+a+" * 50)/7, ("+b+" * 50)/7);\n"):-1<e.indexOf("Robot Servo Differential Drive initialize")?d+'// Servo Differential Drive does not support "Drive Distance"\n':d+"// Robot drive system is not initialized!\n"};
Blockly.Blocks.ab_drive_goto_max_speed={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_DISTANCE_MAX_SPEED_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendValueInput("SPEED").appendField("Robot set max speed (+/-) for","TITLE").appendField(new Blockly.FieldDropdown([["speed blocks","FOR_SPEED"],["distance blocks","FOR_GOTO"]],function(a){this.sourceBlock_.applyTo(a)}),"OPS").appendField("R,0,128,0","RANGEVALS0").setCheck("Number");this.getField("RANGEVALS0").setVisible(!1);
this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.whichBot()},whichBot:Blockly.Blocks.ab_drive_ramping.whichBot,newRobot:function(a){"servodiffdrive.h"===a?this.setWarningText("WARNING: Servo Differential Drive\ndoes not support this block"):"arlodrive.h"===a?this.setWarningText("WARNING: This block does not currently work for the Arlo robot."):""===a?this.setWarningText("WARNING: You must use a Robot initialize\nblock at the beginning of your program!"):
this.setWarningText(null)},applyTo:function(a){"FOR_SPEED"===a?this.setFieldValue("Robot set max speed (+/-) for","TITLE"):"FOR_GOTO"===a&&this.setFieldValue("Robot set speed (+/-) for","TITLE")}};
Blockly.propc.ab_drive_goto_max_speed=function(){var a=Blockly.propc.valueToCode(this,"SPEED",Blockly.propc.ORDER_NONE)||"128",b=this.getFieldValue("OPS"),c=Blockly.getMainWorkspace().getAllBlocks().toString();return-1<c.indexOf("Robot ActivityBot initialize")||-1<c.indexOf("Robot ActivityBot 360\u00b0 initialize")?"drive_setMaxVelocity("+b+", "+a+");\n":-1<c.indexOf("Robot Arlo initialize")?"// Set max speed is not supported for this robot\n":-1<c.indexOf("Robot Servo Differential Drive initialize")?
"// Servo Differential Drive does not support this block\n":"// Robot drive system is not initialized!\n"};
Blockly.Blocks.ab_drive_speed={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_DRIVE_SPEED_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField("Robot drive speed","TITLE");this.appendValueInput("LEFT").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("R,-128,128,0","RANGEVALS0").appendField("left");this.appendValueInput("RIGHT").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("R,-128,128,0","RANGEVALS1").appendField("right");
this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.whichBot()},whichBot:Blockly.Blocks.ab_drive_ramping.whichBot,newRobot:function(a){var b=this.getInput("RIGHT").connection,c=this.getInput("LEFT").connection.targetBlock();b=b.targetBlock();var d=null,e="R,-128,128,0";c&&c.outputConnection.disconnect();b&&b.outputConnection.disconnect();this.getInput("LEFT")&&this.removeInput("LEFT");
this.getInput("RIGHT")&&this.removeInput("RIGHT");"servodiffdrive.h"===a||"arlodrive.h"===a?e="R,-500,500,0":""===a&&(d="WARNING: You must use a Robot initialize\nblock at the beginning of your program!",e="N,0,0,0");this.appendValueInput("LEFT").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField(e,"RANGEVALS0").appendField("left");this.appendValueInput("RIGHT").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField(e,"RANGEVALS1").appendField("right");this.getField("RANGEVALS0").setVisible(!1);
this.getField("RANGEVALS1").setVisible(!1);this.setWarningText(d);c&&c.outputConnection.connect(this.getInput("LEFT").connection);b&&b.outputConnection.connect(this.getInput("RIGHT").connection);c&&c.onchange&&c.onchange.call(c);b&&b.onchange&&b.onchange.call(b)}};
Blockly.propc.ab_drive_speed=function(){var a=Blockly.propc.valueToCode(this,"LEFT",Blockly.propc.ORDER_NONE)||"0",b=Blockly.propc.valueToCode(this,"RIGHT",Blockly.propc.ORDER_NONE)||"0",c=Blockly.getMainWorkspace().getAllBlocks().toString();return-1<c.indexOf("Robot ActivityBot initialize")||-1<c.indexOf("Robot Arlo initialize")||-1<c.indexOf("Robot ActivityBot 360\u00b0 initialize")?"drive_speed("+a+", "+b+");\n":-1<c.indexOf("Robot Servo Differential Drive initialize")?"drive_speeds("+a+", "+b+
");\n":"// Robot drive system is not initialized!\n"};Blockly.Blocks.ab_drive_stop={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_DRIVE_STOP_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField("Robot drive stop");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.ab_drive_stop=function(){var a=Blockly.getMainWorkspace().getAllBlocks().toString();return-1<a.indexOf("Robot ActivityBot initialize")||-1<a.indexOf("Robot Arlo initialize")||-1<a.indexOf("Robot ActivityBot 360\u00b0 initialize")?"drive_speed(0, 0);\n":-1<a.indexOf("Robot Servo Differential Drive initialize")?"drive_speeds(0, 0);\n":"// Robot drive system is not initialized!\n"};
Blockly.Blocks.activitybot_calibrate={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_ACTIVITYBOT_CALIBRATE_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField(new Blockly.FieldDropdown([["ActivityBot 360\u00b0","abcalibrate360.h"],["ActivityBot","abcalibrate.h"],["ActivityBot 360\u00b0 (Parallaxy)","Parallaxy"]]),"BOT").appendField("calibrate")},onchange:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=null,
c=0;c<a.length;c++)a[c]===this||a[c].disabled||(b="WARNING! Do NOT use any other blocks with this block!");this.setWarningText(b)}};
Blockly.propc.activitybot_calibrate=function(){var a=this.getFieldValue("BOT")||"abcalibrate360.h",b="high(26);\nhigh(27);\ncal_activityBot();\nlow(26);\nlow(27);\n";"Parallaxy"===a&&(b="cal_supply5V(1);\n"+b,a="abcalibrate360.h");Blockly.propc.definitions_.activitybot_calibrate='#include "'+a+'"';Blockly.propc.setups_.activitybot_calibrate="cal_servoPins(12, 13);\n\tcal_encoderPins(14, 15);";return b};
Blockly.Blocks.activitybot_display_calibration={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_ACTIVITYBOT_DISPLAY_CALIBRATION_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField(new Blockly.FieldDropdown([["ActivityBot 360\u00b0",'"abcalibrate360.h"'],["ActivityBot",'"abcalibrate.h"'],["ActivityBot 360\u00b0 (Parallaxy)",'"abcalibrate360.h" // Parallaxy']]),"BOT").appendField("display calibration").appendField(new Blockly.FieldDropdown([["results",
"result"],["data","table"]]),"TYPE")},onchange:Blockly.Blocks.activitybot_calibrate.onchange};Blockly.propc.activitybot_display_calibration=function(){var a=this.getFieldValue("BOT")||"abdrive.h";Blockly.propc.definitions_.activitybot_calibrate="#include "+a;Blockly.propc.serial_terminal_=!0;return"abdrive.h"===a?"table"===this.getFieldValue("TYPE")?"drive_displayInterpolation();\n":"drive_calibrationResults();\n":"table"===this.getFieldValue("TYPE")?"cal_displayData();\n":"cal_displayResults();\n"};
Blockly.Blocks.activitybot_parallaxy_load={helpUrl:Blockly.MSG_ROBOT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ROBOT_PARALLAXY_LOAD_TOOLTIP);this.setColour(colorPalette.getColor("robot"));this.appendDummyInput().appendField(new Blockly.FieldDropdown([["ActivityBot 360\u00b0 (Parallaxy)","Parallaxy"]]),"BOT").appendField("load firmware")},onchange:Blockly.Blocks.activitybot_calibrate.onchange};
Blockly.propc.activitybot_parallaxy_load=function(){this.getFieldValue("BOT");Blockly.propc.definitions_.pure_code="/* PURE CODE ONLY */\n";Blockly.propc.methods_.pure_code='/*\nFile: ActivityBot 360 Robot Control for Parallaxy.side\n\nAuthors: Based on https://letsrobot.tv driver for Telly robot obtained from\nhttps://github.com/runmyrobot/ParallaxBot/tree/rl-feedback360/parallaxScripts\nModified by Parallax Inc for use with Parallaxy robot and updated ActivityBot\nand Servo360 libraries.\n\nVersion 1.0\n\nCopyright (C) Parallax Inc. 2018. All Rights MIT Licensed.  See end of file.\n*/\n\n#include "simpletools.h"\n#include "fdserial.h"\n#include "abdrive360.h"\n#include "ws2812.h"\n\n#define LED_PIN 8\n#define LED_COUNT 18\n\nvoid motor_controller();\nvoid neopixel_controller();\nvoid set_motor_controller(int leftSpeed, int rightSpeed);\n\nvoid eyes_blink();\nvoid refresh_eyes();\nvoid change_brightness(int change_amount);\n\nint ledColors[LED_COUNT];\nint dim_array[LED_COUNT];\n\nws2812 *driver;\n\nint brightness = 10;\nint eye_color = 0xFFFFFF;\n\n// enables full-duplex serilization of the terminal\n// (In otherwise, 2 way signals between this computer and the robot)\nfdserial *term;\n\nvolatile int current_leftspd = 0;\nvolatile int current_rightspd = 0;\nvolatile int motor_flag = 0;\n\nint defaultStraightSpeed = 60;\nint defaultTurnSpeed = 15;\n\nint main() {\ndrive_setAcceleration(FOR_SPEED, 150);\nservo360_couple(12, 13);\nservo360_setCoupleScale(12, 13, 2000);\n\nservo360_setControlSys(12, S360_SETTING_KPV, 2000); // KPV\nservo360_setControlSys(13, S360_SETTING_KPV, 2000); // KPV\n\n//close the SimpleIDE terminal\nsimpleterm_close();\n\n//set full-duplex serialization for the terminal\nterm = fdserial_open(31, 30, 0, 9600);\n\ncog_run(motor_controller, 128);\n\n// load the LED driver\ndriver = ws2812b_open();\n\npause(500);\neyes_blink();\n\nint inputStringLength = 20;\nchar inputString[inputStringLength];\n\nint sPos = 0;\n\nwhile (1) {\nif (fdserial_rxReady(term) != 0) {\n\n// Get the character entered from the terminal\nchar c = fdserial_rxChar(term);\n\nif (c != -1) {\ndprint(term, "%d", (int) c);\nif (c == 13 || c == 10) {\ndprint(term, "received line:");\ndprint(term, inputString);\ndprint(term, "\\n");\nif (strcmp(inputString, "l") == 0) {\ndprint(term, "left");\nset_motor_controller(-defaultTurnSpeed, defaultTurnSpeed);\n}\nif (strcmp(inputString, "r") == 0) {\ndprint(term, "right");\nset_motor_controller(defaultTurnSpeed, -defaultTurnSpeed);\n}\nif (strcmp(inputString, "f") == 0) {\ndprint(term, "forward");\nset_motor_controller(defaultStraightSpeed, defaultStraightSpeed);\n}\nif (strcmp(inputString, "b") == 0) {\ndprint(term, "back");\nset_motor_controller(-defaultStraightSpeed, -defaultStraightSpeed);\n}\nif (strcmp(inputString, "l_up") == 0) {\ndprint(term, "left_stop");\ndrive_speed(0, 0);\n}\nif (strcmp(inputString, "r_up") == 0) {\ndprint(term, "right_stop");\ndrive_speed(0, 0);\n}\nif (strcmp(inputString, "f_up") == 0) {\ndprint(term, "forward_stop");\ndrive_speed(0, 0);\n}\nif (strcmp(inputString, "b_up") == 0) {\ndprint(term, "back_stop");\ndrive_speed(0, 0);\n}\nif (strcmp(inputString, "brightness_up") == 0) {\nchange_brightness(10);\ndprint(term, "brightness increased");\n}\nif (strcmp(inputString, "brightness_down") == 0) {\nchange_brightness(-10);\ndprint(term, "brightness decreased");\n}\nif (strncmp(inputString, "led", 3) == 0) {\nint pixel;\nint color;\nsscanAfterStr(inputString, "led", "%d%x", &pixel, &color);\ndprint(term, "%d\\n", color);\nif (pixel < LED_COUNT) {\nledColors[pixel] = color;\nrefresh_eyes();\n}\n}\nif (strncmp(inputString, "leds", 4) == 0) {\nint color;\nsscanAfterStr(inputString, "leds", "%x", &color);\ndprint(term, "%d\\n", color);\nfor (int i = 0; i < LED_COUNT; ++i) {\nledColors[i] = color;\n}\nrefresh_eyes();\n}\nsPos = 0;\ninputString[0] = 0; // clear string\n}\nelse if (sPos < inputStringLength - 1) {\n// record next character\ninputString[sPos] = c;\nsPos += 1;\ninputString[sPos] = 0; // make sure last element of string is 0\ndprint(term, inputString);\ndprint(term, " ok \\n");\n}\n}\n}\n}\n}\n\nvoid set_motor_controller(int leftSpeed, int rightSpeed) {\ncurrent_leftspd = leftSpeed;\ncurrent_rightspd = rightSpeed;\nmotor_flag = 1;\n}\n\nvoid motor_controller() {\nwhile (1) {\nif (motor_flag == 1) {\ndrive_speed(current_leftspd, current_rightspd);\nmotor_flag = 0;\npause(500);\n} else {\ndrive_speed(0, 0);\n}\npause(10);\n}\n}\n\nvoid refresh_eyes() {\nfor (int j = 0; j < LED_COUNT; ++j) {\nint red = (ledColors[j] >> 16) & 0xFF;\nred = red * brightness / 255;\n\nint green = (ledColors[j] >> 8) & 0xFF;\ngreen = green * brightness / 255;\n\nint blue = (ledColors[j]) & 0xFF;\nblue = blue * brightness / 255;\n\ndim_array[j] = (red << 16) + (green << 8) + (blue);\n}\nws2812_set(driver, LED_PIN, dim_array, LED_COUNT);\n}\n\nvoid change_brightness(int change_amount) {\nbrightness = constrainInt(brightness + change_amount, 2, 255);\nrefresh_eyes();\n}\n\nvoid eyes_blink() {\nint doot = 0;\n\nwhile (doot < LED_COUNT) {\nif (doot == 4 || doot == 13)\nledColors[doot] = 0x000000;\nelse\nledColors[doot] = eye_color;\ndoot++;\n}\nrefresh_eyes();\n\ndoot = 0;\npause(400);\n\nwhile (doot < LED_COUNT) {\nif ((doot >= 3 && doot <= 5) || (doot >= 12 && doot <= 14))\nledColors[doot] = eye_color;\nelse\nledColors[doot] = 0x000000;\ndoot++;\n}\nrefresh_eyes();\n\ndoot = 0;\npause(400);\n\nwhile (doot < LED_COUNT) {\nif (doot == 4 || doot == 13)\nledColors[doot] = 0x000000;\nelse\nledColors[doot] = eye_color;\ndoot++;\n}\nrefresh_eyes();\n}\n\n/**\nTERMS OF USE: MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the "Software"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n*/';
return""};
Blockly.Blocks.mcp320x_read={helpUrl:Blockly.MSG_ANALOG_PULSES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MCP320X_READ_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput("SELECTS").appendField("A/D chip read ").appendField(new Blockly.FieldDropdown([["MCP3002","02"],["MCP3004","04"],["MCP3008","08"],["MCP3202","22"],["MCP3204","24"],["MCP3208","28"],["ADC0831","81"]],function(a){this.sourceBlock_.updateShape_({CH_C:a})}),"CHIP").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital),"CLK_PIN").appendField("DO").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"DO_PIN").appendField("DI").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DI_PIN").appendField("CS").appendField(new Blockly.FieldDropdown(profile["default"].digital),"CS_PIN");this.appendDummyInput("CHANNELS").setAlign(Blockly.ALIGN_RIGHT).appendField("channel").appendField(new Blockly.FieldDropdown([["0","0"],["1","1"]]),"CHAN").appendField("in volt-100ths");this.setInputsInline(!1);this.setOutput(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=
this.getFieldValue("CHIP"),c=this.getFieldValue("CS_PIN"),d=this.getFieldValue("CLK_PIN"),e=this.getFieldValue("DO_PIN"),f=this.getFieldValue("DI_PIN");a.setAttribute("chip",b);a.setAttribute("cs_pin",c);a.setAttribute("ck_pin",d);a.setAttribute("do_pin",e);a.setAttribute("di_pin",f);return a},domToMutation:function(a){var b=a.getAttribute("chip"),c=a.getAttribute("cs_pin",d),d=a.getAttribute("ck_pin",c),e=a.getAttribute("do_pin",e),f=a.getAttribute("di_pin",f);this.updateShape_({CH_C:b,CK:c,CS:d,
DO:e,DI:f})},updateShape_:function(a){var b=a.CH_C;void 0===a.CH_C&&(b=this.getFieldValue("CH_C"));var c=a.CK;void 0===a.CK&&(c=this.getFieldValue("CLK_PIN"));var d=a.CS;void 0===a.CS&&(d=this.getFieldValue("CS_PIN"));var e=a.DO;void 0===a.DO&&(e=this.getFieldValue("DO_PIN"));var f=a.DI;void 0===a.DI&&(f=this.getFieldValue("DI_PIN"));a=[];for(var g=0;g<parseInt(b[1]);g++)a.push([g.toString(),g.toString()]);this.getInput("CHANNELS")&&this.removeInput("CHANNELS");this.getInput("SELECTS")&&this.removeInput("SELECTS");
this.appendDummyInput("SELECTS").appendField("A/D chip read").appendField(new Blockly.FieldDropdown([["MCP3002","02"],["MCP3004","04"],["MCP3008","08"],["MCP3202","22"],["MCP3204","24"],["MCP3208","28"],["ADC0831","81"]],function(a){this.sourceBlock_.updateShape_({CH_C:a})}),"CHIP").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital),"CLK_PIN").appendField("DO").appendField(new Blockly.FieldDropdown(profile["default"].digital),"DO_PIN").appendField("DI").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"DI_PIN").appendField("CS").appendField(new Blockly.FieldDropdown(profile["default"].digital),"CS_PIN");"1"===b[1]?this.getField("DI_PIN").setVisible(!1):this.appendDummyInput("CHANNELS").setAlign(Blockly.ALIGN_RIGHT).appendField("channel").appendField(new Blockly.FieldDropdown(a),"CHAN").appendField("in volt-100ths");this.setFieldValue(b,"CHIP");this.setFieldValue(c,"CLK_PIN");this.setFieldValue(d,"CS_PIN");this.setFieldValue(e,"DO_PIN");this.setFieldValue(f,"DI_PIN")}};
Blockly.propc.mcp320x_read=function(){var a=parseInt(this.getFieldValue("CHIP")[1]),b="1"+this.getFieldValue("CHIP")[0],c=this.getFieldValue("CS_PIN"),d=this.getFieldValue("CLK_PIN"),e=this.getFieldValue("DO_PIN"),f=this.getFieldValue("DI_PIN"),g="000"+parseInt(this.getFieldValue("CHAN")).toString(2);g=4>a?"11"+g.substr(g.length-1,g.length)+"1":"11"+g.substr(g.length-3,g.length)+"0";if(!this.disabled){Blockly.propc.global_vars_.adc_set_vref="int __Mvref = 330;";var h="";"18"===b&1===a?(Blockly.propc.methods_.adc0831_read=
"int read_adc0831(int __McsPin, int __MclkPin, int __MdoPin, int __MVr){low(__MclkPin);\nlow(__McsPin);\npulse_out(__MclkPin, 250);\nint __Mvolts = shift_in(__MdoPin, __MclkPin, MSBPOST, 8);\nhigh(__McsPin);\nreturn ((__Mvolts * __MVr) / 256);}",Blockly.propc.method_declarations_.adc0831_read="int read_adc0831(int __McsPin, int __MclkPin, int __MdoPin, int __MVr);\n",h+="read_adc0831("+c+", "+d+", "+e+", __Mvref)"):(Blockly.propc.methods_.mcp320x_read="int read_mcp320x(int __McsPin, int __MclkPin, int __MdoPin, int __MdiPin, int __Mbits, int __Mdata, int __MVr, int __Mres) {\n  high(__McsPin);  low(__MclkPin);  low(__McsPin);\n  shift_out(__MdiPin, __MclkPin, MSBFIRST, __Mbits, __Mdata);\n  int __Mvolts = shift_in(__MdoPin, __MclkPin, MSBPOST, __Mres);\n  high(__McsPin);  high(__MclkPin);\n  return ((__Mvolts * __MVr) / pow(2,__Mres));}",
Blockly.propc.method_declarations_.mcp320x_read="int read_mcp320x(int __McsPin, int __MclkPin, int __MdoPin, int __MdiPin, int __Mbits, int __Mdata, int __MVr, int __Mres);\n",h=h+("read_mcp320x("+c+", "+d+", "+e)+(", "+f+", "+g.length+", 0b"+g+", __Mvref, "+b+")"))}return[h,Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.mcp320x_set_vref={helpUrl:Blockly.MSG_ANALOG_PULSES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MCP320X_SET_VREF_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput().appendField("A/D set Vref to").appendField(new Blockly.FieldNumber("330",null,null,1),"VREF").appendField("volt 100ths");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.mcp320x_set_vref=function(){return-1<Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("A/D chip read")?"__Mvref = "+parseInt(this.getFieldValue("VREF"))+";\n":""};Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.heb_wx_lock={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_WX_LOCK);this.setTooltip(Blockly.MSG_HEB_WX_LOCK_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Badge WX programming").appendField(new Blockly.FieldDropdown([["unlock","Allow the Badge WX to be programmed over WiFi,high"],["lock","Prevent the Badge WX from being programmed over WiFi,input"]]),"STATE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_wx_lock=function(){var a=this.getFieldValue("STATE").split(","),b="// "+a[0]+"\n";"reset"===a[1]&&(b+="pulse_out(17, 100);\n",a[1]="input");return b+=a[1]+"(17);\n"};
Blockly.Blocks.heb_toggle_led={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_LEDS_HELPURL);this.setTooltip(Blockly.MSG_HEB_TOGGLE_LED_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("LED set state of").appendField(new Blockly.FieldDropdown([["0 - P27","0"],["1 - P26","1"],["2 - P25","2"],["3 - P15","3"],["4 - P16","4"],["5 - P17","5"]]),"LED_#").appendField("state").appendField(new Blockly.FieldDropdown([["on/high","1"],["off/low","0"]]),"STATE");
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_toggle_led=function(){var a=this.getFieldValue("LED_#"),b=this.getFieldValue("STATE");return"led("+a+", "+b+");\n"};
Blockly.Blocks.heb_pwm_led={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_LEDS_HELPURL);this.setTooltip(Blockly.MSG_HEB_PWM_LED_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("BRIGHTNESS").setCheck("Number").appendField("LED").appendField(new Blockly.FieldDropdown([["0 (left)","0"],["1 (right)","1"]]),"LED").appendField("brightness").appendField("R,0,15,0","RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_pwm_led=function(){var a=this.getFieldValue("LED"),b=Blockly.propc.valueToCode(this,"BRIGHTNESS",Blockly.propc.ORDER_NONE);return"led_pwm_set("+a+", "+b+");\n"};
Blockly.Blocks.heb_toggle_led_open={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_LEDS_HELPURL);this.setTooltip(Blockly.MSG_HEB_TOGGLE_LED_OPEN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("LED set state of");this.appendValueInput("LED_NUM").setCheck("Number");this.appendValueInput("LED_STATE").appendField("state").setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_toggle_led_open=function(){var a=Blockly.propc.valueToCode(this,"LED_NUM",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"LED_STATE",Blockly.propc.ORDER_NONE);return"led("+a+", "+b+");\n"};
Blockly.Blocks.heb_color_val={init:function(){this.setHelpUrl(Blockly.MSG_VALUES_HELPURL);this.setTooltip(Blockly.MSG_HEB_COLOR_VAL_TOOLTIP);this.setColour(colorPalette.getColor("programming"));var a=new Blockly.FieldColour("#FFFFFF");a.setColours("#FFFFFF #FFFF00 #00FFFF #FF00FF #000000 #00FF00 #0000FF #FF0000".split(" ")).setColumns(4);this.appendDummyInput().appendField("color (Badge)").appendField(a,"RGB");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,
null)}};Blockly.propc.heb_color_val=function(){var a=this.getFieldValue("RGB").replace(/F/g,"1").replace(/f/g,"1").replace("#","");return["0b"+a[0]+a[2]+a[4],Blockly.propc.ORDER_NONE]};
Blockly.Blocks.heb_set_led_rgb={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_LEDS_HELPURL);this.setTooltip(Blockly.MSG_HEB_SET_LED_RGB_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("RGB").setCheck("Number").appendField("RGB LED set state of").appendField(new Blockly.FieldDropdown([["left LED","L"],["right LED","R"],["both LEDs","B"]]),"SIDE").appendField("to");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_set_led_rgb=function(){var a=this.getFieldValue("SIDE"),b=Blockly.propc.valueToCode(this,"RGB",Blockly.propc.ORDER_NONE),c="";"B"===a&&(a=b,c="s");return"rgb"+c+"("+a+", "+b+");\n"};
Blockly.Blocks.heb_print_numeric_var={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_PRINT_NUMERIC_VAR_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("VALUE").setCheck("Number").appendField("Display print number");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_print_numeric_var=function(){var a=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE);return a.startsWith('"')&&a.endsWith('"')?"oledprint("+a+");\n":'oledprint("%d", '+a+");\n"};
Blockly.Blocks.heb_print_string_var={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_PRINT_STRING_VAR_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("VALUE").setCheck("String").appendField("Display print text");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_print_string_var=function(){return"oledprint("+Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)+");\n"};
Blockly.Blocks.heb_print_multiple=Blockly.Blocks.oled_print_multiple;Blockly.propc.heb_print_multiple=Blockly.propc.console_print_multiple;
Blockly.Blocks.heb_cursor_position_large={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_HELPURL);this.setTooltip(Blockly.MSG_HEB_SET_FONT_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Display set font size").appendField(new Blockly.FieldDropdown([["Large","LARGE"],["Small","SMALL"]]),"SIZE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_cursor_position_large=function(){return"text_size("+this.getFieldValue("SIZE")+");\n"};
Blockly.Blocks.heb_cursor_position_small={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_CURSOR_POSITION_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("COLS").setCheck("Number").appendField("Display set cursor column");this.appendValueInput("ROWS").setCheck("Number").appendField("row");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_cursor_position_small=function(){var a=Blockly.propc.valueToCode(this,"COLS",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"ROWS",Blockly.propc.ORDER_NONE);return"cursor("+a+", "+b+");\n"};
Blockly.Blocks.heb_oled_point={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_OLED_POINT_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X0").setCheck("Number").appendField("Display draw pixel at (x)");this.appendValueInput("Y0").setCheck("Number").appendField("(y)");this.appendDummyInput().appendField("color").appendField(a,
"COLOR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_oled_point=function(){var a=Blockly.propc.valueToCode(this,"X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y0",Blockly.propc.ORDER_NONE),c=this.getFieldValue("COLOR");return"point("+a+", "+b+", "+("#000000"===c?"0":"1")+");\n"};
Blockly.Blocks.heb_oled_line={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_OLED_LINE_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X0").setCheck("Number").appendField("Display draw line from 1 (x)");this.appendValueInput("Y0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("X1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("to 2 (x)");
this.appendValueInput("Y1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("color").appendField(a,"COLOR");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_oled_line=function(){var a=Blockly.propc.valueToCode(this,"X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y0",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"X1",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,"Y1",Blockly.propc.ORDER_NONE),e=this.getFieldValue("COLOR");return"line("+a+", "+b+", "+c+", "+d+", "+("#000000"===e?"0":"1")+");\n"};
Blockly.Blocks.heb_oled_circle={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_OLED_CIRCLE_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X0").setCheck("Number").appendField("Display draw circle at (x)");this.appendValueInput("Y0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("R").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("radius");
this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("filled").appendField(new Blockly.FieldCheckbox("TRUE"),"FILL");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("color").appendField(a,"COLOR");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_oled_circle=function(){var a=Blockly.propc.valueToCode(this,"X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y0",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"R",Blockly.propc.ORDER_NONE),d=this.getFieldValue("FILL"),e=this.getFieldValue("COLOR");return"circle"+("TRUE"===d?"Filled":"")+"("+a+", "+b+", "+c+", "+("#000000"===e?"0":"1")+");\n"};
Blockly.Blocks.heb_oled_box={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_OLED_BOX_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X0").setCheck("Number").appendField("Display draw rectangle at 1 (x)");this.appendValueInput("Y0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("W").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("width");
this.appendValueInput("H").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("height");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("filled").appendField(new Blockly.FieldCheckbox("TRUE"),"FILL");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("color").appendField(a,"COLOR");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_oled_box=function(){var a=Blockly.propc.valueToCode(this,"X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y0",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"W",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,"H",Blockly.propc.ORDER_NONE),e=this.getFieldValue("FILL"),f=this.getFieldValue("COLOR");return"box"+("TRUE"===e?"Filled":"")+"("+a+", "+b+", ("+a+"+"+c+"-1),"+("("+b+"+"+d+"-1), "+("#000000"===f?"0":"1")+");\n")};
Blockly.Blocks.heb_oled_triangle={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_OLED_TRIANGLE_TOOLTIP);var a=new Blockly.FieldColour("#FFFFFF");a.setColours(["#FFFFFF","#000000"]).setColumns(2);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("X0").setCheck("Number").appendField("Display draw triangle from 1 (x)");this.appendValueInput("Y0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("X1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("to 2 (x)");
this.appendValueInput("Y1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendValueInput("X2").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("to 3 (x)");this.appendValueInput("Y2").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("(y)");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("filled").appendField(new Blockly.FieldCheckbox("TRUE"),"FILL");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("color").appendField(a,
"COLOR");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_oled_triangle=function(){var a=Blockly.propc.valueToCode(this,"X0",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"Y0",Blockly.propc.ORDER_NONE),c=Blockly.propc.valueToCode(this,"X1",Blockly.propc.ORDER_NONE),d=Blockly.propc.valueToCode(this,"Y1",Blockly.propc.ORDER_NONE),e=Blockly.propc.valueToCode(this,"X2",Blockly.propc.ORDER_NONE),f=Blockly.propc.valueToCode(this,"Y2",Blockly.propc.ORDER_NONE),g=this.getFieldValue("FILL"),h=this.getFieldValue("COLOR");return"triangle"+
("TRUE"===g?"Filled":"")+"("+a+", "+b+", "+c+", "+(d+", "+e+", "+f+", "+("#000000"===h?"0":"1")+");\n")};Blockly.Blocks.heb_clear_screen={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_CLEAR_SCREEN_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Display clear screen");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_clear_screen=function(){return"clear();\n"};
Blockly.Blocks.heb_rotate={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_DISPLAY_HELPURL);this.setTooltip(Blockly.MSG_HEB_ROTATE_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("Display rotate 180\u00b0");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_rotate=function(){return"rotate180();\n"};
Blockly.Blocks.heb_ir_send_signal={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_IR_HELPURL);this.setTooltip(Blockly.MSG_HEB_IR_SEND_SIGNAL_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("MESSAGE").setCheck("String").appendField("IR send text");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_ir_send_signal=function(){return"send("+Blockly.propc.valueToCode(this,"MESSAGE",Blockly.propc.ORDER_NONE)+");\n"};
Blockly.Blocks.heb_ir_read_signal={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_IR_HELPURL);this.setTooltip(Blockly.MSG_HEB_IR_READ_SIGNAL_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("IR receive store message in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"BUFFER").appendField("length in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"LENGTH");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);
this.setInputsInline(!0)}};Blockly.propc.heb_ir_read_signal=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("BUFFER"),Blockly.Variables.NAME_TYPE),b=Blockly.propc.variableDB_.getName(this.getFieldValue("LENGTH"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[a]="char";Blockly.propc.varlength_[a]=128;return b+"= receive("+a+");\n"};
Blockly.Blocks.heb_ir_clear_buffer={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_IR_HELPURL);this.setTooltip(Blockly.MSG_HEB_IR_CLEAR_BUFFER_TOOLTIP);this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput().appendField("IR clear buffer");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_ir_clear_buffer=function(){return"irclear();\n"};
Blockly.Blocks.heb_badge_eeprom_store={init:function(){this.setHelpUrl(Blockly.MSG_EEPROM_HELPURL);this.setTooltip(Blockly.MSG_HEB_BADGE_EEPROM_STORE_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("CONTACT").appendField("Memory store contact");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_badge_eeprom_store=function(){return"store("+Blockly.propc.valueToCode(this,"CONTACT",Blockly.propc.ORDER_NONE)+");\n"};
Blockly.Blocks.heb_badge_eeprom_is_stored={init:function(){this.setHelpUrl(Blockly.MSG_EEPROM_HELPURL);this.setTooltip(Blockly.MSG_HEB_BADGE_EEPROM_IS_STORED_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("CONTACT").setCheck("String").appendField("Memory contact");this.appendDummyInput().appendField("already stored");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.heb_badge_eeprom_is_stored=function(){return["stored("+Blockly.propc.valueToCode(this,"CONTACT",Blockly.propc.ORDER_NONE)+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.heb_badge_eeprom_retrieve={init:function(){this.setHelpUrl(Blockly.MSG_EEPROM_HELPURL);this.setTooltip(Blockly.MSG_HEB_BADGE_EEPROM_RETRIEVE_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendValueInput("INDEX").setCheck("Number").appendField("Memory get contact at index");this.appendDummyInput().appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),"BUFFER");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_badge_eeprom_retrieve=function(){var a=Blockly.propc.valueToCode(this,"INDEX",Blockly.propc.ORDER_NONE),b=Blockly.propc.variableDB_.getName(this.getFieldValue("BUFFER"),Blockly.Variables.NAME_TYPE);Blockly.propc.vartype_[b]="char";Blockly.propc.varlength_[b]=128;return"retrieve("+b+", constrainInt("+a+", 0, contacts_count() - 1));\n"};
Blockly.Blocks.heb_count_contacts={init:function(){this.setHelpUrl(Blockly.MSG_EEPROM_HELPURL);this.setTooltip(Blockly.MSG_HEB_COUNT_CONTACTS_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendDummyInput().appendField("Memory count contacts");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};Blockly.propc.heb_count_contacts=function(){return["contacts_count()",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.heb_erase_all_contacts={init:function(){this.setHelpUrl(Blockly.MSG_EEPROM_HELPURL);this.setTooltip(Blockly.MSG_HEB_ERASE_ALL_CONTACTS_TOOLTIP);this.setColour(colorPalette.getColor("output"));this.appendDummyInput().appendField("Memory erase all contacts");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_erase_all_contacts=function(){return"contacts_eraseAll();\n"};
Blockly.Blocks.heb_badge_axis_acceleration={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_ACCEL_HELPURL);this.setTooltip(Blockly.MSG_HEB_BADGE_AXIS_ACCELERATION_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Accelerometer get").appendField(new Blockly.FieldDropdown([["x-axis","AX"],["y-axis","AY"],["z-axis","AZ"]]),"AXIS");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.heb_badge_axis_acceleration=function(){return["accel("+this.getFieldValue("AXIS")+")",Blockly.propc.ORDER_NONE]};Blockly.Blocks.heb_badge_was_shaken={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_ACCEL_HELPURL);this.setTooltip(Blockly.MSG_HEB_BADGE_WAS_SHAKEN_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Accelerometer was shaken?");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)}};
Blockly.propc.heb_badge_was_shaken=function(){return["accel_shaken()",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.heb_touchpad_status={init:function(){this.setTooltip(Blockly.MSG_HEB_TOUCHPAD_STATUS_TOOLTIP);this.setHelpUrl(Blockly.MSG_BADGE_BUTTONS_HELPURL);this.setColour(colorPalette.getColor("input"));projectData&&"heb-wx"!==projectData.board?this.appendDummyInput().appendField("Touchpad").appendField(new Blockly.FieldDropdown([["0 - P27","0"],["1 - P26","1"],["2 - P25","2"],["3 - P15","3"],["4 - P16","4"],["5 - P17","5"],["6 - Center Button","6"],["Any button","-1"]]),"TOUCHPAD"):this.appendDummyInput().appendField("Button ").appendField(new Blockly.FieldDropdown([["B",
"7"],["Left \u21e6","6"],["Left \u21e9","5"],["Left \u21e8","4"],["Right \u21e6","3"],["Right \u21e9","2"],["Right \u21e8","1"],["A","0"],["Any button","-1"]]),"TOUCHPAD");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};Blockly.propc.heb_touchpad_status=function(){var a=this.getFieldValue("TOUCHPAD");return["button"+("-1"===a?"s(":"("+a)+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.heb_touchpad_sensitivity={init:function(){this.setHelpUrl(Blockly.MSG_BADGE_BUTTONS_HELPURL);this.setTooltip(Blockly.MSG_HEB_TOUCHPAD_SENSITIVITY_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Touchpad sensitivity ").appendField(new Blockly.FieldDropdown([["0 (low)","7"],["1","8"],["2","9"],["3","10"],["4","11"],["5 (default)","12"],["6","13"],["7","14"],["8 (high)","15"]]),"LEVEL");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null)}};Blockly.propc.heb_touchpad_sensitivity=function(){return"touch_sensitivity_set("+this.getFieldValue("LEVEL")+");"};Blockly.Blocks.heb_text_to_speech_say={init:function(){this.setHelpUrl(Blockly.MSG_AUDIO_HELPURL);this.setTooltip(Blockly.MSG_HEB_TEXT_TO_SPEECH_SAY_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendValueInput("STRING").setCheck("String").appendField("TTS say");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_text_to_speech_say=function(){var a=Blockly.propc.valueToCode(this,"STRING",Blockly.propc.ORDER_NONE);if(!this.disabled){for(var b=profile["default"].earphone_jack_inverted,c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)"heb_text_to_speech_pins"===c[d].type&&(b=c[d].getFieldValue("PINL")+","+c[d].getFieldValue("PINR"));Blockly.propc.definitions_.TTS='#include "text2speech.h"';Blockly.propc.global_vars_.TTS="talk *tts_talk;";Blockly.propc.setups_.TTS="tts_talk = talk_run("+
b+");\ntalk_set_speaker(tts_talk, 1, 100);"}return"talk_say(tts_talk, "+a+");\n"};Blockly.Blocks.heb_text_to_speech_spell={init:function(){this.setHelpUrl(Blockly.MSG_AUDIO_HELPURL);this.setTooltip(Blockly.MSG_HEB_TEXT_TO_SPEECH_SPELL_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendValueInput("STRING").setCheck("String").appendField("TTS spell");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_text_to_speech_spell=function(){var a=Blockly.propc.valueToCode(this,"STRING",Blockly.propc.ORDER_NONE);if(!this.disabled){for(var b=profile["default"].earphone_jack_inverted,c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)"heb_text_to_speech_pins"===c[d].type&&(b=c[d].getFieldValue("PINL")+","+c[d].getFieldValue("PINR"));Blockly.propc.definitions_.TTS='#include "text2speech.h"';Blockly.propc.global_vars_.TTS="talk *tts_talk;";Blockly.propc.setups_.TTS="tts_talk = talk_run("+
b+");\ntalk_set_speaker(tts_talk, 1, 100);"}return"talk_spell(tts_talk, "+a+");\n"};
Blockly.Blocks.heb_text_to_speech_pins={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){var a=(profile["default"].earphone_jack_inverted||"0,1").split(",");a[0]=a[0].trim();a[1]=a[1].trim();this.setTooltip(Blockly.MSG_HEB_TEXT_TO_SPEECH_PINS_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput("PINS").appendField("TTS set output left PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None","-1"]])),"PINL").appendField("right PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["None",
"-1"]])),"PINR");this.setFieldValue(a[0],"PINL");this.setFieldValue(a[1],"PINR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};Blockly.propc.heb_text_to_speech_pins=function(){return""};
Blockly.Blocks.heb_text_to_speech_volume={helpUrl:Blockly.MSG_AUDIO_HELPURL,init:function(){this.setTooltip(Blockly.MSG_HEB_TEXT_TO_SPEECH_VOLUME_TOOLTIP);this.setColour(colorPalette.getColor("io"));this.appendDummyInput("PINS").appendField("TTS set volume").appendField(new Blockly.FieldDropdown([["0","0"],["1","1"],["2","2"],["3","3"],["4","4"],["5","5"],["6","6"],["7","7"]]),"VOL");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)}};
Blockly.propc.heb_text_to_speech_volume=function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=0;b<a.length;b++)if("heb_text_to_speech_say"===a[b].type||"heb_text_to_speech_spell"===a[b].type)return"talk_setVolume(tts_talk, "+this.getFieldValue("VOL")+");\n";return"// WARNING: You must use a TTS say or TTS spell block to use a TTS set volume block.\n"};/*

 Visual Blocks Editor

 Copyright 2012 Google Inc.
 https://developers.google.com/blockly/

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Blockly.Blocks.procedures_defnoreturn={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_FUNCTIONS_HELPURL):this.setHelpUrl(Blockly.MSG_FUNCTIONS_HELPURL);this.setTooltip(Blockly.MSG_PROCEDURES_DEFNORETURN_TOOLTIP);this.setColour(colorPalette.getColor("functions"));var a=new Blockly.FieldTextInput("",Blockly.Procedures.rename);a.setSpellcheck(!1);this.appendDummyInput().appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE).appendField(a,"NAME").appendField("",
"PARAMS");this.arguments_=[];this.argumentVarModels_=[];this.setStatements_(!0);this.statementConnection_=null},setStatements_:function(a){this.hasStatements_!==a&&(a?(this.appendStatementInput("STACK").appendField(Blockly.Msg.PROCEDURES_DEFNORETURN_DO),this.getInput("RETURN")&&this.moveInputBefore("STACK","RETURN")):this.removeInput("STACK",!0),this.hasStatements_=a)},updateParams_:function(){for(var a=!1,b={},c=0;c<this.arguments_.length;c++){if(b["arg_"+this.arguments_[c].toLowerCase()]){a=!0;
break}b["arg_"+this.arguments_[c].toLowerCase()]=!0}a?this.setWarningText(Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING):this.setWarningText(null);a="";this.arguments_.length&&(a=Blockly.Msg.PROCEDURES_BEFORE_PARAMS+" "+this.arguments_.join(", "));Blockly.Events.disable();try{this.setFieldValue(a,"PARAMS")}finally{Blockly.Events.enable()}},mutationToDom:function(a){var b=document.createElement("mutation");a&&b.setAttribute("name",this.getFieldValue("NAME"));for(var c=0;c<this.argumentVarModels_.length;c++){var d=
document.createElement("arg"),e=this.argumentVarModels_[c];d.setAttribute("name",e.name);d.setAttribute("varid",e.getId());a&&this.paramIds_&&d.setAttribute("paramId",this.paramIds_[c]);b.appendChild(d)}this.hasStatements_||b.setAttribute("statements","false");return b},domToMutation:function(a){this.arguments_=[];this.argumentVarModels_=[];for(var b=0,c;c=a.childNodes[b];b++)if("arg"==c.nodeName.toLowerCase()){var d=c.getAttribute("name");c=c.getAttribute("varid")||c.getAttribute("varId");this.arguments_.push(d);
d=Blockly.Variables.getOrCreateVariablePackage(this.workspace,c,d,"");this.argumentVarModels_.push(d)}this.updateParams_();Blockly.Procedures.mutateCallers(this);this.setStatements_("false"!==a.getAttribute("statements"))},decompose:function(a){var b=a.newBlock("procedures_mutatorcontainer");b.initSvg();this.getInput("RETURN")?b.setFieldValue(this.hasStatements_?"TRUE":"FALSE","STATEMENTS"):b.getInput("STATEMENT_INPUT").setVisible(!1);for(var c=b.getInput("STACK").connection,d=0;d<this.arguments_.length;d++){var e=
a.newBlock("procedures_mutatorarg");e.initSvg();e.setFieldValue(this.arguments_[d],"NAME");e.oldLocation=d;c.connect(e.previousConnection);c=e.nextConnection}Blockly.Procedures.mutateCallers(this);return b},compose:function(a){this.arguments_=[];this.paramIds_=[];this.argumentVarModels_=[];for(var b=a.getInputTargetBlock("STACK");b;){var c=b.getFieldValue("NAME");this.arguments_.push(c);c=this.workspace.getVariable(c,"");this.argumentVarModels_.push(c);this.paramIds_.push(b.id);b=b.nextConnection&&
b.nextConnection.targetBlock()}this.updateParams_();Blockly.Procedures.mutateCallers(this);a=a.getFieldValue("STATEMENTS");if(null!==a&&(a="TRUE"==a,this.hasStatements_!=a))if(a)this.setStatements_(!0),Blockly.Mutator.reconnect(this.statementConnection_,this,"STACK"),this.statementConnection_=null;else{a=this.getInput("STACK").connection;if(this.statementConnection_=a.targetConnection)a=a.targetBlock(),a.unplug(),a.bumpNeighbours_();this.setStatements_(!1)}},getProcedureDef:function(){return[this.getFieldValue("NAME"),
this.arguments_,!1]},getVars:function(){return this.arguments_},getVarModels:function(){return this.argumentVarModels_},renameVarById:function(a,b){var c=this.workspace.getVariableById(a);if(""==c.type){c=c.name;for(var d=this.workspace.getVariableById(b),e=!1,f=0;f<this.argumentVarModels_.length;f++)this.argumentVarModels_[f].getId()==a&&(this.arguments_[f]=d.name,this.argumentVarModels_[f]=d,e=!0);e&&this.displayRenamedVar_(c,d.name)}},updateVarName:function(a){for(var b=a.name,c=!1,d=0;d<this.argumentVarModels_.length;d++)if(this.argumentVarModels_[d].getId()==
a.getId()){var e=this.arguments_[d];this.arguments_[d]=b;c=!0}c&&this.displayRenamedVar_(e,b)},displayRenamedVar_:function(a,b){this.updateParams_();if(this.mutator.isVisible())for(var c=this.mutator.workspace_.getAllBlocks(),d=0,e;e=c[d];d++)"procedures_mutatorarg"==e.type&&Blockly.Names.equals(a,e.getFieldValue("NAME"))&&e.setFieldValue(b,"NAME")},customContextMenu:function(a){if(!this.isInFlyout){var b={enabled:!0},c=this.getFieldValue("NAME");b.text=Blockly.Msg.PROCEDURES_CREATE_DO.replace("%1",
c);var d=document.createElement("mutation");d.setAttribute("name",c);for(var e=0;e<this.arguments_.length;e++)c=document.createElement("arg"),c.setAttribute("name",this.arguments_[e]),d.appendChild(c);c=document.createElement("block");c.setAttribute("type",this.callType_);c.appendChild(d);b.callback=Blockly.ContextMenu.callbackFactory(this,c);a.push(b);if(!this.isCollapsed())for(e=0;e<this.argumentVarModels_.length;e++)b={enabled:!0},d=this.argumentVarModels_[e],c=d.name,b.text=Blockly.Msg.VARIABLES_SET_CREATE_GET.replace("%1",
c),d=Blockly.Variables.generateVariableFieldDom(d),c=document.createElement("block"),c.setAttribute("type","variables_get"),c.appendChild(d),b.callback=Blockly.ContextMenu.callbackFactory(this,c),a.push(b)}},callType_:"procedures_callnoreturn"};
Blockly.Blocks.procedures_callnoreturn={init:function(){"Scribbler Robot"===profile["default"].description?this.setHelpUrl(Blockly.MSG_S3_FUNCTIONS_HELPURL):this.setHelpUrl(Blockly.MSG_FUNCTIONS_HELPURL);this.setTooltip(Blockly.MSG_PROCEDURES_CALLNORETURN_TOOLTIP);this.setColour(colorPalette.getColor("functions"));this.appendDummyInput("TOPROW").appendField("run function  \u201c"+this.id+"\u201d","NAME");this.setPreviousStatement(!0);this.setNextStatement(!0);this.arguments_=[];this.argumentVarModels_=
[];this.quarkConnections_={};this.quarkIds_=null;this.previousDisabledState_=!1},getProcedureCall:function(){return this.getFieldValue("NAME").split("\u201c")[1].slice(0,-1)},renameProcedure:function(a,b){Blockly.Names.equals(a,this.getProcedureCall())&&this.setFieldValue("run function \u201c"+b+"\u201d","NAME")},setProcedureParameters_:function(a,b){var c=Blockly.Procedures.getDefinition(this.getProcedureCall(),this.workspace),d=c&&c.mutator&&c.mutator.isVisible();d||(this.quarkConnections_={},this.quarkIds_=
null);if(b)if(a.join("\n")==this.arguments_.join("\n"))this.quarkIds_=b;else{if(b.length!=a.length)throw RangeError("paramNames and paramIds must be the same length.");this.setCollapsed(!1);this.quarkIds_||(this.quarkConnections_={},this.quarkIds_=[]);c=this.rendered;this.rendered=!1;for(var e=0;e<this.arguments_.length;e++){var f=this.getInput("ARG"+e);f&&(f=f.connection.targetConnection,this.quarkConnections_[this.quarkIds_[e]]=f,d&&f&&-1==b.indexOf(this.quarkIds_[e])&&(f.disconnect(),f.getSourceBlock().bumpNeighbours_()))}this.arguments_=
[].concat(a);this.argumentVarModels_=[];for(e=0;e<this.arguments_.length;e++)d=Blockly.Variables.getOrCreateVariablePackage(this.workspace,null,this.arguments_[e],""),this.argumentVarModels_.push(d);this.updateShape_();if(this.quarkIds_=b)for(e=0;e<this.arguments_.length;e++)d=this.quarkIds_[e],d in this.quarkConnections_&&(f=this.quarkConnections_[d],Blockly.Mutator.reconnect(f,this,"ARG"+e)||delete this.quarkConnections_[d]);(this.rendered=c)&&this.render()}},updateShape_:function(){for(var a=0;a<
this.arguments_.length;a++){var b=this.getField("ARGNAME"+a);if(b){Blockly.Events.disable();try{b.setValue(this.arguments_[a])}finally{Blockly.Events.enable()}}else b=new Blockly.FieldLabel(this.arguments_[a]),this.appendValueInput("ARG"+a).setAlign(Blockly.ALIGN_RIGHT).appendField(b,"ARGNAME"+a).init()}for(;this.getInput("ARG"+a);)this.removeInput("ARG"+a),a++;if(a=this.getInput("TOPROW"))this.arguments_.length?this.getField("WITH")||(a.appendField(Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS,"WITH"),
a.init()):this.getField("WITH")&&a.removeField("WITH")},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("name",this.getProcedureCall());for(var b=0;b<this.arguments_.length;b++){var c=document.createElement("arg");c.setAttribute("name",this.arguments_[b]);a.appendChild(c)}return a},domToMutation:function(a){var b=a.getAttribute("name");this.renameProcedure(this.getProcedureCall(),b);b=[];for(var c=[],d=0,e;e=a.childNodes[d];d++)"arg"==e.nodeName.toLowerCase()&&(b.push(e.getAttribute("name")),
c.push(e.getAttribute("paramId")));this.setProcedureParameters_(b,c)},getVarModels:function(){return this.argumentVarModels_},onchange:function(a){var b=this.previousConnection.targetBlock();b?0===b.toString().indexOf("new processor ")?this.setNextStatement(!1):this.setNextStatement(!0):this.setNextStatement(!0);if(this.workspace&&!this.workspace.isFlyout&&a.recordUndo)if(a.type==Blockly.Events.BLOCK_CREATE&&-1!=a.ids.indexOf(this.id)){if(b=this.getProcedureCall(),b=Blockly.Procedures.getDefinition(b,
this.workspace),!b||b.type==this.defType_&&JSON.stringify(b.arguments_)==JSON.stringify(this.arguments_)||(b=null),!b){Blockly.Events.setGroup(a.group);a=document.createElement("xml");b=document.createElement("block");b.setAttribute("type",this.defType_);var c=this.getRelativeToSurfaceXY(),d=c.y+2*Blockly.SNAP_RADIUS;b.setAttribute("x",c.x+Blockly.SNAP_RADIUS*(this.RTL?-1:1));b.setAttribute("y",d);c=this.mutationToDom();b.appendChild(c);c=document.createElement("field");c.setAttribute("name","NAME");
c.appendChild(document.createTextNode(this.getProcedureCall()));b.appendChild(c);a.appendChild(b);Blockly.Xml.domToWorkspace(a,this.workspace);Blockly.Events.setGroup(!1)}}else a.type==Blockly.Events.BLOCK_DELETE?(b=this.getProcedureCall(),b=Blockly.Procedures.getDefinition(b,this.workspace),b||(Blockly.Events.setGroup(a.group),this.dispose(!0,!1),Blockly.Events.setGroup(!1))):a.type==Blockly.Events.CHANGE&&"disabled"==a.element&&(b=this.getProcedureCall(),(b=Blockly.Procedures.getDefinition(b,this.workspace))&&
b.id==a.blockId&&((b=Blockly.Events.getGroup())&&console.log("Saw an existing group while responding to a definition change"),Blockly.Events.setGroup(a.group),a.newValue?(this.previousDisabledState_=this.disabled,this.setDisabled(!0)):this.setDisabled(this.previousDisabledState_),Blockly.Events.setGroup(b)))},customContextMenu:function(a){var b={enabled:!0};b.text=Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF;var c=this.getProcedureCall(),d=this.workspace;b.callback=function(){var a=Blockly.Procedures.getDefinition(c,
d);a&&(d.centerOnBlock(a.id),a.select())};a.push(b)},defType_:"procedures_defnoreturn"};
Blockly.propc.procedures_defreturn=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),b=Blockly.propc.statementToCode(this,"STACK");Blockly.propc.INFINITE_LOOP_TRAP&&(b=Blockly.propc.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);var c=Blockly.propc.valueToCode(this,"RETURN",Blockly.propc.ORDER_NONE)||"";c&&(c="  return "+c+";\n");for(var d=c?"int":"void",e=[],f=0;f<this.arguments_.length;f++){var g=Blockly.propc.variableDB_.getName(this.arguments_[f],
Blockly.Variables.NAME_TYPE);e.push("int "+g);void 0===Blockly.propc.vartype_[g]&&(Blockly.propc.vartype_[g]="LOCAL")}b=d+" "+a+"("+e.join(", ")+") {\n"+b+c+"}\n";Blockly.propc.method_declarations_[a]=d+" "+a+"("+e.join(", ")+");\n";b=Blockly.propc.scrub_(this,b);Blockly.propc.methods_[a]=b;return null};Blockly.propc.procedures_defnoreturn=Blockly.propc.procedures_defreturn;
Blockly.propc.procedures_callreturn=function(){for(var a=Blockly.propc.variableDB_.getName(this.getFieldValue("NAME").split("\u201c")[1].slice(0,-1),Blockly.Procedures.NAME_TYPE),b=[],c=0;c<this.arguments_.length;c++)b[c]=Blockly.propc.valueToCode(this,"ARG"+c,Blockly.propc.ORDER_NONE)||"null";a=a+"("+b.join(", ")+")";return"procedures_callnoreturn"===this.type?a+";\n":[a,Blockly.propc.ORDER_UNARY_POSTFIX]};Blockly.propc.procedures_callnoreturn=Blockly.propc.procedures_callreturn;
Blockly.propc.procedures_ifreturn=function(){var a="if ("+(Blockly.propc.valueToCode(this,"CONDITION",Blockly.propc.ORDER_NONE)||"false")+") {\n";if(this.hasReturnValue_){var b=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"null";a+="  return "+b+";\n"}else a+="  return;\n";return a+"}\n"};Blockly.Blocks.scribbler_loop={init:function(){this.appendDummyInput().appendField("loop");this.appendStatementInput("LOOP");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("programming"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_LOOP_TOOLTIP)}};
Blockly.propc.scribbler_loop=function(){var a=Blockly.propc.statementToCode(this,"LOOP");Blockly.propc.INFINITE_LOOP_TRAP&&(a=Blockly.propc.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+a);return"while(1) {\n"+a+"}\n"};
Blockly.Blocks.scribbler_limited_loop={init:function(){this.appendDummyInput().appendField("loop").appendField(new Blockly.FieldNumber("10",null,null,1),"LOOP_COUNT").appendField("times");this.appendStatementInput("LOOP");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("programming"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_LIMITED_LOOP_TOOLTIP)}};
Blockly.propc.scribbler_limited_loop=function(){var a=Blockly.propc.statementToCode(this,"LOOP");Blockly.propc.INFINITE_LOOP_TRAP&&(a=Blockly.propc.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+a);return"for (int __n = 0; __n < "+(this.getFieldValue("LOOP_COUNT")||"0")+"; __n++) {\n"+a+"}\n"};
Blockly.Blocks.scribbler_exit_loop={init:function(){this.appendDummyInput().appendField("exit loop");this.setPreviousStatement(!0,"Block");this.setColour(colorPalette.getColor("programming"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_EXIT_LOOP_TOOLTIP)}};Blockly.propc.scribbler_exit_loop=function(){return"break;\n"};
Blockly.Blocks.scribbler_simple_wait={init:function(){this.appendDummyInput().appendField("wait").appendField(new Blockly.FieldNumber("5",null,null,1),"WAITTIME").appendField(new Blockly.FieldDropdown([["seconds","1000"],["tenths of a second","100"],["milliseconds","1"]]),"TIMESCALE");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("programming"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_SIMPLE_WAIT_TOOLTIP);
this.onchange()},onchange:function(){var a=Number(this.getFieldValue("WAITTIME")||"1");1===Number(this.getFieldValue("TIMESCALE"))&&15E3<a?this.setWarningText("WARNING: If the units are in milliseconds,\nthe wait time must be less than 15000"):this.setWarningText(null)}};Blockly.propc.scribbler_simple_wait=function(){var a=this.getFieldValue("WAITTIME")||"1",b=this.getFieldValue("TIMESCALE");return"1"!==b?"for(int __i = 0; __i < "+a+"; __i++) pause("+b+");\n":"pause("+a+");\n"};
Blockly.Blocks.scribbler_wait={init:function(){this.appendValueInput("WAITTIME","Number").appendField("N,0,0,0","RANGEVALS0").appendField("wait").setCheck("Number");this.appendDummyInput().appendField(new Blockly.FieldDropdown([["seconds","1000"],["tenths of a second","100"],["milliseconds","1"]],function(a){this.sourceBlock_.newUnit(a)}),"TIMESCALE");this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("programming"));
this.setHelpUrl(Blockly.MSG_S3_CONTROL_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_WAIT_TOOLTIP)},newUnit:function(a){var b=this.getInput("WAITTIME").connection.targetBlock(),c="N,0,0,0";"1"!==a&&(c="R,0,15000,0");this.setFieldValue(c,"RANGEVALS0");b&&b.onchange&&b.onchange.call(b)}};
Blockly.propc.scribbler_wait=function(){var a=Blockly.propc.valueToCode(this,"WAITTIME",Blockly.propc.ORDER_NONE)||"1",b=this.getFieldValue("TIMESCALE");return"1"!==b?"for(int __i = 0; __i < "+a+"; __i++) pause("+b+");\n":"pause("+a+");\n"};
Blockly.Blocks.scribbler_if_line={init:function(){this.appendDummyInput().appendField("if the Scribbler").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"LINE_CONDITION").appendField("over").appendField(new Blockly.FieldDropdown([["the center","CENTER"],["the left edge","LEFT"],["the right edge","RIGHT"],["any part","DETECTED"]]),"LINE_POSITION").appendField("of a").appendField(new Blockly.FieldDropdown([["black","BLACK"],["white",
"WHITE"]]),"LINE_COLOR").appendField("line");this.appendStatementInput("IF_LINE").appendField();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_LINE_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):
(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("LINE_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};
Blockly.propc.scribbler_if_line=function(){var a=this.getFieldValue("LINE_CONDITION"),b=this.getFieldValue("LINE_POSITION"),c=this.getFieldValue("LINE_COLOR");return"if(s3_simpleLine(S3_"+a+", S3_"+b+", S3_"+c+")) {\n"+Blockly.propc.statementToCode(this,"IF_LINE")+"\n}"};
Blockly.Blocks.scribbler_simple_line={init:function(){this.appendDummyInput().appendField("line sensor").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"LINE_CONDITION").appendField("over").appendField(new Blockly.FieldDropdown([["the center","CENTER"],["the left edge","LEFT"],["the right edge","RIGHT"],["any part","DETECTED"]]),"LINE_POSITION").appendField("of a").appendField(new Blockly.FieldDropdown([["black","BLACK"],["white",
"WHITE"]]),"LINE_COLOR").appendField("line");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_LINE_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_LINE_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),
this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("LINE_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};Blockly.propc.scribbler_simple_line=function(){var a=this.getFieldValue("LINE_CONDITION"),b=this.getFieldValue("LINE_POSITION"),c=this.getFieldValue("LINE_COLOR");return["s3_simpleLine(S3_"+a+", S3_"+b+", S3_"+c+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_if_obstacle={init:function(){this.appendDummyInput().appendField("if an obstacle").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"OBSTACLE_CONDITION").appendField(new Blockly.FieldDropdown([["in front of","CENTER"],["to the left of","LEFT"],["to the right of","RIGHT"],["detected by","DETECTED"]]),"OBSTACLE_POSITION").appendField("the Scribbler");this.appendStatementInput("IF_OBSTACLE").appendField();
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_OBSTACLE_TOOLTIP)},checkForWas:function(a){void 0===a&&(a=this.getFieldValue("OBSTACLE_CONDITION"));"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):
(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("OBSTACLE_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};
Blockly.propc.scribbler_if_obstacle=function(){var a=this.getFieldValue("OBSTACLE_CONDITION"),b=this.getFieldValue("OBSTACLE_POSITION");return"if(s3_simpleObstacle(S3_"+a+", S3_"+b+")) {\n"+Blockly.propc.statementToCode(this,"IF_OBSTACLE")+"\n}"};
Blockly.Blocks.scribbler_simple_obstacle={init:function(){this.appendDummyInput().appendField("obstacle").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"OBSTACLE_CONDITION").appendField("detected").appendField(new Blockly.FieldDropdown([["in front","CENTER"],["to the left","LEFT"],["to the right","RIGHT"],["on either side","DETECTED"]]),"OBSTACLE_POSITION");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));
this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_OBSTACLE_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");
a.setAttribute("state",this.getFieldValue("OBSTACLE_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};Blockly.propc.scribbler_simple_obstacle=function(){var a=this.getFieldValue("OBSTACLE_CONDITION"),b=this.getFieldValue("OBSTACLE_POSITION");return["s3_simpleObstacle(S3_"+a+", S3_"+b+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_if_light={init:function(){this.appendDummyInput().appendField("if the most light").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"LIGHT_CONDITION").appendField(new Blockly.FieldDropdown([["in front","CENTER"],["to the left","LEFT"],["to the right","RIGHT"],["on all sides","DETECTED"]]),"LIGHT_POSITION").appendField("of the Scribbler");this.appendStatementInput("IF_LIGHT").appendField();this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_LIGHT_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),
this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("LIGHT_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};Blockly.propc.scribbler_if_light=function(){var a=this.getFieldValue("LIGHT_CONDITION"),b=this.getFieldValue("LIGHT_POSITION");return"if(s3_simpleLight(S3_"+a+", S3_"+b+")) {\n"+Blockly.propc.statementToCode(this,"IF_LIGHT")+"\n}"};
Blockly.Blocks.scribbler_simple_light={init:function(){this.appendDummyInput().appendField("light sensed is").appendField(new Blockly.FieldDropdown([["brightest","IS"],["darkest","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"LIGHT_CONDITION").appendField(" ").appendField(new Blockly.FieldDropdown([["in front","CENTER"],["to the left","LEFT"],["to the right","RIGHT"]]),"LIGHT_POSITION");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_LIGHT_HELPURL);
this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_LIGHT_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("LIGHT_CONDITION"));
return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};Blockly.propc.scribbler_simple_light=function(){var a=this.getFieldValue("LIGHT_CONDITION"),b=this.getFieldValue("LIGHT_POSITION");return["s3_simpleLight(S3_"+a+", S3_"+b+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_if_stalled={init:function(){this.appendDummyInput().appendField("if the Scribbler").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"STALLED_CONDITION").appendField("stuck");this.appendStatementInput("IF_STALLED").appendField();this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);
this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_STALLED_TOOLTIP)},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("STALLED_CONDITION"));
return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};Blockly.propc.scribbler_if_stalled=function(){return"if(s3_simpleStalled(S3_"+this.getFieldValue("STALLED_CONDITION")+")) {\n"+Blockly.propc.statementToCode(this,"IF_STALLED")+"\n}"};
Blockly.Blocks.scribbler_if_button={init:function(){this.appendDummyInput().appendField("if the red button").appendField(new Blockly.FieldDropdown([["is","IS"],["is not","IS_NOT"]],function(a){this.sourceBlock_.checkForWas(a)}),"BUTTON_CONDITION").appendField("pressed");this.appendStatementInput("IF_BUTTON");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"))},checkForWas:function(a){"WAS"===a||"WAS_NOT"===a?(this.setColour("#FF8800"),
this.setWarningText('WARNING: "was" ans "was not" conditions have been deprecated.\nPlease choose "is" or "is not".\nUse a variable block to keep track of the state of this sensor instead.')):(this.setColour(colorPalette.getColor("input")),this.setWarningText(null))},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("state",this.getFieldValue("BUTTON_CONDITION"));return a},domToMutation:function(a){a=a.getAttribute("state");this.checkForWas(a)}};
Blockly.propc.scribbler_if_button=function(){return"if(s3_simpleButton(S3_"+this.getFieldValue("BUTTON_CONDITION")+")) {\n"+Blockly.propc.statementToCode(this,"IF_BUTTON")+"\n}"};
Blockly.Blocks.scribbler_if_random={init:function(){this.appendDummyInput().appendField("if a virtual coin flip is").appendField(new Blockly.FieldDropdown([["heads",""],["tails","_NOT"]]),"RANDOM_INVERT");this.appendStatementInput("IF_RANDOM");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.setInputsInline(!0);this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_SENSORS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_IF_RANDOM_TOOLTIP)}};
Blockly.propc.scribbler_if_random=function(){return"if(s3_simpleRandom(S3_IS"+this.getFieldValue("RANDOM_INVERT")+")) {\n"+Blockly.propc.statementToCode(this,"IF_RANDOM")+"\n}"};
Blockly.Blocks.scribbler_drive={init:function(){this.appendDummyInput().appendField("drive").appendField(new Blockly.FieldDropdown([["forward",""],["backward","-"]]),"DRIVE_DIRECTION").appendField("and").appendField(new Blockly.FieldDropdown([["sharply to the left","SHARP_LEFT"],["gently to the left","GENTLE_LEFT"],["slightly to the left","SLIGHT_LEFT"],["straight","STRAIGHT"],["slightly to the right","SLIGHT_RIGHT"],["gently to the right","GENTLE_RIGHT"],["sharply to the right","SHARP_RIGHT"]]),
"DRIVE_ANGLE").appendField("at").appendField(new Blockly.FieldDropdown([["full","255"],["a quick","191"],["a gentle","127"],["a slow","63"]]),"DRIVE_SPEED").appendField("speed");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_ACTIONS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_DRIVE_TOOLTIP)}};
Blockly.propc.scribbler_drive=function(){var a=this.getFieldValue("DRIVE_DIRECTION"),b=this.getFieldValue("DRIVE_ANGLE"),c=this.getFieldValue("DRIVE_SPEED");return"s3_simpleDrive(S3_"+b+", "+a+c+");\n"};
Blockly.Blocks.scribbler_spin={init:function(){this.appendDummyInput().appendField("rotate").appendField(new Blockly.FieldDropdown([["\u21bb",""],["\u21ba","-"]]),"SPIN_DIRECTION").appendField("for").appendField(new Blockly.FieldAngle(90),"SPIN_ANGLE").appendField("at").appendField(new Blockly.FieldDropdown([["full","15"],["a quick","7"],["a gentle","3"],["a slow","1"]]),"SPIN_SPEED").appendField("speed");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));
this.setHelpUrl(Blockly.MSG_S3_SIMPLE_ACTIONS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_SPIN_TOOLTIP)}};Blockly.propc.scribbler_spin=function(){var a=this.getFieldValue("SPIN_DIRECTION"),b=this.getFieldValue("SPIN_ANGLE"),c=this.getFieldValue("SPIN_SPEED");return"s3_simpleSpin("+a+b+", "+c+", 0);\n"};
Blockly.Blocks.scribbler_stop={init:function(){this.appendDummyInput().appendField("stop driving");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_SIMPLE_ACTIONS_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_STOP_TOOLTIP)}};Blockly.propc.scribbler_stop=function(){return"s3_simpleStop();\n"};
Blockly.Blocks.scribbler_LED={init:function(){this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("change these LEDs:   ").appendField(new Blockly.FieldCheckbox("TRUE"),"LEFT_LED").appendField("  ").appendField(new Blockly.FieldCheckbox("TRUE"),"CENTER_LED").appendField("  ").appendField(new Blockly.FieldCheckbox("TRUE"),"RIGHT_LED").appendField("  ");var a=new Blockly.FieldColour("#000000"),b=new Blockly.FieldColour("#000000"),c=new Blockly.FieldColour("#000000");a.setColours(["#FF0000",
"#00FF00","#FF7F00","#000000"]).setColumns(2);b.setColours(["#FF0000","#00FF00","#FF7F00","#000000"]).setColumns(2);c.setColours(["#FF0000","#00FF00","#FF7F00","#000000"]).setColumns(2);this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("to these colors:  ").appendField(a,"LEFT_COLOR").appendField(b,"CENTER_COLOR").appendField(c,"RIGHT_COLOR").appendField(" ");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_LEDS_HELPURL);
this.setTooltip(Blockly.MSG_S3_SCRIBBLER_LED_TOOLTIP)}};
Blockly.propc.scribbler_LED=function(){var a=this.getFieldValue("LEFT_COLOR"),b=this.getFieldValue("CENTER_COLOR"),c=this.getFieldValue("RIGHT_COLOR"),d="";"TRUE"===this.getFieldValue("LEFT_LED")&&(d+="s3_setLED(S3_LEFT, S3_COLOR_"+a.substr(1,6).toUpperCase()+");\n");"TRUE"===this.getFieldValue("CENTER_LED")&&(d+="s3_setLED(S3_CENTER, S3_COLOR_"+b.substr(1,6).toUpperCase()+");\n");"TRUE"===this.getFieldValue("RIGHT_LED")&&(d+="s3_setLED(S3_RIGHT, S3_COLOR_"+c.substr(1,6).toUpperCase()+");\n");return d};
Blockly.Blocks.scribbler_play={init:function(){this.appendDummyInput().appendField("play a").appendField(new Blockly.FieldDropdown([["soprano","4"],["tenor","8"],["middle","16"],["low","32"],["deep","64"]]),"NOTE_OCTAVE").appendField(new Blockly.FieldDropdown([["A\u266d","3322"],["A","3520"],["A\u266f/B\u266d","3729"],["B","3951"],["C","4186"],["C\u266f/D\u266d","4435"],["D","4699"],["D\u266f/E\u266d","4978"],["E","5274"],["F","5588"],["F\u266f/G\u266d","5920"],["G","6272"],["G\u266f","6645"]]),"NOTE_FREQUENCY").appendField("for a").appendField(new Blockly.FieldDropdown([["sixteenth",
"63"],["dotted sixteenth","94"],["eighth","125"],["dotted eighth","188"],["quarter","250"],["dotted quarter","375"],["half","500"],["dotted half","750"],["whole","1000"],["dotted whole","1500"]]),"NOTE_DURATION").appendField("note at a").appendField(new Blockly.FieldDropdown([["loud","50"],["medium","30"],["quiet","15"]]),"NOTE_VOLUME").appendField("volume");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_SOUND_HELPURL);
this.setTooltip(Blockly.MSG_S3_SCRIBBLER_PLAY_TOOLTIP)}};Blockly.propc.scribbler_play=function(){var a=this.getFieldValue("NOTE_OCTAVE"),b=this.getFieldValue("NOTE_FREQUENCY"),c=this.getFieldValue("NOTE_DURATION"),d=this.getFieldValue("NOTE_VOLUME");return"s3_simplePlay(("+b+" / "+a+"), "+c+", "+d+");\n"};
Blockly.Blocks.move_motors={init:function(){this.appendDummyInput().appendField("drive at speeds of (%)");this.appendValueInput("LEFT_MOTOR_SPEED").appendField("R,-100,100,0","RANGEVALS0").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("left motor");this.appendValueInput("RIGHT_MOTOR_SPEED").appendField("R,-100,100,0","RANGEVALS1").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("right motor");this.appendValueInput("MOTOR_DURATION").appendField("R,0,15000,0","RANGEVALS2").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("for (milliseconds, 0 is continuous)",
"OPS");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.getField("RANGEVALS2").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_MOTORS_HELPURL);this.setTooltip(Blockly.MSG_S3_MOVE_MOTORS_TOOLTIP)}};
Blockly.propc.move_motors=function(){var a=Blockly.propc.valueToCode(this,"LEFT_MOTOR_SPEED",Blockly.propc.ORDER_ATOMIC)||"0",b=Blockly.propc.valueToCode(this,"RIGHT_MOTOR_SPEED",Blockly.propc.ORDER_ATOMIC)||"0",c=Blockly.propc.valueToCode(this,"MOTOR_DURATION",Blockly.propc.ORDER_ATOMIC)||"0";return"s3_motorSet("+a+", "+b+", "+c+");\n"};
Blockly.Blocks.move_motors_distance={init:function(){this.appendDummyInput().appendField("drive distances in ").appendField(new Blockly.FieldDropdown([["inches"," * 100000 / 1933"],["tenths of an inch"," * 10000 / 1933"],["centimeters"," * 10000 / 491"],["millimeters"," * 1000 / 491"],["encoder counts",""]],function(a){this.sourceBlock_.newUnit(a)}),"MULTIPLIER");this.appendValueInput("LEFT_MOTOR_DISTANCE").appendField("R,-633,633,0","RANGEVALS0").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("left motor distance");
this.appendValueInput("RIGHT_MOTOR_DISTANCE").appendField("R,-633,633,0","RANGEVALS1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("right motor distance");this.appendValueInput("MOTOR_SPEED").appendField("R,-100,100,0","RANGEVALS2").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("at speed (%)");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.getField("RANGEVALS2").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,
"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_MOTORS_HELPURL);this.setTooltip(Blockly.MSG_S3_MOVE_MOTORS_DISTANCE_TOOLTIP);this.newUnit(this.getFieldValue("MULTIPLIER"))},newUnit:function(a){var b=this.getInput("RIGHT_MOTOR_DISTANCE").connection,c=this.getInput("LEFT_MOTOR_DISTANCE").connection.targetBlock();b=b.targetBlock();var d="R,-633,633,0";" * 10000 / 1933"===a?d="R,-6333,6333,0":" * 10000 / 491"===a?d="R,-1608,1608,0":" * 1000 / 491"===
a?d="R,-16088,16088,0":""===a&&(d="R,-32767,32767,0");this.setFieldValue(d,"RANGEVALS0");this.setFieldValue(d,"RANGEVALS1");c&&c.onchange&&c.onchange.call(c);b&&b.onchange&&b.onchange.call(b)}};
Blockly.propc.move_motors_distance=function(){var a=this.getFieldValue("MULTIPLIER"),b=Blockly.propc.valueToCode(this,"LEFT_MOTOR_DISTANCE",Blockly.propc.ORDER_ATOMIC)||"0",c=Blockly.propc.valueToCode(this,"RIGHT_MOTOR_DISTANCE",Blockly.propc.ORDER_ATOMIC)||"0",d=Blockly.propc.valueToCode(this,"MOTOR_SPEED",Blockly.propc.ORDER_ATOMIC)||"0";return"s3_motorSetDistance("+b+a+", "+c+a+", "+d+");\n"};
Blockly.Blocks.move_motors_xy={init:function(){this.appendDummyInput().appendField("drive to a location");this.appendValueInput("X_DISTANCE").appendField("R,-20755429,20755429,0","RANGEVALS0").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("change (+/\u2212) in X");this.appendValueInput("Y_DISTANCE").appendField("R,-20755429,20755429,0","RANGEVALS1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("change (+/\u2212) in Y");this.appendValueInput("MOTOR_SPEED").appendField("R,-100,100,0",
"RANGEVALS2").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("at speed (%)");this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField("in").appendField(new Blockly.FieldDropdown([["inches"," * 100000 / 1933"],["tenths of an inch"," * 10000 / 1933"],["centimeters"," * 10000 / 491"],["millimeters"," * 1000 / 491"],["encoder counts",""]],function(a){this.sourceBlock_.newUnit(a)}),"MULTIPLIER");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);
this.getField("RANGEVALS2").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_MOTORS_HELPURL);this.setTooltip(Blockly.MSG_S3_MOVE_MOTORS_XY_TOOLTIP)},newUnit:function(a){var b=this.getInput("X_DISTANCE").connection,c=this.getInput("Y_DISTANCE").connection.targetBlock();b=b.targetBlock();var d="R,-633,633,0";" * 10000 / 1933"===a?d="R,-6334,6334,0":" * 10000 / 491"===
a?d="R,-1608,1608,0":" * 1000 / 491"===a?d="R,-16089,16089,0":""===a&&(d="R,-32768,32767,0");this.setFieldValue(d,"RANGEVALS0");this.setFieldValue(d,"RANGEVALS1");c&&c.onchange&&c.onchange.call(c);b&&b.onchange&&b.onchange.call(b)}};
Blockly.propc.move_motors_xy=function(){var a=this.getFieldValue("MULTIPLIER"),b=Blockly.propc.valueToCode(this,"X_DISTANCE",Blockly.propc.ORDER_ATOMIC)||"0",c=Blockly.propc.valueToCode(this,"Y_DISTANCE",Blockly.propc.ORDER_ATOMIC)||"0",d=Blockly.propc.valueToCode(this,"MOTOR_SPEED",Blockly.propc.ORDER_ATOMIC)||"0";return"s3_motorGotoXY("+b+a+", "+c+a+", "+d+");\n"};
Blockly.Blocks.move_motors_angle={init:function(){this.appendDummyInput().appendField("drive a turn");this.appendValueInput("ROTATE_ANGLE").appendField("R,-1080,1080,0","RANGEVALS0").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("that is (+/\u2212 degrees)");this.appendValueInput("ROTATE_RADIUS").appendField("R,-85,85,0","RANGEVALS1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("around a radius in (+/\u2212)").appendField(new Blockly.FieldDropdown([["inches of"," * 100000 / 1933"],
["tenths of an inch of"," * 10000 / 1933"],["centimeters of"," * 10000 / 491"],["millimeters of"," * 1000 / 491"],["encoder counts of",""]],function(a){this.sourceBlock_.newUnit(a)}),"RADIUS_MULTIPLIER");this.appendValueInput("ROTATE_SPEED").appendField("R,-100,100,0","RANGEVALS2").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("at speed (%)");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.getField("RANGEVALS2").setVisible(!1);this.setInputsInline(!1);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_MOTORS_HELPURL);this.setTooltip(Blockly.MSG_S3_MOVE_MOTORS_ANGLE_TOOLTIP)},newUnit:function(a){var b=this.getInput("ROTATE_RADIUS").connection.targetBlock(),c="R,-85,85,0";" * 10000 / 1933"===a?c="R,-850,850,0":" * 10000 / 491"===a?c="R,-216,216,0":" * 1000 / 491"===a?c="R,-2160,2160,0":""===a&&(c="R,-4400,4400,0");this.setFieldValue(c,"RANGEVALS1");b&&b.onchange&&
b.onchange.call(b)}};Blockly.propc.move_motors_angle=function(){var a=this.getFieldValue("RADIUS_MULTIPLIER"),b=Blockly.propc.valueToCode(this,"ROTATE_ANGLE",Blockly.propc.ORDER_ATOMIC),c=Blockly.propc.valueToCode(this,"ROTATE_RADIUS",Blockly.propc.ORDER_ATOMIC),d=Blockly.propc.valueToCode(this,"ROTATE_SPEED",Blockly.propc.ORDER_ATOMIC);return"s3_motorSetRotate("+b+", "+c+a+", "+d+");\n"};
Blockly.Blocks.play_polyphony={init:function(){this.appendDummyInput().appendField("play tones");this.appendValueInput("FREQUENCY_1").appendField("R,0,2000,0","RANGEVALS0").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("tone 1 (Hz)");this.appendValueInput("FREQUENCY_2").appendField("R,0,2000,0","RANGEVALS1").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("tone 2 (Hz)");this.appendValueInput("POLYPHONY_DURATION").appendField("R,0,15000,0","RANGEVALS2").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("for (milliseconds)");
this.appendValueInput("POLYPHONY_VOLUME").appendField("R,0,100,0","RANGEVALS3").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendField("at volume (%)");this.getField("RANGEVALS0").setVisible(!1);this.getField("RANGEVALS1").setVisible(!1);this.getField("RANGEVALS2").setVisible(!1);this.getField("RANGEVALS3").setVisible(!1);this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_SOUND_HELPURL);
this.setTooltip(Blockly.MSG_S3_PLAY_POLYPHONY_TOOLTIP)}};
Blockly.propc.play_polyphony=function(){var a=Blockly.propc.valueToCode(this,"FREQUENCY_1",Blockly.propc.ORDER_ATOMIC)||"522",b=Blockly.propc.valueToCode(this,"FREQUENCY_2",Blockly.propc.ORDER_ATOMIC)||"784",c=Blockly.propc.valueToCode(this,"POLYPHONY_DURATION",Blockly.propc.ORDER_ATOMIC)||"250";return"s3_setVolume(("+(Blockly.propc.valueToCode(this,"POLYPHONY_VOLUME",Blockly.propc.ORDER_ATOMIC)||"50")+" / 2));\ns3_playNote("+a+", "+b+", "+c+");\n"};
Blockly.Blocks.line_sensor={init:function(){this.appendDummyInput("").appendField("line sensor").appendField(new Blockly.FieldDropdown([["left reflectivity","LEFT"],["right reflectivity","RIGHT"]]),"LINE_SENSOR_CHOICE");this.setInputsInline(!1);this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_LINE_HELPURL);this.setTooltip(Blockly.MSG_S3_LINE_SENSOR_TOOLTIP)}};
Blockly.propc.line_sensor=function(){return["s3_lineSensor(S3_"+this.getFieldValue("LINE_SENSOR_CHOICE")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.obstacle_sensor={init:function(){this.appendDummyInput("").appendField("obstacle detected").appendField(new Blockly.FieldDropdown([["on the left","LEFT"],["on the right","RIGHT"],["in front","&&"],["by either sensor","||"]]),"OBSTACLE_SENSOR_CHOICE");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_OBSTACLE_HELPURL);this.setTooltip(Blockly.MSG_S3_OBSTACLE_SENSOR_TOOLTIP)}};
Blockly.propc.obstacle_sensor=function(){var a=this.getFieldValue("OBSTACLE_SENSOR_CHOICE");return"LEFT"===a||"RIGHT"===a?["s3_readObstacle(S3_"+a+")",Blockly.propc.ORDER_ATOMIC]:["(s3_readObstacle(S3_LEFT) "+a+" s3_readObstacle(S3_RIGHT))",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.stall_sensor={init:function(){this.appendDummyInput("").appendField("stall sensor").appendField(new Blockly.FieldDropdown([["tail wheel is not spinning","!s3_tailWheelMoving()"],["tail wheel is spinning","s3_tailWheelMoving()"],["drive wheels are stopped","!s3_motorsMoving()"],["drive wheels are turning","s3_motorsMoving()"],["Scribbler is stuck","s3_simpleStalled(S3_IS)"],["Scribbler is not stuck","s3_simpleStalled(S3_IS_NOT)"]]),"STALL_SENSOR_CHOICE");this.setOutput(!0,"Number");
this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_STALL_HELPURL);this.setTooltip(Blockly.MSG_S3_STALL_SENSOR_TOOLTIP)}};Blockly.propc.stall_sensor=function(){return[this.getFieldValue("STALL_SENSOR_CHOICE"),Blockly.propc.ORDER_ATOMIC]};Blockly.Blocks.button_pressed={init:function(){this.appendDummyInput("").appendField("the red botton is currently pressed");this.appendDummyInput("").appendField("(true or false)");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"))}};
Blockly.Blocks.spinning_sensor={init:function(){this.appendDummyInput("").appendField("drive wheels stalled");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_STALL_HELPURL);this.setTooltip(Blockly.MSG_S3_SPINNING_SENSOR_TOOLTIP)}};Blockly.propc.spinning_sensor=function(){this.getFieldValue("LGHT_SENSOR_CHOICE");return["!s3_motorsMoving()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.light_sensor={init:function(){this.appendDummyInput("").appendField("light sensor").appendField(new Blockly.FieldDropdown([["left reading","LEFT"],["center reading","CENTER"],["right reading","RIGHT"]]),"LGHT_SENSOR_CHOICE");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_LIGHT_HELPURL);this.setTooltip(Blockly.MSG_S3_LIGHT_SENSOR_TOOLTIP)}};
Blockly.propc.light_sensor=function(){return["s3_lightSensor(S3_"+this.getFieldValue("LGHT_SENSOR_CHOICE")+")",Blockly.propc.ORDER_ATOMIC]};Blockly.Blocks.reset_button_presses={init:function(){this.appendDummyInput("").appendField("reset button presses on last reset");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_RESET_BUTTON_HELPURL);this.setTooltip(Blockly.MSG_S3_RESET_BUTTON_PRESSES_TOOLTIP)}};
Blockly.propc.reset_button_presses=function(){return["s3_resetButtonCount()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_stop_servo={init:function(){"Scribbler Robot"===profile["default"].description?(this.setHelpUrl(Blockly.MSG_S3_SERVO_HELPURL),this.setColour(colorPalette.getColor("robot")),this.pinSet=profile["default"].digital):(this.setHelpUrl(Blockly.MSG_SERVO_HELPURL),this.setColour(colorPalette.getColor("output")),this.pinSet=profile["default"].digital.concat([["other","other"]]));this.setTooltip(Blockly.MSG_S3_SCRIBBLER_STOP_SERVO_TOOLTIP);this.addPinMenu("servo PIN","VALUE");this.appendDummyInput("VALUE").appendField("disable");
this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},addPinMenu:function(a,b){this.appendDummyInput("SET_PIN").appendField(a,"LABEL").appendField(new Blockly.FieldDropdown(this.pinSet,function(a){this.sourceBlock_.setToOther(a,b)}),"SERVO_PIN");this.moveBefore=b;this.otherPin=!1},setToOther:function(a,b){if("other"===a){this.otherPin=!0;var c=this.getFieldValue("LABEL");this.getInput("SET_PIN")&&this.removeInput("SET_PIN");this.appendValueInput("SERVO_PIN").appendField(c).setCheck("Number").appendField("A,"+
profile["default"].digital.toString(),"RANGEVALS0");this.getField("RANGEVALS0").setVisible(!1);b&&this.moveInputBefore("SERVO_PIN",b)}},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("otherpin",this.otherPin);return a},domToMutation:function(a){"true"===a.getAttribute("otherpin")&&this.setToOther("other",this.moveBefore)}};
Blockly.propc.scribbler_stop_servo=function(){var a=this.otherPin?Blockly.propc.valueToCode(this,"SERVO_PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("SERVO_PIN");for(var b="",c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)"fb360_init"!==c[d].type||c[d].getFieldValue("PIN")!==a&&c[d].getFieldValue("FB")!==a||(b="360");return""===b?(Blockly.propc.definitions_["include servo"]='#include "servo.h"',"servo_disable("+a+");\n"):"servo360_enable("+a+", 0);\n"};
Blockly.Blocks.scribbler_ping={init:function(){this.appendDummyInput("").appendField("Ping))) sensor on").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PIN").appendField("distance in").appendField(new Blockly.FieldDropdown([["inches","_inches"],["centimeters","_cm"]]),"SCALE");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("input"));this.setHelpUrl(Blockly.MSG_S3_PING_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_PING_TOOLTIP)}};
Blockly.propc.scribbler_ping=function(){var a=this.getFieldValue("PIN"),b=this.getFieldValue("SCALE");Blockly.propc.definitions_["include ping"]='#include "ping.h"';return["ping"+b+"("+a+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.analog_input={init:function(){this.appendDummyInput("").appendField("check analog PIN").appendField(new Blockly.FieldDropdown(profile["default"].analog),"ANALOG_PIN");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("io"));this.setHelpUrl(Blockly.MSG_S3_IO_HELPURL);this.setTooltip(Blockly.MSG_S3_ANALOG_INPUT_TOOLTIP)}};Blockly.propc.analog_input=function(){return["s3_readADC(S3_ADC_A"+(this.getFieldValue("ANALOG_PIN")||"0")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_boolean={init:function(){this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["true","1"],["false","0"]]),"BOOL");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("math"));this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_BOOLEAN_TOOLTIP)}};Blockly.propc.scribbler_boolean=function(){return[this.getFieldValue("BOOL"),Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_random_boolean={init:function(){this.appendDummyInput("").appendField("random true/false");this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("math"));this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_RANDOM_BOOLEAN_TOOLTIP)}};Blockly.propc.scribbler_random_boolean=function(){Blockly.propc.setups_.random_seed="srand(INA + CNT);";return["(rand() % 2)",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_random_number={init:function(){this.appendValueInput("A").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("random number from");this.appendValueInput("B").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("to");this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("math"));this.setHelpUrl(Blockly.MSG_S3_MATH_HELPURL);this.setTooltip(Blockly.MSG_S3_SCRIBBLER_RANDOM_NUMBER_TOOLTIP)}};
Blockly.Blocks.factory_reset={init:function(){this.appendDummyInput().appendField("restore s3 demo");this.setColour(colorPalette.getColor("programming"));this.setHelpUrl(Blockly.MSG_S3_FACTORY_RESET_HELPURL);this.setTooltip(Blockly.MSG_S3_FACTORY_RESET_TOOLTIP)}};Blockly.propc.factory_reset=function(){Blockly.propc.definitions_.s3_factory_reset="#pragma load_default_scribbler_binary";return""};
Blockly.Blocks.scribbler_serial_send_text={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["Terminal","T"],["WX module","W"],["XBee","X"]]),"OUTPUT").appendField("send text").appendField("\u201c").appendField(new Blockly.FieldTextInput(""),"MESSAGE_TEXT").appendField("\u201d");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);this.setTooltip(Blockly.MSG_S3_SERIAL_SEND_TEXT_TOOLTIP)}};
Blockly.propc.scribbler_serial_send_text=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";return'print("'+this.getFieldValue("MESSAGE_TEXT").replace(/"/g,'\\"').replace(/%/g,"%%")+'");\n'};
Blockly.Blocks.scribbler_serial_send_char={init:function(){this.appendValueInput("CHAR_VALUE").appendField(new Blockly.FieldDropdown([["Terminal","T"],["WX module","W"],["XBee","X"]]),"OUTPUT").appendField("send character").setCheck("Number");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);this.setTooltip(Blockly.MSG_S3_SERIAL_SEND_CHAR_TOOLTIP)}};
Blockly.propc.scribbler_serial_send_char=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";return'print("%c", '+Blockly.propc.valueToCode(this,"CHAR_VALUE",Blockly.propc.ORDER_ATOMIC)+");\n"};
Blockly.Blocks.scribbler_serial_send_decimal={init:function(){this.appendValueInput("DECIMAL_VALUE").setCheck("Number").appendField(new Blockly.FieldDropdown([["Terminal","T"],["WX module","W"],["XBee","X"]]),"OUTPUT").appendField("send number");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);this.setTooltip(Blockly.MSG_S3_SERIAL_SEND_DECIMAL_TOOLTIP)}};
Blockly.propc.scribbler_serial_send_decimal=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";return'print("%d", '+(Blockly.propc.valueToCode(this,"DECIMAL_VALUE",Blockly.propc.ORDER_ATOMIC)||0)+");\n"};
Blockly.Blocks.scribbler_serial_send_ctrl={init:function(){this.appendDummyInput().appendField(new Blockly.FieldDropdown([["Terminal","T"],["WX module","W"],["XBee","X"]]),"OUTPUT").appendField("send command").appendField(new Blockly.FieldDropdown([["carriage return","13"],["new line","10"],["backspace","127"],["clear screen","256"]]),"SERIAL_CHAR");this.setInputsInline(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setColour(colorPalette.getColor("protocols"));this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);
this.setTooltip(Blockly.MSG_S3_SERIAL_SEND_CTRL_TOOLTIP)}};Blockly.propc.scribbler_serial_send_ctrl=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";var a=this.getFieldValue("SERIAL_CHAR");return"256"===a?"term_cmd(CLS);\n":'print("%c", '+a+");\n"};
Blockly.Blocks.scribbler_serial_rx_byte={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendDummyInput("").appendField(new Blockly.FieldDropdown([["Terminal","T"],["WX module","W"],["XBee","X"]]),"OUTPUT").appendField("receive character");this.setOutput(!0,"Number");this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);this.setTooltip(Blockly.MSG_S3_SERIAL_RX_BYTE_TOOLTIP)}};
Blockly.propc.scribbler_serial_rx_byte=function(){Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";return["getChar()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.scribbler_serial_cursor_xy={init:function(){this.setColour(colorPalette.getColor("protocols"));this.appendValueInput("Y").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("Terminal set cursor position to row");this.appendValueInput("X").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendField("column");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setHelpUrl(Blockly.MSG_S3_COMMUNICATE_HELPURL);this.setTooltip(Blockly.MSG_S3_SERIAL_CURSOR_XY_TOOLTIP)}};
Blockly.propc.scribbler_serial_cursor_xy=function(){Blockly.propc.serial_terminal_=!0;Blockly.propc.setups_.s3_serial_baud="simpleterm_reopen(31,30,0,9600);";var a=Blockly.propc.valueToCode(this,"Y",Blockly.propc.ORDER_NONE),b=Blockly.propc.valueToCode(this,"X",Blockly.propc.ORDER_NONE);0>Number(a)?a=0:255<Number(a)&&(a=255);0>Number(b)?b=0:255<Number(b)&&(b=255);return"term_cmd(CRSRXY, "+b+", "+a+");\n"};
Blockly.Blocks.sirc_s3_get={helpUrl:Blockly.MSG_S3_SIRC_HELPURL,init:function(){this.setTooltip(Blockly.MSG_S3_SCRIBBLER_SIRC_TOOLTIP);var a=[["Onboard IR sensor","SCRIBBLER_OBS_RX"]].concat(profile["default"].digital);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Sony Remote value").appendField(new Blockly.FieldDropdown(a),"PIN");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};
Blockly.propc.sirc_s3_get=function(){var a=this.getFieldValue("PIN");Blockly.propc.definitions_.sirc='#include "sirc.h"';Blockly.propc.setups_.sirc="sirc_setTimeout(70);";return["sirc_button("+a+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.mic_s3_get={helpUrl:Blockly.MSG_S3_MIC_HELPURL,init:function(){this.setTooltip(Blockly.MSG_S3_SCRIBBLER_MIC_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("microphone volume detected");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,"Number")}};Blockly.propc.mic_s3_get=function(){Blockly.propc.setups_.s3_mic="s3_enableMic();";return["s3_readMic()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.s3_eeprom_read={helpUrl:Blockly.MSG_S3_MEMORY_HELPURL,init:function(){this.setTooltip(Blockly.MSG_S3_SCRIBBLER_MEMORY_READ_TOOLTIP);this.appendValueInput("ADDR").setCheck("Number").appendField("R,0,7936,0","RANGEVALS0").appendField("memory read from address");this.getField("RANGEVALS0").setVisible(!1);this.setInputsInline(!0);this.setOutput(!0,"Number");this.setColour(colorPalette.getColor("output"))}};
Blockly.propc.s3_eeprom_read=function(){return["s3_memoryRead("+Blockly.propc.valueToCode(this,"ADDR",Blockly.propc.ORDER_NONE)+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.s3_eeprom_write={helpUrl:Blockly.MSG_S3_MEMORY_HELPURL,init:function(){this.setTooltip(Blockly.MSG_S3_SCRIBBLER_MEMORY_WRITE_TOOLTIP);this.appendValueInput("VALUE").setCheck("Number").appendField("memory write");this.appendValueInput("ADDR").setCheck("Number").appendField("R,0,7936,0","RANGEVALS0").appendField("to address");this.getField("RANGEVALS0").setVisible(!1);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setInputsInline(!0);this.setColour(colorPalette.getColor("output"))}};
Blockly.propc.s3_eeprom_write=function(){var a=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE);return"s3_memoryWrite("+Blockly.propc.valueToCode(this,"ADDR",Blockly.propc.ORDER_NONE)+", "+a+");\n"};Blockly.Blocks.calibrate_line_sensor={init:function(){this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("line sensor calibrate");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.setHelpUrl(Blockly.MSG_S3_LINE_HELPURL);this.setTooltip(Blockly.MSG_S3_LINE_CALIBRATE_TOOLTIP)}};
Blockly.propc.calibrate_line_sensor=function(){Blockly.propc.methods_.s3_calibrate_line_sensor="void s3_calibrate_line_sensor(void) {int __lineSenCal[4];\n__lineSenCal[0] = s3_lineSensor(S3_LEFT);\n__lineSenCal[1] = s3_lineSensor(S3_RIGHT);\n__lineSenCal[2] = s3_lineSensor(S3_LEFT);\n__lineSenCal[3] = s3_lineSensor(S3_RIGHT);\nint __calibrate_timer = CNT + (CLKFREQ/1000) * 3672;\ns3_motorSet(75, -75, 0);\nwhile(CNT < __calibrate_timer) {int __tempLineSen = s3_lineSensor(S3_LEFT);\nif (__tempLineSen < __lineSenCal[0]) __lineSenCal[0] = __tempLineSen;\nif (__tempLineSen > __lineSenCal[2]) __lineSenCal[2] = __tempLineSen;\n__tempLineSen = s3_lineSensor(S3_RIGHT);\nif (__tempLineSen < __lineSenCal[1]) __lineSenCal[1] = __tempLineSen;\nif (__tempLineSen > __lineSenCal[3]) __lineSenCal[3] = __tempLineSen;}s3_motorSet(0, 0, 0);\nif (__lineSenCal[2] > __lineSenCal[0]) __lineSenCal[0] = __lineSenCal[2];\nif (__lineSenCal[3] < __lineSenCal[1]) __lineSenCal[1] = __lineSenCal[3];\nscribbler_set_line_threshold((__lineSenCal[0] + __lineSenCal[1]) / 2);\nscribbler_write_line_threshold();\n}";
Blockly.propc.method_declarations_.s3_calibrate_line_sensor="void s3_calibrate_line_sensor(void);";return"s3_calibrate_line_sensor();"};Blockly.Blocks||(Blockly.Blocks={});
Blockly.Blocks.sensor_ping={helpUrl:Blockly.MSG_PING_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SENSOR_PING_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Ping))) distance in").appendField(new Blockly.FieldDropdown([["inches","_inches"],["cm","_cm"],["\u00b5s",""]]),"UNIT");this.pinChoices=["PIN"];this.otherPin=[!1];this.addPinMenu("PIN",null,0);this.setOutput(!0,"Number");this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,
null)},addPinMenu:function(a,b,c){this.appendDummyInput("SET_PIN").appendField(a,"LABEL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat([["other","other"]]),function(a){this.sourceBlock_.setToOther(a,b,c)}),this.pinChoices[c]);this.moveBefore=b;this.otherPin[c]=!1},setToOther:function(a,b,c){if("other"===a)if(this.otherPin[c]=!0,a=this.getFieldValue("LABEL"),this.getInput("SET_PIN")&&this.removeInput("SET_PIN"),this.appendValueInput(this.pinChoices[c]).appendField(a).setCheck("Number").appendField("A,"+
profile["default"].digital.toString(),"RANGEVALS"+c),this.getField("RANGEVALS"+c).setVisible(!1),b)this.moveInputBefore(this.pinChoices[c],b);else{var d=this;setTimeout(function(){d.render()},200)}},mutationToDom:function(){for(var a=document.createElement("mutation"),b=0;b<this.pinChoices.length;b++)a.setAttribute("otherpin"+b,this.otherPin[b]);return a},domToMutation:function(a){for(var b=0;b<this.pinChoices.length;b++)"true"===a.getAttribute("otherpin"+b)&&this.setToOther("other",this.moveBefore,
b)}};Blockly.propc.sensor_ping=function(){var a=this.otherPin[0]?Blockly.propc.valueToCode(this,this.pinChoices[0],Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue(this.pinChoices[0]);var b=this.getFieldValue("UNIT");this.disabled||(Blockly.propc.definitions_["include ping"]='#include "ping.h"');return["ping"+b+"("+a+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.joystick_input_yaxis={helpUrl:Blockly.MSG_JOYSTICK_HELPURL,init:function(){this.chan=["x","X"];"joystick_input_yaxis"===this.type&&(this.chan=["y","Y"]);this.setTooltip(Blockly.MSG_JOYSTICK_INPUT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Joystick "+this.chan[0]+"-axis A/D").appendField(new Blockly.FieldDropdown(profile["default"].analog),"PIN"+this.chan[1]);this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,
null)}};Blockly.propc.joystick_input_yaxis=function(){var a=this.getFieldValue("PIN"+this.chan[1]);this.disabled||(Blockly.propc.definitions_["include abvolts"]='#include "abvolts.h"');return["ad_in("+a+") * 100 / 4096",Blockly.propc.ORDER_ATOMIC]};Blockly.Blocks.joystick_input_xaxis=Blockly.Blocks.joystick_input_yaxis;Blockly.propc.joystick_input_xaxis=Blockly.propc.joystick_input_yaxis;
Blockly.Blocks.PIR_Sensor={helpUrl:Blockly.MSG_PIR_HELPURL,init:function(){this.setTooltip(Blockly.MSG_PIR_SENSOR_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.pinChoices=["PIN"];this.otherPin=[!1];this.addPinMenu("PIR sensor PIN",null,0);this.setInputsInline(!0);this.setNextStatement(!1,null);this.setPreviousStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.sensor_ping.mutationToDom,domToMutation:Blockly.Blocks.sensor_ping.domToMutation,addPinMenu:Blockly.Blocks.sensor_ping.addPinMenu,
setToOther:Blockly.Blocks.sensor_ping.setToOther};Blockly.propc.PIR_Sensor=function(){return["input("+(this.otherPin[0]?Blockly.propc.valueToCode(this,this.pinChoices[0],Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue(this.pinChoices[0]))+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.sound_impact_run={helpUrl:Blockly.MSG_SOUND_IMPACT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SOUND_IMPACT_RUN_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block");this.updateConstMenu()},updateConstMenu:function(a,b){this.v_list=[];for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++)if("constant_define"===c[d].type){var e=c[d].getFieldValue("CONSTANT_NAME");
e===a&&b&&(e=b);e&&this.v_list.push([e,e])}this.v_list=uniq_fast(this.v_list);this.setPinMenus(a,b)},setPinMenus:function(a,b){var c=this.getFieldValue("PIN");this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("Sound Impact initialize PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN");c&&c===a&&b?this.setFieldValue(b,"PIN"):c&&this.setFieldValue(c,"PIN")}};
Blockly.propc.sound_impact_run=function(){if(!this.disabled){var a=this.getFieldValue("PIN");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);Blockly.propc.definitions_.sound_impact='#include "soundimpact.h"';Blockly.propc.setups_.sound_impact="int *__soundimpactcog = soundImpact_run("+a+");"}return""};
Blockly.Blocks.sound_impact_get={helpUrl:Blockly.MSG_SOUND_IMPACT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SOUND_IMPACT_GET_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Sound Impact get count");this.setNextStatement(!1,null);this.setPreviousStatement(!1,null);this.setOutput(!0,"Number")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Sound Impact initialize")?this.setWarningText("WARNING: You must use a sound impact sensor\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.sound_impact_get=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Sound Impact initialize")?"// ERROR: Missing sound impact sensor initialize block!":["soundImpact_getCount()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.sound_impact_end={helpUrl:Blockly.MSG_SOUND_IMPACT_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SOUND_IMPACT_END_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Sound Impact close");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Sound Impact initialize")?this.setWarningText("WARNING: You must use a sound impact sensor\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.sound_impact_end=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Sound Impact initialize")?"// ERROR: Missing sound impact sensor initialize block!":"soundImpact_end(__soundimpactcog);\n"};
Blockly.Blocks.colorpal_enable={helpUrl:Blockly.MSG_COLORPAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COLORPAL_ENABLE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("ColorPal initialize PIN").appendField(new Blockly.FieldDropdown(profile["default"].digital,function(a){this.sourceBlock_.onPinSet(a)}),"IO_PIN");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.colorPalPin=this.getFieldValue("IO_PIN");this.onPinSet()},onchange:function(a){this.colorPalPin=
this.getFieldValue("IO_PIN");if(a&&(a.oldXml||a.xml))this.onPinSet(null)},onPinSet:function(a){var b=this.colorPalPin;this.colorPalPin=a;for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++){var e=c[d].colorpalPins,f=c[d].onchange;e&&a?(e.call(c[d],b,a),f&&f.call(c[d],{xml:!0})):e&&e.call(c[d])}}};
Blockly.propc.colorpal_enable=function(){var a=this.getFieldValue("IO_PIN");this.disabled||(Blockly.propc.definitions_.colorpal='#include "colorpal.h"',Blockly.propc.global_vars_["colorpal"+a]="colorPal *cpal"+a+";",Blockly.propc.setups_["colorpal"+a]="cpal"+a+" = colorPal_open("+a+");");return""};
Blockly.Blocks.colorpal_get_colors_raw={helpUrl:Blockly.MSG_COLORPAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COLORPAL_GET_COLORS_RAW_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("ColorPal raw colors store R in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"R_STORAGE");this.appendDummyInput().appendField("G in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"G_STORAGE");this.appendDummyInput().appendField("B in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"B_STORAGE");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.cp_pins=[];this.warnFlag=0;this.colorpalPins()},mutationToDom:function(){var a=document.createElement("mutation");this.getInput("CPIN")&&a.setAttribute("cpin",this.getFieldValue("CP_PIN"));a.setAttribute("pinmenu",JSON.stringify(this.cp_pins));return a},domToMutation:function(a){var b=a.getAttribute("cpin");this.cp_pins=JSON.parse(a.getAttribute("pinmenu"));"null"===b&&(b=null);this.getInput("CPIN")&&
this.removeInput("CPIN");b&&(this.appendDummyInput("CPIN").appendField("PIN").appendField(new Blockly.FieldDropdown(this.cp_pins),"CP_PIN"),this.setFieldValue(b,"CP_PIN"))},colorpalPins:function(a,b){var c="-1";0<this.cp_pins.length&&(c=this.cp_pins[0][0]);this.cp_pins.length=0;this.getInput("CPIN")&&(c=this.getFieldValue("CP_PIN"));this.updateCpin();this.getInput("CPIN")&&this.removeInput("CPIN");1<this.cp_pins.length&&(this.appendDummyInput("CPIN").appendField("PIN").appendField(new Blockly.FieldDropdown(this.cp_pins),
"CP_PIN"),c===a||null===a?this.setFieldValue(b,"CP_PIN"):this.getInput("CPIN")&&"-1"!==c&&this.setFieldValue(c,"CP_PIN"))},updateCpin:function(){for(var a=Blockly.getMainWorkspace().getAllBlocks(),b=this.cp_pins.length=0;b<a.length;b++)if("colorpal_enable"===a[b].type){var c=a[b].colorPalPin||a[b].getFieldValue("IO_PIN");c&&this.cp_pins.push([c,c])}this.cp_pins=uniq_fast(this.cp_pins)},onchange:function(a){if(a&&(a.oldXml||a.type===Blockly.Events.CREATE||"CP_PIN"===a.name&&a.blockId===this.id||0<
this.warnFlag))if(a=Blockly.getMainWorkspace().getAllBlocks(),-1===a.toString().indexOf("ColorPal initialize"))this.setWarningText("WARNING: You must use a ColorPal\ninitialize block at the beginning of your program!");else if(this.setWarningText(null),this.warnFlag--,this.getInput("CPIN")){for(var b="",c=0;c<a.length;c++)"colorpal_enable"===a[c].type&&(b+=(a[c].colorPalPin||a[c].getFieldValue("IO_PIN"))+",");-1===b.indexOf(this.getFieldValue("CP_PIN"))&&(this.setWarningText("WARNING: You must use choose a new PIN for this block!"),
this.warnFlag=3*a.length)}}};
Blockly.propc.colorpal_get_colors_raw=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("ColorPal initialize"))return"// ERROR: Missing colorPal initialize block!";var a=Blockly.propc.variableDB_.getName(this.getFieldValue("R_STORAGE"),Blockly.Variables.NAME_TYPE),b=Blockly.propc.variableDB_.getName(this.getFieldValue("G_STORAGE"),Blockly.Variables.NAME_TYPE),c=Blockly.propc.variableDB_.getName(this.getFieldValue("B_STORAGE"),Blockly.Variables.NAME_TYPE),d="0";0<this.cp_pins.length&&
(d=this.cp_pins[0][0]);this.getInput("CPIN")&&(d=this.getFieldValue("CP_PIN"));return"colorPal_getRGB(cpal"+d+", &"+a+", &"+b+", &"+c+");"};
Blockly.Blocks.colorpal_get_colors={helpUrl:Blockly.MSG_COLORPAL_HELPURL,init:function(){this.setTooltip(Blockly.MSG_COLORPAL_GET_COLORS_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("ColorPal store color in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"COLOR");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.cp_pins=[];this.warnFlag=0;this.colorpalPins()},mutationToDom:Blockly.Blocks.colorpal_get_colors_raw.mutationToDom,
domToMutation:Blockly.Blocks.colorpal_get_colors_raw.domToMutation,colorpalPins:Blockly.Blocks.colorpal_get_colors_raw.colorpalPins,updateCpin:Blockly.Blocks.colorpal_get_colors_raw.updateCpin,onchange:Blockly.Blocks.colorpal_get_colors_raw.onchange};
Blockly.propc.colorpal_get_colors=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("ColorPal initialize"))return"// ERROR: Missing colorPal initialize block!";var a=Blockly.propc.variableDB_.getName(this.getFieldValue("COLOR"),Blockly.Variables.NAME_TYPE);this.disabled||(Blockly.propc.global_vars_.colorpal_rr="int cpRR = 0;",Blockly.propc.global_vars_.colorpal_gg="int cpGG = 0;",Blockly.propc.global_vars_.colorpal_bb="int cpBB = 0;");var b="0";0<this.cp_pins.length&&
(b=this.cp_pins[0][0]);this.getInput("CPIN")&&(b=this.getFieldValue("CP_PIN"));return"colorPal_getRGB(cpal"+b+", &cpRR, &cpGG, &cpBB);\n\t"+a+" = colorPalRRGGBB(cpRR, cpGG, cpBB);"};
Blockly.Blocks.fp_scanner_init={helpUrl:Blockly.MSG_FPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_FPS_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.sound_impact_run.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("RXPIN"),d=this.getFieldValue("TXPIN");this.getInput("PINS")&&this.removeInput("PINS");
this.appendDummyInput().appendField("Fingerprint Scanner initialize RX").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"RXPIN").appendField("TX").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"TXPIN");c&&c===a&&b?this.setFieldValue(b,"RXPIN"):c&&this.setFieldValue(c,"RXPIN");d&&d===a&&b?this.setFieldValue(b,"TXPIN"):d&&this.setFieldValue(d,"TXPIN")}};
Blockly.propc.fp_scanner_init=function(){if(!this.disabled){var a=this.getFieldValue("RXPIN"),b=this.getFieldValue("TXPIN");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);-1===profile["default"].digital.toString().indexOf(pin_out+","+pin_out)&&(b="MY_"+b);Blockly.propc.global_vars_.fpScannerObj="fpScanner *fpScan;";Blockly.propc.definitions_.fpScannerDef='#include "fingerprint.h"';Blockly.propc.setups_.fpScanner="fpScan = fingerprint_open("+b+", "+a+");"}return""};
Blockly.Blocks.fp_scanner_add={helpUrl:Blockly.MSG_FPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_FPS_ADD_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Fingerprint Scanner").appendField(new Blockly.FieldDropdown([["capture and save to","ADD"],["delete capture for","DEL"],["delete all captures","ALL"]],function(a){this.sourceBlock_.setAction_({ACTION:a})}),"ACTION");this.appendValueInput("USER").setCheck("Number").appendField("ID");this.setInputsInline(!0);
this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("ACTION");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setAction_({ACTION:a})},setAction_:function(a){var b=this.getInput("USER");"ALL"!==a.ACTION?b||this.appendValueInput("USER").setCheck("Number").appendField("ID"):b&&this.removeInput("USER")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Fingerprint Scanner initialize")?
this.setWarningText("WARNING: You must use a Fingerprint Scanner\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.fp_scanner_add=function(){var a=this.getFieldValue("ACTION"),b="1";"ALL"!==a&&(b=Blockly.propc.valueToCode(this,"USER",Blockly.propc.ORDER_NONE)||"1");var c="";-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Fingerprint Scanner initialize")?c="// ERROR: Fingerprint Scanner is not initialized!\n":("ADD"===a&&(c="fingerprint_add(fpScan, "+b+", 3, 0);\n"),"DEL"===a&&(c="fingerprint_deleteUser(fpScan, "+b+");\n"),"ALL"===a&&(c="fingerprint_deleteUser(fpScan, 0);\n"));
return c};
Blockly.Blocks.fp_scanner_scan={helpUrl:Blockly.MSG_FPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_FPS_SCAN_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Fingerprint Scanner").appendField(new Blockly.FieldDropdown([["scan and identify","SCAN"],["scan and compare","COMP"],["count number of IDs","COUNT"]],function(a){this.sourceBlock_.setAction_({ACTION:a})}),"ACTION");this.setInputsInline(!0);this.setOutput(!0,"Number")},mutationToDom:function(){var a=document.createElement("mutation"),
b=this.getFieldValue("ACTION");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setAction_({ACTION:a})},setAction_:function(a){var b=this.getInput("USER");"COMP"===a.ACTION?b||this.appendValueInput("USER").setCheck("Number").appendField("to ID"):b&&this.removeInput("USER")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Fingerprint Scanner initialize")?this.setWarningText("WARNING: You must use a Fingerprint Scanner\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};
Blockly.propc.fp_scanner_scan=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Fingerprint Scanner initialize"))return"// ERROR: Fingerprint Scanner is not initialized!\n";var a=this.getFieldValue("ACTION"),b="1";"COMP"===a&&(b=Blockly.propc.valueToCode(this,"USER",Blockly.propc.ORDER_NONE)||"1");var c="0";"fpScanner *fpScan;"===Blockly.propc.global_vars_.fpScannerObj&&("SCAN"===a&&(Blockly.propc.global_vars_.fpScannerFunc="int fingerScanner(int __u) {int r;\nfingerprint_scan(fpScan, __u, &r);\nif (__u != 0 && r != 0) return 1;\n else return r;}",c=
"fingerScanner(0)"),"COMP"===a&&(Blockly.propc.global_vars_.fpScannerFunc="int fingerScanner(int __u) {int r;\nfingerprint_scan(fpScan, __u, &r);\nif (__u != 0 && r != 0) return 1;\n else return r;}",c="fingerScanner("+b+")"),"COUNT"===a&&(c="fingerprint_countUsers(fpScan)"));return[c,Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.MX2125_acceleration_xaxis={helpUrl:Blockly.MSG_MEMSIC_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MX2125_ACCELERATION_XAXIS_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.chan=["x","X"];this.pinChoices=["PIN"];this.otherPin=[!1];-1<this.type.indexOf("yaxis")&&(this.chan=["y","Y"]);this.pinChoices=["PIN"+this.chan[1]];this.res=["acceleration","accel"];-1<this.type.indexOf("tilt")&&(this.res=["tilt","tilt"]);this.addPinMenu("Memsic "+this.res[0]+" "+this.chan[0]+
"-axis PIN",null,0);this.setInputsInline(!0);this.setNextStatement(!1,null);this.setPreviousStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.sensor_ping.mutationToDom,domToMutation:Blockly.Blocks.sensor_ping.domToMutation,addPinMenu:Blockly.Blocks.sensor_ping.addPinMenu,setToOther:Blockly.Blocks.sensor_ping.setToOther};
Blockly.propc.MX2125_acceleration_xaxis=function(){this.disabled||(Blockly.propc.definitions_.include_mx2125='#include "mx2125.h"');var a=this.otherPin[0]?Blockly.propc.valueToCode(this,"PIN"+this.chan[1],Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN"+this.chan[1]);return["mx_"+this.res[1]+"("+a+")",Blockly.propc.ORDER_NONE]};Blockly.Blocks.MX2125_acceleration_yaxis=Blockly.Blocks.MX2125_acceleration_xaxis;Blockly.propc.MX2125_acceleration_yaxis=Blockly.propc.MX2125_acceleration_xaxis;
Blockly.Blocks.MX2125_tilt_xaxis=Blockly.Blocks.MX2125_acceleration_xaxis;Blockly.propc.MX2125_tilt_xaxis=Blockly.propc.MX2125_acceleration_xaxis;Blockly.Blocks.MX2125_tilt_yaxis=Blockly.Blocks.MX2125_acceleration_xaxis;Blockly.propc.MX2125_tilt_yaxis=Blockly.propc.MX2125_acceleration_xaxis;
Blockly.Blocks.MX2125_rotation={helpUrl:Blockly.MSG_MEMSIC_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MX2125_ROTATION_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.pinChoices=["PINX","PINY"];this.otherPin=[!1,!1];this.addPinMenu("Memsic rotation x-axis PIN","YAXIS",0);this.addPinMenu("y-axis PIN","XAXIS",1);this.setInputsInline(!0);this.setNextStatement(!1,null);this.setPreviousStatement(!1,null);this.setOutput(!0,"Number")},mutationToDom:Blockly.Blocks.sensor_ping.mutationToDom,
domToMutation:Blockly.Blocks.sensor_ping.domToMutation,addPinMenu:Blockly.Blocks.sensor_ping.addPinMenu,setToOther:Blockly.Blocks.sensor_ping.setToOther};
Blockly.propc.MX2125_rotation=function(){this.disabled||(Blockly.propc.definitions_.include_mx2125='#include "mx2125.h"');for(var a=["0","0"],b=0;b<this.pinChoices.length;b++)a[b]=this.otherPin[b]?Blockly.propc.valueToCode(this,this.pinChoices[b],Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue(this.pinChoices[b]);return["mx_rotate("+a[0]+", "+a[1]+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.MMA7455_init={helpUrl:Blockly.MSG_ACCELEROMETER_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MMA7455_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Accelerometer initialize CS").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PINZ").appendField("DATA").appendField(new Blockly.FieldDropdown(profile["default"].digital),"PINX").appendField("CLK").appendField(new Blockly.FieldDropdown(profile["default"].digital),
"PINY");this.setInputsInline(!1);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block")}};Blockly.propc.MMA7455_init=function(){var a=this.getFieldValue("PINX"),b=this.getFieldValue("PINY"),c=this.getFieldValue("PINZ");this.disabled||(Blockly.propc.definitions_.include_mma7455='#include "mma7455.h"',Blockly.propc.global_vars_.mma_7455_tempVars="short int __tmpX, __tmpY, __tmpZ;",Blockly.propc.setups_.mma_7455="MMA7455_init("+a+", "+b+", "+c+");");return""};
Blockly.Blocks.MMA7455_acceleration={helpUrl:Blockly.MSG_ACCELEROMETER_HELPURL,init:function(){this.setTooltip(Blockly.MSG_MMA7455_ACCELERATION_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Accelerometer store x-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"X_VAR").appendField(" y-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"Y_VAR").appendField(" z-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"Z_VAR");this.setInputsInline(!1);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Accelerometer initialize")?this.setWarningText("WARNING: You must use an Accelerometer\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.MMA7455_acceleration=function(){var a="";if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Accelerometer initialize"))a+="// ERROR: Missing Accelerometer initialize block!";else{var b=Blockly.propc.variableDB_.getName(this.getFieldValue("X_VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.propc.variableDB_.getName(this.getFieldValue("Y_VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.propc.variableDB_.getName(this.getFieldValue("Z_VAR"),Blockly.Variables.NAME_TYPE);a=a+"MMA7455_getxyz10(&__tmpX, &__tmpY, &__tmpZ);\n"+
(b+" = (int) __tmpX;\n"+c+" = (int) __tmpY;\n"+d+" = (int) __tmpZ;\n")}return a};
Blockly.Blocks.HMC5883L_init={helpUrl:Blockly.MSG_COMPASS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_HMC5883L_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Compass initialize SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital),"SCL");this.appendDummyInput().appendField("SDA").appendField(new Blockly.FieldDropdown(profile["default"].digital),"SDA");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,
null)}};Blockly.propc.HMC5883L_init=function(){var a=this.getFieldValue("SCL"),b=this.getFieldValue("SDA");this.disabled||(Blockly.propc.definitions_.HMC5883L='#include "compass3d.h"',Blockly.propc.setups_.HMC5883L="i2c *compass_bus = i2c_newbus("+a+", "+b+", 0);\n\tcompass_init(compass_bus);");return""};
Blockly.Blocks.HMC5883L_read={helpUrl:Blockly.MSG_COMPASS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_HMC5883L_READ_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Compass heading store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"HEADING");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Compass initialize")?
this.setWarningText("WARNING: You must use a Compass\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.HMC5883L_read=function(){var a="";if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Compass initialize"))a+="// ERROR: Missing Compass initialize block!";else{var b=Blockly.propc.variableDB_.getName(this.getFieldValue("HEADING"),Blockly.Variables.NAME_TYPE);this.disabled||(Blockly.propc.global_vars_.compass_vars="int __compX, __compY, __compZ;\nfloat __compH;\n");a=a+"compass_read(bus, &__compX, &__compY, &__compZ);\n\t__compH = atan2(((float) __compY), (((float) __compX)) * 180.0/PI;\n\tif(__compH < 0.0) __compH = (360.0 + __compH);\n"+
("\t"+b+" = (int) __compH;\n")}return a};
Blockly.Blocks.lsm9ds1_init={helpUrl:Blockly.MSG_IMU_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LSM9DS1_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setInputsInline(!1);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block");this.updateConstMenu()},updateConstMenu:Blockly.Blocks.sound_impact_run.updateConstMenu,setPinMenus:function(a,b){var c=["PIN_SCL","PIN_SCL","PIN_CSAG","PIN_CSM"],d=[this.getFieldValue("PIN_SCL"),this.getFieldValue("PIN_SCL"),
this.getFieldValue("PIN_CSAG"),this.getFieldValue("PIN_CSM")];this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("IMU initialize SCL").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN_SCL").appendField("SDIO").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN_SDIO").appendField("CS_AG").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN_CSAG").appendField("CS_M").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),
"PIN_CSM");for(var e=0;4>e;e++)d[e]&&d[e]===a&&b?this.setFieldValue(b,c[e]):d[e]&&this.setFieldValue(d[e],c[e])}};
Blockly.propc.lsm9ds1_init=function(){for(var a=[this.getFieldValue("PIN_SCL"),this.getFieldValue("PIN_SDIO"),this.getFieldValue("PIN_CSAG"),this.getFieldValue("PIN_CSM")],b=0;3>b;b++)-1===profile["default"].digital.toString().indexOf(a[b]+","+a[b])&&(a[b]="MY_"+a[b]);this.disabled||(Blockly.propc.definitions_.include_lsm9ds1='#include "lsm9ds1.h"',Blockly.propc.setups_.lsm9ds1_init="imu_init("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+");",Blockly.propc.global_vars_.lsm9ds1_vars="float __imuX, __imuY, __imuZ, __compI;\n");
return""};
Blockly.Blocks.lsm9ds1_mag_calibrate={helpUrl:Blockly.MSG_IMU_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LSM9DS1_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("IMU calibrate magnetometer");this.setInputsInline(!0);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize")?this.setWarningText("WARNING: You must use an IMU\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.lsm9ds1_mag_calibrate=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize")?"// ERROR: Missing IMU initialize block!":"high(26);high(27);imu_calibrateMag();low(26);low(27);"};
Blockly.Blocks.lsm9ds1_read={helpUrl:Blockly.MSG_IMU_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LSM9DS1_READ_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("IMU read").appendField(new Blockly.FieldDropdown([["accelerometer (100ths of g's)","Accel"],["gyroscope (100ths of deg/s)","Gyro"],["magnetometer (100ths of gauss)","Mag"]]),"SENSOR").appendField("store X-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"X_VAR").appendField(" y-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"Y_VAR").appendField(" z-axis in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"Z_VAR");this.setInputsInline(!1);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize")?this.setWarningText("WARNING: You must use an IMU\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.lsm9ds1_read=function(){var a="";if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize"))a+="// ERROR: Missing IMU initialize block!";else{var b=this.getFieldValue("SENSOR"),c=Blockly.propc.variableDB_.getName(this.getFieldValue("X_VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.propc.variableDB_.getName(this.getFieldValue("Y_VAR"),Blockly.Variables.NAME_TYPE),e=Blockly.propc.variableDB_.getName(this.getFieldValue("Z_VAR"),Blockly.Variables.NAME_TYPE);a=a+
("imu_read"+b+"Calculated(&__imuX, &__imuY, &__imuZ);\n")+(c+" = (int) (100.0 * __imuX);\n")+(d+" = (int) (100.0 * __imuY);\n");a+=e+" = (int) (100.0 * __imuZ);\n"}return a};
Blockly.Blocks.lsm9ds1_tilt={helpUrl:Blockly.MSG_IMU_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LSM9DS1_TILT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("IMU tilt").appendField(new Blockly.FieldDropdown([["x-axis","X"],["y-axis","Y"],["z-axis","Z"]],function(a){this.sourceBlock_.setAxes_({ACTION:a})}),"G_AXIS").appendField("points up/down");this.appendDummyInput("TILT1").appendField("store y-tilt in","A1").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),
"VAR1");this.appendDummyInput("TILT2").appendField("z-tilt in","A2").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR2");this.setInputsInline(!0);this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("G_AXIS");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setAxes_({ACTION:a})},setAxes_:function(a){"X"===a.ACTION?(this.setFieldValue("store y-tilt in",
"A1"),this.setFieldValue("z-tilt in","A2")):"Y"===a.ACTION?(this.setFieldValue("store x-tilt in","A1"),this.setFieldValue("z-tilt in","A2")):(this.setFieldValue("store x-tilt in","A1"),this.setFieldValue("y-tilt in","A2"))},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize")?this.setWarningText("WARNING: You must use an IMU\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.lsm9ds1_tilt=function(){var a="";if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize"))a+="// ERROR: Missing IMU initialize block!";else{var b="__imu"+this.getFieldValue("A1")[6].toUpperCase(),c="__imu"+this.getFieldValue("A2")[0].toUpperCase(),d="__imu"+this.getFieldValue("G_AXIS"),e=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR1"),Blockly.Variables.NAME_TYPE),f=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR2"),Blockly.Variables.NAME_TYPE);
a=a+"imu_readAccelCalculated(&__imuX, &__imuY, &__imuZ);\n"+(e+" = (int) (atan2("+b+", "+d+") * 180.0/PI);\n")+(f+" = (int) (atan2("+c+", "+d+") * 180.0/PI);\n")}return a};
Blockly.Blocks.lsm9ds1_heading={helpUrl:Blockly.MSG_IMU_HELPURL,init:function(){this.setTooltip(Blockly.MSG_LSM9DS1_HEADING_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("IMU heading").appendField(new Blockly.FieldDropdown([["z-axis points forward","__imuZ"],["z-axis points backward","(-1.0*__imuZ)"],["y-axis points forward","__imuY"],["y axis points backward","(-1.0*__imuY)"],["x-axis points forward","(-1.0*__imuX)"],["x-axis points backward","__imuX"]],
function(a){this.sourceBlock_.setAxes_({ACTION:a})}),"FB_AXIS").appendField(" ");this.appendDummyInput("MENU2").appendField(new Blockly.FieldDropdown([["y-axis points left","__imuY"],["y-axis points right","(-1.0*__imuY)"],["x-axis points left","(-1.0*__imuX)"],["x-axis points right","__imuX"]]),"LR_AXIS");this.appendDummyInput("IMUVAR").appendField("store in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR");this.setInputsInline(!0);this.setNextStatement(!0,null);this.setPreviousStatement(!0,
"Block")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getFieldValue("FB_AXIS");a.setAttribute("action",b);return a},domToMutation:function(a){a=a.getAttribute("action");this.setAxes_({ACTION:a})},setAxes_:function(a){this.getInput("MENU2")&&this.removeInput("MENU2");var b=a.ACTION[a.ACTION.length-1];")"===b&&(b=a.ACTION[a.ACTION.length-2]);"X"===b?this.appendDummyInput("MENU2").appendField(new Blockly.FieldDropdown([["y-axis points left","__imuY"],["y-axis points right",
"(-1.0*__imuY)"],["z-axis points left","__imuZ"],["z-axis points right","(-1.0*__imuZ)"]]),"LR_AXIS"):"Y"===b?this.appendDummyInput("MENU2").appendField(new Blockly.FieldDropdown([["x-axis points left","(-1.0*__imuX)"],["x-axis points right","__imuX"],["z-axis points left","__imuZ"],["z-axis points right","(-1.0*__imuZ)"]]),"LR_AXIS"):this.appendDummyInput("MENU2").appendField(new Blockly.FieldDropdown([["y-axis points left","__imuY"],["y-axis points right","(-1.0*__imuY)"],["x-axis points left",
"(-1.0*__imuX)"],["x-axis points right","__imuX"]]),"LR_AXIS");this.moveInputBefore("MENU2","IMUVAR")},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize")?this.setWarningText("WARNING: You must use an IMU\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.lsm9ds1_heading=function(){var a="";if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("IMU initialize"))a+="// ERROR: Missing IMU initialize block!";else{var b=this.getFieldValue("FB_AXIS"),c=this.getFieldValue("LR_AXIS"),d=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=a+"imu_readMagCalculated(&__imuX, &__imuY, &__imuZ);\n"+("__compI = atan2("+c+", "+b+") * 180.0/PI;\n")+"if(__compI < 0.0) __compI = (360.0 + __compI);\n"+
(d+" = (int) __compI;\n")}return a};
Blockly.Blocks.GPS_init={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setNextStatement(!0,null);this.setPreviousStatement(!0,"Block");this.updateConstMenu()},updateConstMenu:Blockly.Blocks.sound_impact_run.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("TXPIN"),d=this.getFieldValue("BAUD");this.getInput("PINS")&&this.removeInput("PINS");this.appendDummyInput("PINS").appendField("GPS module initialize TX").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),
"TXPIN").appendField("baud").appendField(new Blockly.FieldDropdown([["9600","9600"],["2400","2400"],["4800","4800"],["19200","19200"]]),"BAUD");this.setFieldValue(d,"BAUD");c&&c===a&&b?this.setFieldValue(b,"TXPIN"):c&&this.setFieldValue(c,"TXPIN")}};
Blockly.propc.GPS_init=function(){var a=this.getFieldValue("TXPIN");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);var b=this.getFieldValue("BAUD");this.disabled||(Blockly.propc.definitions_["include GPS"]='#include "gps.h"');return"gps_open("+a+", 32, "+b+");\npause(100);"};
Blockly.Blocks.GPS_hasFix={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_HASFIX_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS has valid satellite fix");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_hasFix=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["gps_fixValid()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_latitude={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_LAT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS latitude (\u00b5\u00b0)");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_latitude=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["(int) (gps_latitude() * 1000000)",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_longitude={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_LONG_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS longitude (\u00b5\u00b0)");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_longitude=function(){Blockly.propc.definitions_["include GPS"]='#include "gps.h"';return["(int) (gps_longitude() * 1000000)",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_heading={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_HEADING_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS heading (\u00b0)");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_heading=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["(int) gps_heading()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_altitude={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_ALTITUDE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS altitude (cm)");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_altitude=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["(int) (gps_altitude() * 100)",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_satsTracked={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_SATS_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS number of satellites");this.setOutput(!0,"Number");this.setPreviousStatement(!1,null);this.setNextStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.GPS_satsTracked=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["gps_satsTracked()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_velocity={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_GPS_VELOCITY_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS speed in").appendField(new Blockly.FieldDropdown([["mph","MPH"],["knots","KNOTS"]]),"VELOCITYUNITS");this.setOutput(!0,"Number");this.setNextStatement(!1,null);this.setPreviousStatement(!1,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?
this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};Blockly.propc.GPS_velocity=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?"// ERROR: Missing GPS initalize block!":["(int) gps_velocity("+this.getFieldValue("VELOCITYUNITS")+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.GPS_date_time={helpUrl:Blockly.MSG_GPS_HELPURL,init:function(){for(var a=[["UTC+0","0"]],b=-1;0!=b;b--)-12>b&&(b=14),a.push(["UTC"+(-1<b?"+":"")+b.toString(10),b.toString(10)]);this.setTooltip(Blockly.MSG_GPS_VELOCITY_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("GPS current ").appendField(new Blockly.FieldDropdown([["year","GPS_UNIT_YEAR"],["month","GPS_UNIT_MONTH"],["day","GPS_UNIT_DAY"],["hour","GPS_UNIT_HOUR"],["minute","GPS_UNIT_MINUTE"],
["second","GPS_UNIT_SECOND"]],function(a){var b=this.sourceBlock_.getField("ZONE_LABEL"),c=this.sourceBlock_.getField("ZONE_VALUE");"GPS_UNIT_HOUR"===a||"GPS_UNIT_DAY"===a||"GPS_UNIT_MONTH"===a||"GPS_UNIT_YEAR"===a?(b.setVisible(!0),c.setVisible(!0)):(b.setVisible(!1),c.setVisible(!1));var f=this.sourceBlock_;setTimeout(function(){f.render()},200)}),"TIME_UNIT").appendField("time zone","ZONE_LABEL").appendField(new Blockly.FieldDropdown(a),"ZONE_VALUE");this.setOutput(!0,"Number");this.setNextStatement(!1,
null);this.setPreviousStatement(!1,null);this.getField("ZONE_LABEL").setVisible(!1);this.getField("ZONE_VALUE").setVisible(!1)},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("unit",this.getFieldValue("TIME_UNIT"));return a},domToMutation:function(a){a=a.getAttribute("unit");"GPS_UNIT_HOUR"===a||"GPS_UNIT_DAY"===a||"GPS_UNIT_MONTH"===a||"GPS_UNIT_YEAR"===a?(this.getField("ZONE_LABEL").setVisible(!0),this.getField("ZONE_VALUE").setVisible(!0)):(this.getField("ZONE_LABEL").setVisible(!1),
this.getField("ZONE_VALUE").setVisible(!1))},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize")?this.setWarningText("WARNING: You must use a GPS module\ninitialize block at the beginning of your program!"):this.setWarningText(null)}};
Blockly.propc.GPS_date_time=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("GPS module initialize"))return"// ERROR: Missing GPS initalize block!";var a=this.getFieldValue("TIME_UNIT"),b="0";if("GPS_UNIT_HOUR"===a||"GPS_UNIT_DAY"===a||"GPS_UNIT_MONTH"===a||"GPS_UNIT_YEAR"===a)b=this.getFieldValue("ZONE_VALUE");Blockly.propc.definitions_["include GPS"]='#include "gps.h"';Blockly.propc.definitions_.GPS_dateTime_units="#define GPS_UNIT_YEAR     1\n#define GPS_UNIT_DAY      2\n#define GPS_UNIT_MONTH    3\n#define GPS_UNIT_HOUR     4\n#define GPS_UNIT_MINUTE   5\n#define GPS_UNIT_SECOND   6\n";
this.disabled||(Blockly.propc.methods_.gps_time_func="int gps_dateTimeByUnit(char __u, int __z){int __gpsTime = gps_rawTime();int __gpsDate = gps_rawDate();\nint __monthDays[13] = {31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nint __gpsDay = __gpsDate / 10000;\nint __gpsMonth = __gpsDate / 100 - (__gpsDate / 10000) * 100;\nint __gpsYear = __gpsDate - (__gpsDate / 100) * 100;\nif (__gpsYear % 4 == 0) __monthDays[2] = 29;\nint __gpsHour = __gpsTime / 10000 + __z;\nif (__gpsHour < 0) { __gpsHour += 24; __gpsDay--; }\nif (__gpsHour > 23) { __gpsHour -= 24; __gpsDay++; }\nif (__gpsDay > __monthDays[__gpsMonth]) { __gpsDay = 1; __gpsMonth++; }\nif (__gpsDay < 1) { __gpsMonth--; __gpsDay = __monthDays[__gpsMonth]; }\nif (__gpsMonth < 1) { __gpsYear--; __gpsMonth = 12; }\nif (__gpsMonth > 12) { __gpsYear++; __gpsMonth = 1; }\nswitch (__u){case GPS_UNIT_DAY:return __gpsDay;break;\ncase GPS_UNIT_MONTH:\nreturn __gpsMonth;break;\ncase GPS_UNIT_YEAR:\nreturn __gpsYear;break;\ncase GPS_UNIT_HOUR:\nreturn __gpsHour;break;\ncase GPS_UNIT_MINUTE:\nreturn __gpsTime / 100 - (__gpsTime / 10000) * 100;break;\ncase GPS_UNIT_SECOND:\nreturn __gpsTime - (__gpsTime / 100) * 100;break;\ndefault:\nreturn -1;break;}}",
Blockly.propc.method_declarations_.gps_time_func="int gps_dateTimeByUnit(char __u, int __z);\n");return["gps_dateTimeByUnit("+a+", "+b+")",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.rfid_get={helpUrl:Blockly.MSG_RFID_HELPURL,init:function(){this.setTooltip(Blockly.MSG_RFID_GET_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("RFID store reading in").appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"BUFFER");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize")?this.setWarningText("WARNING: You must use an RFID\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};
Blockly.propc.rfid_get=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize"))return"// ERROR: Missing RFID initalize block!";var a=Blockly.propc.variableDB_.getName(this.getFieldValue("BUFFER"),Blockly.Variables.NAME_TYPE);this.disabled||(Blockly.propc.global_vars_.rfid_buffer="char *rfidBfr;",Blockly.propc.definitions_.rfidser='#include "rfidser.h"');return'rfidBfr = rfid_get(rfid, 500);\n\tsscan(&rfidBfr[2], "%x", &'+a+");\n\tif("+a+" == 237) "+a+" = 0;"};
Blockly.Blocks.rfid_disable={helpUrl:Blockly.MSG_RFID_HELPURL,init:function(){this.setTooltip(Blockly.MSG_RFID_DISABLE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("RFID").appendField(new Blockly.FieldDropdown([["disable","DISABLE"],["enable","ENABLE"]]),"ACTION");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize")?this.setWarningText("WARNING: You must use an RFID\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.rfid_disable=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize"))return"// ERROR: Missing RFID initalize block!";var a=this.getFieldValue("ACTION");this.disabled||(Blockly.propc.definitions_.rfidser='#include "rfidser.h"');return"ENABLE"===a?"rfid_enable(rfid);":"rfid_disable(rfid);"};
Blockly.Blocks.rfid_enable={helpUrl:Blockly.MSG_RFID_HELPURL,init:function(){this.setTooltip(Blockly.MSG_RFID_ENABLE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.sound_impact_run.updateConstMenu,setPinMenus:function(a,b){var c=this.getFieldValue("PIN_IN"),d=this.getFieldValue("PIN_OUT");this.getInput("PINS")&&
this.removeInput("PINS");this.appendDummyInput("PINS").appendField("RFID initialize EN").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN_IN").appendField("SOUT").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"PIN_OUT");c&&c===a&&b?this.setFieldValue(b,"PIN_IN"):c&&this.setFieldValue(c,"PIN_IN");d&&d===a&&b?this.setFieldValue(b,"PIN_OUT"):d&&this.setFieldValue(d,"PIN_OUT")}};
Blockly.propc.rfid_enable=function(){if(!this.disbaled){var a=this.getFieldValue("PIN_IN"),b=this.getFieldValue("PIN_OUT");-1===profile["default"].digital.toString().indexOf(a+","+a)&&(a="MY_"+a);-1===profile["default"].digital.toString().indexOf(b+","+b)&&(b="MY_"+b);Blockly.propc.definitions_.rfidser='#include "rfidser.h"';Blockly.propc.global_vars_.rfidser="rfidser *rfid;";Blockly.propc.setups_.rfidser_setup="rfid = rfid_open("+b+","+a+");"}return""};
Blockly.Blocks.rfid_close={helpUrl:Blockly.MSG_RFID_HELPURL,init:function(){this.setTooltip(Blockly.MSG_RFID_CLOSE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("RFID close");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null)},onchange:function(){-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize")?this.setWarningText("WARNING: You must use an RFID\ninitialize block at the beginning of your program!"):
this.setWarningText(null)}};Blockly.propc.rfid_close=function(){if(-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("RFID initialize"))return"// ERROR: Missing RFID initalize block!";this.disabled||(Blockly.propc.definitions_.rfidser='#include "rfidser.h"');return"rfidser_close(rfid);\n"};
Blockly.Blocks.sirc_get={helpUrl:Blockly.MSG_SONY_REMOTE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_SIRC_GET_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.pinChoices=["PIN"];this.otherPin=[!1];projectData.board&&"heb-wx"===projectData.board?this.appendDummyInput().appendField("Sony Remote value received"):this.addPinMenu("Sony Remote value received from PIN",null,0);this.setInputsInline(!0);this.setPreviousStatement(!1,null);this.setNextStatement(!1,null);this.setOutput(!0,
"Number")},mutationToDom:Blockly.Blocks.sensor_ping.mutationToDom,domToMutation:Blockly.Blocks.sensor_ping.domToMutation,addPinMenu:Blockly.Blocks.sensor_ping.addPinMenu,setToOther:Blockly.Blocks.sensor_ping.setToOther};
Blockly.propc.sirc_get=function(){var a=projectData.board&&"heb-wx"===projectData.board?"23":this.otherPin[0]?Blockly.propc.valueToCode(this,"PIN",Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue("PIN");this.disabled||(Blockly.propc.definitions_.sirc='#include "sirc.h"',Blockly.propc.setups_.sirc="sirc_setTimeout(70);");return["sirc_button("+a+")",Blockly.propc.ORDER_NONE]};
Blockly.Blocks.keypad_initialize={helpUrl:Blockly.MSG_KEYPAD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_KEYPAD_INIT_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput("PINS");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0,null);this.updateConstMenu()},updateConstMenu:Blockly.Blocks.sound_impact_run.updateConstMenu,setPinMenus:function(a,b){for(var c=[],d=0;8>d;d++)c[d]=this.getFieldValue("P"+d.toString(10));this.getInput("PINS")&&
this.removeInput("PINS");this.appendDummyInput("PINS").appendField("4x4 Keypad initialize PINS left").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P0").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P1").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P2").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P3").appendField("|").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),
"P4").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P5").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P6").appendField(new Blockly.FieldDropdown(profile["default"].digital.concat(this.v_list)),"P7").appendField("right");for(d=0;8>d;d++)c[d]&&c[d]===a&&b?this.setFieldValue(b,"P"+d.toString(10)):c[d]&&this.setFieldValue(c[d],"P"+d.toString(10))}};
Blockly.propc.keypad_initialize=function(){if(!this.disabled){for(var a=[],b=0;8>b;b++)a[b]=this.getFieldValue("P"+b),-1===profile["default"].digital.toString().indexOf(a[b]+","+a[b])&&(a[b]="MY_"+a[b]);b="int __rowPins[] = {"+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"};\n";b+="int __colPins[] = {"+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+"};\n";Blockly.propc.definitions_.keypad_lib='#include "keypad.h"';Blockly.propc.global_vars_.keypad_pins=b+"int __buttonVals[] = {1, 2, 3, 'A', 4, 5, 6, 'B', 7, 8, 9, 'C', '*', 0, '#', 'D'};\n";
Blockly.propc.setups_.keypad_init="keypad_setup(4, 4, __rowPins, __colPins, __buttonVals);"}return""};Blockly.Blocks.keypad_read={helpUrl:Blockly.MSG_KEYPAD_HELPURL,init:function(){this.setTooltip(Blockly.MSG_KEYPAD_READ_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("4x4 Keypad");this.setOutput(!0,null)}};
Blockly.propc.keypad_read=function(){return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("Keypad initialize")?"// ERROR: Missing Keypad initalize block!":["keypad_read()",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.dht22_read={helpUrl:Blockly.MSG_TEMPERATURE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DHT22_READ_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.pinChoices=["PIN"];this.otherPin=[!1];this.addPinMenu("Temp & Humidity read PIN",null,0);this.setPreviousStatement(!0,"Block");this.setInputsInline(!0);this.setNextStatement(!0,null)},mutationToDom:Blockly.Blocks.sensor_ping.mutationToDom,domToMutation:Blockly.Blocks.sensor_ping.domToMutation,addPinMenu:Blockly.Blocks.sensor_ping.addPinMenu,
setToOther:Blockly.Blocks.sensor_ping.setToOther};Blockly.propc.dht22_read=function(){this.disabled||(Blockly.propc.definitions_.dht22='#include "dht22.h"');return"dht22_read("+(this.otherPin[0]?Blockly.propc.valueToCode(this,this.pinChoices[0],Blockly.propc.ORDER_ATOMIC)||"0":this.getFieldValue(this.pinChoices[0]))+");"};
Blockly.Blocks.dht22_value={helpUrl:Blockly.MSG_TEMPERATURE_HELPURL,init:function(){this.setTooltip(Blockly.MSG_DHT22_VALUE_TOOLTIP);this.setColour(colorPalette.getColor("input"));this.appendDummyInput().appendField("Temp & Humidity").appendField(new Blockly.FieldDropdown([["temperature (\u00b0F)","Temp,FAHRENHEIT"],["temperature (\u00b0C)","Temp,CELSIUS"],["temperature (Kelvin)","Temp,KELVIN"],["relative humidity (%)","Humidity,"]]),"ACTION").appendField("\u2715 10");this.setInputsInline(!1);this.setOutput(!0,
"Number")}};Blockly.propc.dht22_value=function(){this.disabled||(Blockly.propc.definitions_.dht22='#include "dht22.h"');var a=this.getFieldValue("ACTION").split(",");return["dht22_get"+a[0]+"("+a[1]+")",Blockly.propc.ORDER_ATOMIC]};Blockly.Blocks||(Blockly.Blocks={});var tempArrayNumber=0;Blockly.Blocks.variables_get={helpUrl:Blockly.MSG_VARIABLES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_VARIABLES_GET_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendDummyInput("").appendField(Blockly.LANG_VARIABLES_GET_TITLE_1).appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR");this.setOutput(!0);this.typeCheckRun=null}};
Blockly.Blocks.variables_set={helpUrl:Blockly.MSG_VARIABLES_HELPURL,init:function(){this.setTooltip(Blockly.MSG_VARIABLES_SET_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendValueInput("VALUE").appendField(Blockly.LANG_VARIABLES_SET_TITLE_1).appendField(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),"VAR").appendField("=");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0)}};
Blockly.propc.variables_get=function(){return[Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.propc.ORDER_ATOMIC]};
Blockly.propc.variables_set=function(){var a=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_ASSIGNMENT)||"0",b=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);void 0===Blockly.propc.vartype_[b]?-1<a.indexOf("int")?Blockly.propc.vartype_[b]="int":-1<a.indexOf("float")?(Blockly.propc.vartype_[b]="float",Blockly.propc.varlength_[b]="{{$var_length_"+b+"}};"):-1<a.indexOf("char")?(Blockly.propc.vartype_[b]="char",Blockly.propc.varlength_[b]="{{$var_length_"+
b+"}};"):-1<a.indexOf("char[]")?Blockly.propc.vartype_[b]="char *":-1<a.indexOf('"')&&4>a.indexOf('"')?Blockly.propc.vartype_[b]="char *":-1<a.indexOf(".")?Blockly.propc.vartype_[b]="float":-1<a.indexOf("true")||-1<a.indexOf("false")?Blockly.propc.vartype_[b]="boolean":Blockly.propc.vartype_[b]="int":-1<a.indexOf("int")?Blockly.propc.vartype_[b]="int":-1<a.indexOf("float")?(Blockly.propc.vartype_[b]="float",Blockly.propc.varlength_[b]="{{$var_length_"+b+"}};"):-1<a.indexOf("char")?(Blockly.propc.vartype_[b]=
"char",Blockly.propc.varlength_[b]="{{$var_length_"+b+"}};"):-1<a.indexOf("char[]")&&(Blockly.propc.vartype_[b]="char *");return b+" = "+a+";\n"};
Blockly.Blocks.array_get={helpUrl:Blockly.MSG_ARRAYS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ARRAY_GET_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendValueInput("NUM").setCheck("Number").appendField("array").appendField(new Blockly.FieldDropdown([["list","list"]]),"VAR").appendField("element");this.setInputsInline(!0);this.setOutput(!0,"Number");this.updateArrayMenu()},buildArrayMenu:function(a){var b=this.getInput("NUM").connection.targetConnection;this.getInput("NUM")&&
this.removeInput("NUM");this.appendValueInput("NUM").setCheck("Number").appendField("array").appendField(new Blockly.FieldDropdown(a),"VAR").appendField("element");b&&this.getInput("NUM").connection.connect(b)},updateArrayMenu:function(a,b){for(var c=!0,d=[],e=Blockly.getMainWorkspace().getAllBlocks(),f=0;f<e.length;f++)"array_init"===e[f].type&&(c=e[f].getFieldValue("VAR"),c===a&&b&&(c=b),c&&d.push([c,c]),c=!1);c&&d.push(["list","list"]);e=this.getFieldValue("VAR");d=uniq_fast(d);this.buildArrayMenu(d);
e&&e===a&&b?this.setFieldValue(b,"VAR"):e&&this.setFieldValue(e,"VAR")},onchange:function(){var a=null,b=parseInt(this.getFieldValue("NUM"),10),c=Blockly.getMainWorkspace().getAllBlocks();if(-1<c.toString().indexOf("array initialize "+this.getFieldValue("VAR"))){for(var d="",e=0;e<c.length;e++){var f=c[e].toString().indexOf("array initialize "+this.getFieldValue("VAR"));if(-1<f){d=c[e].toString().substring(f).replace(/[^0-9]/g,"");break}}if(b>=parseInt(d,10)||0>b)a="WARNING: You are trying to get an element from your array that does not exist!"}else a=
'WARNING: The array "'+this.getFieldValue("VAR")+'" has not been initialized!';this.setWarningText(a)}};Blockly.propc.array_get=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),"Array"),b=Blockly.propc.valueToCode(this,"NUM",Blockly.propc.ORDER_NONE)||"0";return[a+"["+b+"]",Blockly.propc.ORDER_ATOMIC]};
Blockly.Blocks.array_init={helpUrl:Blockly.MSG_ARRAYS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ARRAY_INIT_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendDummyInput().appendField("array initialize").appendField(new Blockly.FieldTextInput("list",function(a){a=a.replace(/ /g,"_").replace(/[^a-zA-Z0-9_]/g,"");this.sourceBlock_.sendArrayVal(this.sourceBlock_.getFieldValue("VAR"),a);return a}),"VAR").appendField("with").appendField(new Blockly.FieldNumber("10",null,null,
1),"NUM").appendField("elements");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.sendUpdate=!0},sendArrayVal:function(a,b){if(this.sendUpdate||"-1"===a&&"-1"===b){"-1"===a&&"-1"===b&&(b=a=null);for(var c=Blockly.getMainWorkspace().getAllBlocks(),d=0;d<c.length;d++){var e=c[d].updateArrayMenu;e&&c[d]&&e.call(c[d],a,b)}}this.sendUpdate=!0},onchange:function(a){var b=this.getFieldValue("VAR"),c=Blockly.getMainWorkspace().getAllBlocks().toString();if(a&&a.oldXml){var d=(new XMLSerializer).serializeToString(a.oldXml);
a=d.indexOf('name="VAR');if(-1<a&&-1<d.indexOf("array_init")){var e=d.indexOf("</field",a);a=d.substring(a+11,e);this.sendArrayVal(a,null)}}d=null;a=c.indexOf("array initialize "+b+" with");-1<c.indexOf("array initialize "+b+" with",a+1)&&(d='WARNING! you can only initialize the array "'+b+'" once!');this.setWarningText(d)}};
Blockly.propc.array_init=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),"Array"),b=this.getFieldValue("NUM")||"10";this.disabled||(Blockly.propc.global_vars_["__ARRAY"+a]="int "+a+"["+b+"];");return""};
Blockly.Blocks.array_fill={helpUrl:Blockly.MSG_ARRAYS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ARRAY_FILL_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendDummyInput("NUMS").appendField("array fill").appendField(new Blockly.FieldDropdown([["list","list"]]),"VAR").appendField("with values").appendField(new Blockly.FieldTextInput("10,20,30,40,50"),"NUM");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.updateArrayMenu()},buildArrayMenu:function(a){var b=
this.getFieldValue("NUM")||"10,20,30,40,50";this.getInput("NUMS")&&this.removeInput("NUMS");var c=this.getFieldValue("NUM");this.appendDummyInput("NUMS").appendField("array fill").appendField(new Blockly.FieldDropdown(a||[["list","list"]]),"VAR").appendField("with values").appendField(new Blockly.FieldTextInput(b),"NUM");this.setFieldValue(c,"NUM")},updateArrayMenu:Blockly.Blocks.array_get.updateArrayMenu,onchange:function(){var a=null,b=this.getFieldValue("NUM").split(",").length,c=Blockly.getMainWorkspace().getAllBlocks();
if(-1<c.toString().indexOf("array initialize "+this.getFieldValue("VAR"))){for(var d="",e=0;e<c.length;e++)if(-1<c[e].toString().indexOf("array initialize "+this.getFieldValue("VAR"))){d=c[e].toString().replace(/[^0-9]/g,"");break}b>parseInt(d,10)&&(a="WARNING: You are trying to add more elements to your\narray than you initialized your array with!")}else a='WARNING: The array "'+this.getFieldValue("VAR")+'" has not been initialized!';this.setWarningText(a)}};
Blockly.propc.array_fill=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),"Array"),b=this.getFieldValue("NUM");b=0===b.indexOf("0x")||0<b.indexOf(",0x")?b.replace(/[^0-9xA-Fa-f,-\.]/g,""):b.replace(/[^0-9b,-\.]/g,"");b=b.replace(/,\./g,",0.").replace(/\b\.[0-9-]+,\b/g,",").replace(/\.[0-9],/g,",").replace(/,,/g,",0,").replace(/,\s*$/,"");b=b.split(".")[0];var c=b.replace(/,/g,"");c=b.length-c.length+1;var d="";var e=Blockly.getMainWorkspace().getAllBlocks();if(-1<e.toString().indexOf("array initialize "+
this.getFieldValue("VAR"))){for(var f="",g=0;g<e.length;g++)if(-1<e[g].toString().indexOf("array initialize "+this.getFieldValue("VAR"))){f=e[g].toString().replace(/[^0-9]/g,"");break}e=parseInt(f,10);c>e&&(d+="// WARNING: You are trying to add more elements to your\n//          array than you initialized your array with!\n",c=e);d+="int __tmpArr"+tempArrayNumber.toString()+"[] = {"+b+"};\n";d+="memcpy("+a+", __tmpArr"+tempArrayNumber.toString()+", "+c+" * sizeof(int));\n";tempArrayNumber++}else d=
'// ERROR: The array "'+this.getFieldValue("VAR")+'" has not been initialized!\n';return d};
Blockly.Blocks.array_set={helpUrl:Blockly.MSG_ARRAYS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ARRAY_SET_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendValueInput("NUM").appendField("array").setCheck("Number").appendField(new Blockly.FieldDropdown([["list","list"]]),"VAR").appendField("element");this.appendValueInput("VALUE").setCheck("Number").appendField("=");this.setInputsInline(!0);this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.updateArrayMenu()},
buildArrayMenu:function(a){var b=this.getInput("NUM").connection.targetConnection;this.getInput("NUM")&&this.removeInput("NUM");this.appendValueInput("NUM").appendField("array").setCheck("Number").appendField(new Blockly.FieldDropdown(a||[["list","list"]]),"VAR").appendField("element");this.moveInputBefore("NUM","VALUE");b&&this.getInput("NUM").connection.connect(b)},updateArrayMenu:Blockly.Blocks.array_get.updateArrayMenu,onchange:function(){var a=null,b=null,c=Blockly.propc.valueToCode(this,"NUM",
Blockly.propc.ORDER_NONE)||"0";c.replace(/[^0-9]+/g,"")===c&&(b=parseInt(c));c=Blockly.getMainWorkspace().getAllBlocks();if(-1<c.toString().indexOf("array initialize "+this.getFieldValue("VAR"))){for(var d="",e=0;e<c.length;e++)if(-1<c[e].toString().indexOf("array initialize "+this.getFieldValue("VAR"))){d=c[e].toString().replace(/[^0-9]/g,"");break}b&&(b>=parseInt(d,10)||0>b)&&(a="WARNING: You are trying to set an element\nin your array that does not exist!")}else a='WARNING: The array "'+this.getFieldValue("VAR")+
'" has not been initialized!';this.setWarningText(a)}};
Blockly.propc.array_set=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),"Array"),b=Blockly.propc.valueToCode(this,"NUM",Blockly.propc.ORDER_NONE)||"0",c=Blockly.propc.valueToCode(this,"VALUE",Blockly.propc.ORDER_NONE)||"0",d=a+"["+b+"] = "+c+";\n",e=Blockly.getMainWorkspace().getAllBlocks();if(-1<e.toString().indexOf("array initialize "+this.getFieldValue("VAR"))){for(var f="",g=0;g<e.length;g++)if(-1<e[g].toString().indexOf("array initialize "+this.getFieldValue("VAR"))){f=
e[g].toString().replace(/[^0-9]/g,"");break}if(b.replace(/[^0-9]+/g,"")===b){if(parseInt(b)>=parseInt(f,10)||0>parseInt(b))d="WARNING: You are trying to set an element\nin your array that does not exist!\n"}else d=a+"[constrainInt("+b+", 0, "+(parseInt(f,10)-1).toString(10),d+=")] = "+c+";\n"}else d='WARNING: The array "'+this.getFieldValue("VAR")+'" has not been initialized!\n';return d};
Blockly.Blocks.array_clear={helpUrl:Blockly.MSG_ARRAYS_HELPURL,init:function(){this.setTooltip(Blockly.MSG_ARRAY_CLEAR_TOOLTIP);this.setColour(colorPalette.getColor("variables"));this.appendDummyInput("NUM").appendField("array clear").appendField(new Blockly.FieldDropdown([["list","list"]]),"VAR");this.setPreviousStatement(!0,"Block");this.setNextStatement(!0);this.updateArrayMenu()},buildArrayMenu:function(a){this.getInput("NUM")&&this.removeInput("NUM");this.appendDummyInput("NUM").appendField("array clear").appendField(new Blockly.FieldDropdown(a||
[["list","list"]]),"VAR")},updateArrayMenu:Blockly.Blocks.array_get.updateArrayMenu,onchange:function(){var a=null;-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("array initialize "+this.getFieldValue("VAR"))&&(a='WARNING: The array "'+this.getFieldValue("VAR")+'" has not been initialized!');this.setWarningText(a)}};
Blockly.propc.array_clear=function(){var a=Blockly.propc.variableDB_.getName(this.getFieldValue("VAR"),"Array");return-1===Blockly.getMainWorkspace().getAllBlocks().toString().indexOf("array initialize "+this.getFieldValue("VAR"))?'// ERROR: The array "'+this.getFieldValue("VAR")+'" has not been initialized!\n':"memset("+a+", 0, sizeof "+a+");\n"};